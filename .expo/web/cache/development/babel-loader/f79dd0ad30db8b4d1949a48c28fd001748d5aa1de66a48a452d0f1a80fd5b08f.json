{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from 'react-native-paper';\nimport { circleSize } from \"./timeUtils\";\nimport { useTextColorOnPrimary } from \"../utils\";\nfunction AnalogClockHours(_ref) {\n  var is24Hour = _ref.is24Hour,\n    hours = _ref.hours;\n  var outerRange = getHourNumbers(false, circleSize, 12, 12);\n  var innerRange = getHourNumbers(true, circleSize, 12, 12);\n  var color = useTextColorOnPrimary();\n  return React.createElement(React.Fragment, null, outerRange.map(function (a, i) {\n    return React.createElement(View, {\n      key: i,\n      pointerEvents: \"none\",\n      style: [styles.outerHourRoot, {\n        top: a[1] || 0,\n        left: a[0] || 0\n      }]\n    }, React.createElement(View, {\n      style: styles.outerHourInner\n    }, React.createElement(Text, {\n      maxFontSizeMultiplier: 1.5,\n      style: !is24Hour && i + 1 === hours || hours === i + 1 && hours !== 12 || i + 1 === 12 && hours === 0 ? {\n        color: color\n      } : null,\n      variant: \"bodyLarge\",\n      selectable: false\n    }, is24Hour && i + 1 === 12 ? '00' : i + 1)));\n  }), is24Hour ? innerRange.map(function (a, i) {\n    return React.createElement(View, {\n      key: i,\n      pointerEvents: \"none\",\n      style: [styles.innerHourRoot, {\n        top: a[1] || 0,\n        left: a[0] || 0\n      }]\n    }, React.createElement(View, {\n      style: styles.innerHourInner\n    }, React.createElement(Text, {\n      maxFontSizeMultiplier: 1.5,\n      selectable: false,\n      style: [i + 13 === hours || i + 13 === 24 && hours === 12 ? {\n        color: color\n      } : null],\n      variant: \"bodyLarge\"\n    }, i + 13 === 24 ? '12' : i + 13)));\n  }) : null);\n}\nvar styles = StyleSheet.create({\n  outerHourRoot: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20,\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24\n  },\n  outerHourInner: {\n    borderRadius: 24\n  },\n  innerHourRoot: {\n    position: 'absolute',\n    zIndex: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24\n  },\n  innerHourInner: {\n    borderRadius: 24\n  }\n});\nfunction getHourNumbers(is24Hour, size, count, arrayLength) {\n  var angle = 0;\n  var step = 2 * Math.PI / count;\n  var radius = size / (is24Hour ? 4 : 2.5);\n  angle = -90 * Math.PI / 180 + Math.PI / 6;\n  return Array(arrayLength).fill(true).map(function () {\n    var x = Math.round(size / 2 + radius * Math.cos(angle));\n    var y = Math.round(size / 2 + radius * Math.sin(angle));\n    angle += step;\n    return [x, y];\n  });\n}\nexport default React.memo(AnalogClockHours);","map":{"version":3,"names":["React","View","StyleSheet","Text","circleSize","useTextColorOnPrimary","AnalogClockHours","_ref","is24Hour","hours","outerRange","getHourNumbers","innerRange","color","createElement","Fragment","map","a","i","key","pointerEvents","style","styles","outerHourRoot","top","left","outerHourInner","maxFontSizeMultiplier","variant","selectable","innerHourRoot","innerHourInner","create","position","justifyContent","alignItems","zIndex","width","height","marginLeft","marginTop","borderRadius","size","count","arrayLength","angle","step","Math","PI","radius","Array","fill","x","round","cos","y","sin","memo"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-paper-dates/src/Time/AnalogClockHours.tsx"],"sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport { circleSize } from './timeUtils'\nimport { useTextColorOnPrimary } from '../utils'\n\nfunction AnalogClockHours({\n  is24Hour,\n  hours,\n}: {\n  is24Hour: boolean\n  hours: number\n}) {\n  const outerRange = getHourNumbers(false, circleSize, 12, 12)\n  const innerRange = getHourNumbers(true, circleSize, 12, 12)\n  const color = useTextColorOnPrimary()\n\n  return (\n    <>\n      {outerRange.map((a, i) => (\n        <View\n          key={i}\n          pointerEvents=\"none\"\n          style={[\n            styles.outerHourRoot,\n            {\n              top: a[1] || 0,\n              left: a[0] || 0,\n            },\n          ]}\n        >\n          <View style={styles.outerHourInner}>\n            {/* Display 00 instead of 12 for AM hours */}\n            <Text\n              maxFontSizeMultiplier={1.5}\n              style={\n                (!is24Hour && i + 1 === hours) ||\n                (hours === i + 1 && hours !== 12) ||\n                (i + 1 === 12 && hours === 0)\n                  ? { color }\n                  : null\n              }\n              variant=\"bodyLarge\"\n              selectable={false}\n            >\n              {is24Hour && i + 1 === 12 ? '00' : i + 1}\n            </Text>\n          </View>\n        </View>\n      ))}\n      {is24Hour\n        ? innerRange.map((a, i) => (\n            <View\n              key={i}\n              pointerEvents=\"none\"\n              style={[\n                styles.innerHourRoot,\n                {\n                  top: a[1] || 0,\n                  left: a[0] || 0,\n                },\n              ]}\n            >\n              <View style={styles.innerHourInner}>\n                <Text\n                  maxFontSizeMultiplier={1.5}\n                  selectable={false}\n                  style={[\n                    i + 13 === hours || (i + 13 === 24 && hours === 12)\n                      ? { color }\n                      : null,\n                  ]}\n                  variant=\"bodyLarge\"\n                >\n                  {i + 13 === 24 ? '12' : i + 13}\n                </Text>\n              </View>\n            </View>\n          ))\n        : null}\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  outerHourRoot: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20,\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24,\n  },\n  outerHourInner: { borderRadius: 24 },\n  innerHourRoot: {\n    position: 'absolute',\n    zIndex: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24,\n  },\n  innerHourInner: { borderRadius: 24 },\n})\n\nfunction getHourNumbers(\n  is24Hour: boolean,\n  size: number,\n  count: number,\n  arrayLength: number\n) {\n  let angle = 0\n  let step = (2 * Math.PI) / count\n  let radius = size / (is24Hour ? 4 : 2.5)\n\n  angle = (-90 * Math.PI) / 180 + Math.PI / 6\n\n  return Array(arrayLength)\n    .fill(true)\n    .map(() => {\n      let x = Math.round(size / 2 + radius * Math.cos(angle))\n      let y = Math.round(size / 2 + radius * Math.sin(angle))\n      angle += step\n      return [x, y]\n    })\n}\n\nexport default React.memo(AnalogClockHours)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
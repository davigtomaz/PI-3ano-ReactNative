{"ast":null,"code":"import * as React from 'react';\nimport { useLatest } from \"../utils\";\nexport function showWeekDay(dayIndex, disableWeekDays) {\n  return !(disableWeekDays && disableWeekDays.some(function (di) {\n    return di === dayIndex;\n  }));\n}\nexport function dateToUnix(d) {\n  return Math.round(d.getTime() / 1000);\n}\nexport function addMonths(date, count) {\n  var n = date.getDate();\n  var n2 = new Date(date.getTime());\n  n2.setDate(1);\n  n2.setMonth(n2.getMonth() + count);\n  n2.setDate(Math.min(n, getDaysInMonth({\n    year: n2.getFullYear(),\n    month: n2.getMonth()\n  })));\n  return n2;\n}\nexport function getDaysInMonth(_ref) {\n  var year = _ref.year,\n    month = _ref.month;\n  return [31, isLeapYear({\n    year: year\n  }) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\n}\nexport function getFirstDayOfMonth(_ref2) {\n  var year = _ref2.year,\n    month = _ref2.month;\n  return new Date(year, month, 1).getDay();\n}\nexport function useRangeChecker(validRange) {\n  var validStart = validRange === null || validRange === void 0 ? void 0 : validRange.startDate;\n  var validEnd = validRange === null || validRange === void 0 ? void 0 : validRange.endDate;\n  var startUnix = validStart instanceof Date ? dateToUnix(getStartOfDay(validStart)) : undefined;\n  var endUnix = validEnd instanceof Date ? dateToUnix(getEndOfDay(validEnd)) : undefined;\n  var validDisabledDatesRef = useLatest(validRange === null || validRange === void 0 ? void 0 : validRange.disabledDates);\n  var isWithinValidRange = React.useCallback(function (day) {\n    return isDateWithinOptionalRange(day, {\n      startUnix: startUnix,\n      endUnix: endUnix\n    });\n  }, [startUnix, endUnix]);\n  var isDisabled = React.useCallback(function (day) {\n    return validDisabledDatesRef.current ? validDisabledDatesRef.current.some(function (disabledDate) {\n      return areDatesOnSameDay(disabledDate, day);\n    }) : false;\n  }, [validDisabledDatesRef]);\n  return {\n    isDisabled: isDisabled,\n    isWithinValidRange: isWithinValidRange,\n    validStart: validStart,\n    validEnd: validEnd\n  };\n}\nexport function areDatesOnSameDay(a, b) {\n  if (!b) {\n    return false;\n  }\n  return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n}\nexport function isDateBetween(date, _ref3) {\n  var startDate = _ref3.startDate,\n    endDate = _ref3.endDate;\n  if (!startDate || !endDate) {\n    return false;\n  }\n  return date <= endDate && date >= startDate;\n}\nexport function isDateWithinOptionalRange(date, _ref4) {\n  var startUnix = _ref4.startUnix,\n    endUnix = _ref4.endUnix;\n  var dateUnix = dateToUnix(date);\n  if (startUnix && dateUnix < startUnix) {\n    return false;\n  }\n  if (endUnix && dateUnix > endUnix) {\n    return false;\n  }\n  return true;\n}\nexport function isLeapYear(_ref5) {\n  var year = _ref5.year;\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport var daySize = 46;\nexport var estimatedMonthHeight = 360;\nexport var startAtIndex = 1200;\nexport var totalMonths = startAtIndex * 2;\nexport var beginOffset = estimatedMonthHeight * startAtIndex;\nexport var gridCounts = new Array(totalMonths);\nexport function getGridCount(index) {\n  var cHeight = gridCounts[index];\n  if (cHeight) {\n    return cHeight;\n  }\n  var monthDate = addMonths(new Date(), getRealIndex(index));\n  var h = getGridCountForDate(monthDate);\n  gridCounts[index] = h;\n  return h;\n}\nexport function getGridCountForDate(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth();\n  var daysInMonth = getDaysInMonth({\n    year: year,\n    month: month\n  });\n  var dayOfWeek = getFirstDayOfMonth({\n    year: year,\n    month: month\n  });\n  return Math.ceil((daysInMonth + dayOfWeek) / 7);\n}\nexport function getRealIndex(index) {\n  return index - startAtIndex;\n}\nexport function getInitialIndex(date) {\n  if (!date) {\n    return startAtIndex;\n  }\n  var today = new Date();\n  var months = differenceInMonths(today, date);\n  return startAtIndex + months;\n}\nexport function useInputFormatter(_ref6) {\n  var locale = _ref6.locale;\n  return React.useMemo(function () {\n    return new Intl.DateTimeFormat(locale, {\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric'\n    });\n  }, [locale]);\n}\nexport function getStartOfDay(d) {\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0);\n}\nexport function getEndOfDay(d) {\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59, 59);\n}\nexport function useInputFormat(_ref7) {\n  var formatter = _ref7.formatter,\n    locale = _ref7.locale;\n  return React.useMemo(function () {\n    var inputDate = formatter.format(new Date(2020, 10 - 1, 1));\n    return inputDate.replace('2020', locale === 'pt' ? 'AAAA' : 'YYYY').replace('10', 'MM').replace('01', 'DD');\n  }, [formatter, locale]);\n}\nexport function differenceInMonths(firstDate, secondDate) {\n  var diffMonths = (secondDate.getFullYear() - firstDate.getFullYear()) * 12;\n  diffMonths -= firstDate.getMonth();\n  diffMonths += secondDate.getMonth();\n  return diffMonths;\n}","map":{"version":3,"names":["React","useLatest","showWeekDay","dayIndex","disableWeekDays","some","di","dateToUnix","d","Math","round","getTime","addMonths","date","count","n","getDate","n2","Date","setDate","setMonth","getMonth","min","getDaysInMonth","year","getFullYear","month","_ref","isLeapYear","getFirstDayOfMonth","_ref2","getDay","useRangeChecker","validRange","validStart","startDate","validEnd","endDate","startUnix","getStartOfDay","undefined","endUnix","getEndOfDay","validDisabledDatesRef","disabledDates","isWithinValidRange","useCallback","day","isDateWithinOptionalRange","isDisabled","current","disabledDate","areDatesOnSameDay","a","b","isDateBetween","_ref3","_ref4","dateUnix","_ref5","daySize","estimatedMonthHeight","startAtIndex","totalMonths","beginOffset","gridCounts","Array","getGridCount","index","cHeight","monthDate","getRealIndex","h","getGridCountForDate","daysInMonth","dayOfWeek","ceil","getInitialIndex","today","months","differenceInMonths","useInputFormatter","_ref6","locale","useMemo","Intl","DateTimeFormat","useInputFormat","_ref7","formatter","inputDate","format","replace","firstDate","secondDate","diffMonths"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-paper-dates/src/Date/dateUtils.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useLatest } from '../utils'\nimport type { ValidRangeType } from './Calendar'\n\nexport type DisableWeekDaysType = number[]\n\nexport function showWeekDay(\n  dayIndex: number,\n  disableWeekDays?: DisableWeekDaysType\n): boolean {\n  return !(disableWeekDays && disableWeekDays.some((di) => di === dayIndex))\n}\n\nexport function dateToUnix(d: Date): number {\n  return Math.round(d.getTime() / 1000)\n}\n\nexport function addMonths(date: Date, count: number) {\n  let n = date.getDate()\n  let n2 = new Date(date.getTime())\n  n2.setDate(1)\n  n2.setMonth(n2.getMonth() + count)\n  n2.setDate(\n    Math.min(\n      n,\n      getDaysInMonth({ year: n2.getFullYear(), month: n2.getMonth() })\n    )\n  )\n\n  return n2\n}\n\n// https://stackoverflow.com/a/1185068/2508481\n// pass in any date as parameter anyDateInMonth based on dayjs\nexport function getDaysInMonth({\n  year,\n  month,\n}: {\n  year: number\n  month: number\n}): number {\n  return [\n    31,\n    isLeapYear({ year }) ? 29 : 28,\n    31,\n    30,\n    31,\n    30,\n    31,\n    31,\n    30,\n    31,\n    30,\n    31,\n  ][month]\n}\n\nexport function getFirstDayOfMonth({\n  year,\n  month,\n}: {\n  year: number\n  month: number\n}): number {\n  return new Date(year, month, 1).getDay()\n}\n\nexport function useRangeChecker(validRange: ValidRangeType | undefined) {\n  const validStart = validRange?.startDate\n  const validEnd = validRange?.endDate\n  const startUnix =\n    validStart instanceof Date\n      ? dateToUnix(getStartOfDay(validStart))\n      : undefined\n\n  const endUnix =\n    validEnd instanceof Date ? dateToUnix(getEndOfDay(validEnd)) : undefined\n\n  const validDisabledDatesRef = useLatest(validRange?.disabledDates)\n\n  const isWithinValidRange = React.useCallback(\n    (day: Date) => {\n      return isDateWithinOptionalRange(day, {\n        startUnix: startUnix,\n        endUnix: endUnix,\n      })\n    },\n    [startUnix, endUnix]\n  )\n\n  const isDisabled = React.useCallback(\n    (day: Date) => {\n      return validDisabledDatesRef.current\n        ? validDisabledDatesRef.current.some((disabledDate) =>\n            areDatesOnSameDay(disabledDate, day)\n          )\n        : false\n    },\n    [validDisabledDatesRef]\n  )\n\n  return { isDisabled, isWithinValidRange, validStart, validEnd }\n}\n\nexport function areDatesOnSameDay(a: Date, b?: Date | null | undefined) {\n  if (!b) {\n    return false\n  }\n\n  return (\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  )\n}\n\nexport function isDateBetween(\n  date: Date,\n  {\n    startDate,\n    endDate,\n  }: {\n    startDate?: Date | null | undefined\n    endDate?: Date | null | undefined\n  }\n): boolean {\n  if (!startDate || !endDate) {\n    return false\n  }\n  return date <= endDate && date >= startDate\n}\n\n/**\n * Check if a date is within an optional range.\n *\n * If the range doesn't exist, it defaults to `true`.\n */\nexport function isDateWithinOptionalRange(\n  date: Date,\n  {\n    startUnix,\n    endUnix,\n  }: { startUnix: number | undefined; endUnix: number | undefined }\n) {\n  const dateUnix = dateToUnix(date)\n  // if startUnix is provided and date is before start\n  if (startUnix && dateUnix < startUnix) {\n    return false\n  }\n\n  // if endUnix is provided and date is after end\n  if (endUnix && dateUnix > endUnix) {\n    return false\n  }\n\n  return true\n}\n\nexport function isLeapYear({ year }: { year: number }) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n}\n\nexport const daySize = 46\nexport const estimatedMonthHeight = 360\nexport const startAtIndex = 1200\nexport const totalMonths = startAtIndex * 2\nexport const beginOffset = estimatedMonthHeight * startAtIndex\nexport const gridCounts = new Array<number | undefined>(totalMonths)\n\nexport function getGridCount(index: number) {\n  const cHeight = gridCounts[index]\n  if (cHeight) {\n    return cHeight\n  }\n  const monthDate = addMonths(new Date(), getRealIndex(index))\n  const h = getGridCountForDate(monthDate)\n  gridCounts[index] = h\n  return h\n}\n\nexport function getGridCountForDate(date: Date) {\n  const year = date.getFullYear()\n  const month = date.getMonth()\n  const daysInMonth = getDaysInMonth({ year, month })\n  const dayOfWeek = getFirstDayOfMonth({ year, month })\n  return Math.ceil((daysInMonth + dayOfWeek) / 7)\n}\n\nexport function getRealIndex(index: number) {\n  return index - startAtIndex\n}\n\nexport function getInitialIndex(date: Date | undefined) {\n  if (!date) {\n    return startAtIndex\n  }\n\n  const today = new Date()\n  const months = differenceInMonths(today, date)\n\n  return startAtIndex + months\n}\n\nexport function useInputFormatter({ locale }: { locale: string | undefined }) {\n  return React.useMemo(() => {\n    return new Intl.DateTimeFormat(locale, {\n      month: '2-digit',\n      day: '2-digit',\n      year: 'numeric',\n    })\n  }, [locale])\n}\nexport function getStartOfDay(d: Date): Date {\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0)\n}\nexport function getEndOfDay(d: Date): Date {\n  return new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59, 59)\n}\nexport function useInputFormat({\n  formatter,\n  locale,\n}: {\n  formatter: Intl.DateTimeFormat\n  locale: string | undefined\n}) {\n  return React.useMemo(() => {\n    // TODO: something cleaner and more universal?\n    const inputDate = formatter.format(new Date(2020, 10 - 1, 1))\n    return inputDate\n      .replace('2020', locale === 'pt' ? 'AAAA' : 'YYYY')\n      .replace('10', 'MM')\n      .replace('01', 'DD')\n  }, [formatter, locale])\n}\n\nexport function differenceInMonths(firstDate: Date, secondDate: Date) {\n  let diffMonths = (secondDate.getFullYear() - firstDate.getFullYear()) * 12\n  diffMonths -= firstDate.getMonth()\n  diffMonths += secondDate.getMonth()\n  return diffMonths\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
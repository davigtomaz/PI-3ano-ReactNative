{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Color from \"color\";\nimport patternReg from \"./patternReg\";\nexport default function (colorOrBrush) {\n  if (colorOrBrush === \"none\" || !colorOrBrush) {\n    return null;\n  }\n  if (colorOrBrush === \"currentColor\") {\n    return [2];\n  }\n  try {\n    var matched = colorOrBrush.match(patternReg);\n    if (matched) {\n      return [1, matched[1]];\n    } else {\n      var _Color$rgb$array = Color(colorOrBrush).rgb().array(),\n        _Color$rgb$array2 = _slicedToArray(_Color$rgb$array, 4),\n        r = _Color$rgb$array2[0],\n        g = _Color$rgb$array2[1],\n        b = _Color$rgb$array2[2],\n        _Color$rgb$array2$ = _Color$rgb$array2[3],\n        a = _Color$rgb$array2$ === void 0 ? 1 : _Color$rgb$array2$;\n      return [0, r / 255, g / 255, b / 255, a];\n    }\n  } catch (err) {\n    console.warn(\"\\\"\" + colorOrBrush + \"\\\" is not a valid color or brush\");\n    return null;\n  }\n}","map":{"version":3,"names":["Color","patternReg","colorOrBrush","matched","match","_Color$rgb$array","rgb","array","_Color$rgb$array2","_slicedToArray","r","g","b","_Color$rgb$array2$","a","err","console","warn"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-svg/lib/extract/extractBrush.js"],"sourcesContent":["import Color from \"color\";\nimport patternReg from \"./patternReg\";\n\nexport default function(colorOrBrush) {\n    if (colorOrBrush === \"none\" || !colorOrBrush) {\n        return null;\n    }\n\n    if (colorOrBrush === \"currentColor\") {\n        return [2];\n    }\n    try {\n        const matched = colorOrBrush.match(patternReg);\n        // brush\n        if (matched) {\n            return [1, matched[1]];\n            //todo:\n        } else {\n            // solid color\n            const [r, g, b, a = 1] = Color(colorOrBrush)\n                .rgb()\n                .array();\n            return [0, r / 255, g / 255, b / 255, a];\n        }\n    } catch (err) {\n        console.warn(`\"${colorOrBrush}\" is not a valid color or brush`);\n        return null;\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU;AAEjB,eAAe,UAASC,YAAY,EAAE;EAClC,IAAIA,YAAY,KAAK,MAAM,IAAI,CAACA,YAAY,EAAE;IAC1C,OAAO,IAAI;EACf;EAEA,IAAIA,YAAY,KAAK,cAAc,EAAE;IACjC,OAAO,CAAC,CAAC,CAAC;EACd;EACA,IAAI;IACA,IAAMC,OAAO,GAAGD,YAAY,CAACE,KAAK,CAACH,UAAU,CAAC;IAE9C,IAAIE,OAAO,EAAE;MACT,OAAO,CAAC,CAAC,EAAEA,OAAO,CAAC,CAAC,CAAC,CAAC;IAE1B,CAAC,MAAM;MAEH,IAAAE,gBAAA,GAAyBL,KAAK,CAACE,YAAY,CAAC,CACvCI,GAAG,EAAE,CACLC,KAAK,EAAE;QAAAC,iBAAA,GAAAC,cAAA,CAAAJ,gBAAA;QAFLK,CAAC,GAAAF,iBAAA;QAAEG,CAAC,GAAAH,iBAAA;QAAEI,CAAC,GAAAJ,iBAAA;QAAAK,kBAAA,GAAAL,iBAAA;QAAEM,CAAC,GAAAD,kBAAA,cAAG,CAAC,GAAAA,kBAAA;MAGrB,OAAO,CAAC,CAAC,EAAEH,CAAC,GAAG,GAAG,EAAEC,CAAC,GAAG,GAAG,EAAEC,CAAC,GAAG,GAAG,EAAEE,CAAC,CAAC;IAC5C;EACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,OAAO,CAACC,IAAI,QAAKf,YAAY,sCAAkC;IAC/D,OAAO,IAAI;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
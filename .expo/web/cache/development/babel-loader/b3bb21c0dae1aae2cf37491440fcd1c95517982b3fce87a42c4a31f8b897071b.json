{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport extractFill from \"./extractFill\";\nimport extractStroke from \"./extractStroke\";\nimport extractTransform, { props2transform } from \"./extractTransform\";\nimport extractClipPath from \"./extractClipPath\";\nimport extractResponder from \"./extractResponder\";\nimport extractOpacity from \"./extractOpacity\";\nimport urlRegex from \"./patternReg\";\nexport default function (prop, ref) {\n  var props = _objectSpread(_objectSpread({}, prop.style), prop);\n  var opacity = props.opacity,\n    onLayout = props.onLayout,\n    id = props.id,\n    clipPath = props.clipPath,\n    mask = props.mask;\n  var styleProperties = [];\n  var extractedProps = {\n    opacity: extractOpacity(opacity),\n    propList: styleProperties,\n    onLayout: onLayout\n  };\n  if (id) {\n    extractedProps.name = id;\n  }\n  if (clipPath) {\n    Object.assign(extractedProps, extractClipPath(props));\n  }\n  if (mask) {\n    var matched = mask.match(urlRegex);\n    if (matched) {\n      extractedProps.mask = matched[1];\n    } else {\n      console.warn('Invalid `mask` prop, expected a mask like `\"#id\"`, but got: \"' + mask + '\"');\n    }\n  }\n  Object.assign(extractedProps, extractStroke(props, styleProperties));\n  Object.assign(extractedProps, extractFill(props, styleProperties));\n  extractedProps.matrix = extractTransform(props);\n  Object.assign(extractedProps, props2transform(props));\n  Object.assign(extractedProps, extractResponder(props, ref));\n  return extractedProps;\n}","map":{"version":3,"names":["extractFill","extractStroke","extractTransform","props2transform","extractClipPath","extractResponder","extractOpacity","urlRegex","prop","ref","props","_objectSpread","style","opacity","onLayout","id","clipPath","mask","styleProperties","extractedProps","propList","name","Object","assign","matched","match","console","warn","matrix"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-svg/lib/extract/extractProps.js"],"sourcesContent":["import extractFill from \"./extractFill\";\nimport extractStroke from \"./extractStroke\";\nimport extractTransform, { props2transform } from \"./extractTransform\";\nimport extractClipPath from \"./extractClipPath\";\nimport extractResponder from \"./extractResponder\";\nimport extractOpacity from \"./extractOpacity\";\nimport urlRegex from \"./patternReg\";\n\nexport default function(prop, ref) {\n    const props = { ...prop.style, ...prop };\n    const { opacity, onLayout, id, clipPath, mask } = props;\n    const styleProperties = [];\n\n    const extractedProps = {\n        opacity: extractOpacity(opacity),\n        propList: styleProperties,\n        onLayout,\n    };\n\n    if (id) {\n        extractedProps.name = id;\n    }\n\n    if (clipPath) {\n        Object.assign(extractedProps, extractClipPath(props));\n    }\n\n    if (mask) {\n        const matched = mask.match(urlRegex);\n\n        if (matched) {\n            extractedProps.mask = matched[1];\n        } else {\n            console.warn(\n                'Invalid `mask` prop, expected a mask like `\"#id\"`, but got: \"' +\n                    mask +\n                    '\"',\n            );\n        }\n    }\n\n    Object.assign(extractedProps, extractStroke(props, styleProperties));\n    Object.assign(extractedProps, extractFill(props, styleProperties));\n\n    extractedProps.matrix = extractTransform(props);\n\n    Object.assign(extractedProps, props2transform(props));\n\n    Object.assign(extractedProps, extractResponder(props, ref));\n\n    return extractedProps;\n}\n"],"mappings":";;;AAAA,OAAOA,WAAW;AAClB,OAAOC,aAAa;AACpB,OAAOC,gBAAgB,IAAIC,eAAe;AAC1C,OAAOC,eAAe;AACtB,OAAOC,gBAAgB;AACvB,OAAOC,cAAc;AACrB,OAAOC,QAAQ;AAEf,eAAe,UAASC,IAAI,EAAEC,GAAG,EAAE;EAC/B,IAAMC,KAAK,GAAAC,aAAA,CAAAA,aAAA,KAAQH,IAAI,CAACI,KAAK,GAAKJ,IAAI,CAAE;EACxC,IAAQK,OAAO,GAAmCH,KAAK,CAA/CG,OAAO;IAAEC,QAAQ,GAAyBJ,KAAK,CAAtCI,QAAQ;IAAEC,EAAE,GAAqBL,KAAK,CAA5BK,EAAE;IAAEC,QAAQ,GAAWN,KAAK,CAAxBM,QAAQ;IAAEC,IAAI,GAAKP,KAAK,CAAdO,IAAI;EAC7C,IAAMC,eAAe,GAAG,EAAE;EAE1B,IAAMC,cAAc,GAAG;IACnBN,OAAO,EAAEP,cAAc,CAACO,OAAO,CAAC;IAChCO,QAAQ,EAAEF,eAAe;IACzBJ,QAAQ,EAARA;EACJ,CAAC;EAED,IAAIC,EAAE,EAAE;IACJI,cAAc,CAACE,IAAI,GAAGN,EAAE;EAC5B;EAEA,IAAIC,QAAQ,EAAE;IACVM,MAAM,CAACC,MAAM,CAACJ,cAAc,EAAEf,eAAe,CAACM,KAAK,CAAC,CAAC;EACzD;EAEA,IAAIO,IAAI,EAAE;IACN,IAAMO,OAAO,GAAGP,IAAI,CAACQ,KAAK,CAAClB,QAAQ,CAAC;IAEpC,IAAIiB,OAAO,EAAE;MACTL,cAAc,CAACF,IAAI,GAAGO,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC,MAAM;MACHE,OAAO,CAACC,IAAI,CACR,+DAA+D,GAC3DV,IAAI,GACJ,GAAG,CACV;IACL;EACJ;EAEAK,MAAM,CAACC,MAAM,CAACJ,cAAc,EAAElB,aAAa,CAACS,KAAK,EAAEQ,eAAe,CAAC,CAAC;EACpEI,MAAM,CAACC,MAAM,CAACJ,cAAc,EAAEnB,WAAW,CAACU,KAAK,EAAEQ,eAAe,CAAC,CAAC;EAElEC,cAAc,CAACS,MAAM,GAAG1B,gBAAgB,CAACQ,KAAK,CAAC;EAE/CY,MAAM,CAACC,MAAM,CAACJ,cAAc,EAAEhB,eAAe,CAACO,KAAK,CAAC,CAAC;EAErDY,MAAM,CAACC,MAAM,CAACJ,cAAc,EAAEd,gBAAgB,CAACK,KAAK,EAAED,GAAG,CAAC,CAAC;EAE3D,OAAOU,cAAc;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
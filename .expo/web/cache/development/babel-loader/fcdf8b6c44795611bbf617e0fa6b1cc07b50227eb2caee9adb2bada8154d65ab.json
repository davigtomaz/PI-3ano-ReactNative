{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport PropTypes from 'prop-types';\nimport * as array from 'd3-array';\nimport * as scale from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Svg } from 'react-native-svg';\nimport Path from \"./animated-path\";\nvar AreaStack = function (_PureComponent) {\n  _inherits(AreaStack, _PureComponent);\n  var _super = _createSuper(AreaStack);\n  function AreaStack() {\n    var _this;\n    _classCallCheck(this, AreaStack);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: 0,\n      width: 0\n    });\n    return _this;\n  }\n  _createClass(AreaStack, [{\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n        height = _event$nativeEvent$la.height,\n        width = _event$nativeEvent$la.width;\n      this.setState({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        data = _this$props.data,\n        keys = _this$props.keys,\n        colors = _this$props.colors,\n        animate = _this$props.animate,\n        animationDuration = _this$props.animationDuration,\n        style = _this$props.style,\n        curve = _this$props.curve,\n        numberOfTicks = _this$props.numberOfTicks,\n        _this$props$contentIn = _this$props.contentInset,\n        _this$props$contentIn2 = _this$props$contentIn.top,\n        top = _this$props$contentIn2 === void 0 ? 0 : _this$props$contentIn2,\n        _this$props$contentIn3 = _this$props$contentIn.bottom,\n        bottom = _this$props$contentIn3 === void 0 ? 0 : _this$props$contentIn3,\n        _this$props$contentIn4 = _this$props$contentIn.left,\n        left = _this$props$contentIn4 === void 0 ? 0 : _this$props$contentIn4,\n        _this$props$contentIn5 = _this$props$contentIn.right,\n        right = _this$props$contentIn5 === void 0 ? 0 : _this$props$contentIn5,\n        gridMin = _this$props.gridMin,\n        gridMax = _this$props.gridMax,\n        children = _this$props.children,\n        offset = _this$props.offset,\n        order = _this$props.order,\n        svgs = _this$props.svgs,\n        xAccessor = _this$props.xAccessor,\n        xScale = _this$props.xScale,\n        clampY = _this$props.clampY,\n        clampX = _this$props.clampX;\n      var _this$state = this.state,\n        height = _this$state.height,\n        width = _this$state.width;\n      if (data.length === 0) {\n        return React.createElement(View, {\n          style: style\n        });\n      }\n      var series = shape.stack().keys(keys).order(order).offset(offset)(data);\n      var yValues = array.merge(array.merge(series));\n      var xValues = data.map(function (item, index) {\n        return xAccessor({\n          item: item,\n          index: index\n        });\n      });\n      var yExtent = array.extent([].concat(_toConsumableArray(yValues), [gridMin, gridMax]));\n      var xExtent = array.extent(xValues);\n      var _this$props2 = this.props,\n        _this$props2$yMin = _this$props2.yMin,\n        yMin = _this$props2$yMin === void 0 ? yExtent[0] : _this$props2$yMin,\n        _this$props2$yMax = _this$props2.yMax,\n        yMax = _this$props2$yMax === void 0 ? yExtent[1] : _this$props2$yMax,\n        _this$props2$xMin = _this$props2.xMin,\n        xMin = _this$props2$xMin === void 0 ? xExtent[0] : _this$props2$xMin,\n        _this$props2$xMax = _this$props2.xMax,\n        xMax = _this$props2$xMax === void 0 ? xExtent[1] : _this$props2$xMax;\n      var y = scale.scaleLinear().domain([yMin, yMax]).range([height - bottom, top]).clamp(clampY);\n      var x = xScale().domain([xMin, xMax]).range([left, width - right]).clamp(clampX);\n      var ticks = y.ticks(numberOfTicks);\n      var areas = series.map(function (serie, index) {\n        var path = shape.area().x(function (d, index) {\n          return x(xAccessor({\n            item: d.data,\n            index: index\n          }));\n        }).y0(function (d) {\n          return y(d[0]);\n        }).y1(function (d) {\n          return y(d[1]);\n        }).curve(curve)(data.map(function (_, index) {\n          return serie[index];\n        }));\n        return {\n          path: path,\n          key: keys[index],\n          color: colors[index]\n        };\n      });\n      var extraProps = {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        ticks: ticks,\n        areas: areas\n      };\n      return React.createElement(View, {\n        style: style\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        onLayout: function onLayout(event) {\n          return _this2._onLayout(event);\n        }\n      }, height > 0 && width > 0 && React.createElement(Svg, {\n        style: {\n          height: height,\n          width: width\n        }\n      }, React.Children.map(children, function (child) {\n        if (child && child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n        return null;\n      }), areas.map(function (area, index) {\n        return React.createElement(Path, _extends({\n          key: area.key,\n          fill: area.color\n        }, svgs[index], {\n          animate: animate,\n          animationDuration: animationDuration,\n          d: area.path\n        }));\n      }), React.Children.map(children, function (child) {\n        if (child && !child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n        return null;\n      }))));\n    }\n  }], [{\n    key: \"extractDataPoints\",\n    value: function extractDataPoints(data, keys) {\n      var order = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : shape.stackOrderNone;\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : shape.stackOffsetNone;\n      var series = shape.stack().keys(keys).order(order).offset(offset)(data);\n      return array.merge(array.merge(series));\n    }\n  }]);\n  return AreaStack;\n}(PureComponent);\nAreaStack.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  svgs: PropTypes.arrayOf(PropTypes.object),\n  offset: PropTypes.func,\n  order: PropTypes.func,\n  style: PropTypes.any,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number\n  }),\n  numberOfTicks: PropTypes.number,\n  showGrid: PropTypes.bool,\n  xScale: PropTypes.func,\n  xAccessor: PropTypes.func,\n  yMin: PropTypes.any,\n  yMax: PropTypes.any,\n  xMin: PropTypes.any,\n  xMax: PropTypes.any,\n  clampX: PropTypes.bool,\n  clampY: PropTypes.bool\n};\nAreaStack.defaultProps = {\n  curve: shape.curveLinear,\n  offset: shape.stackOffsetNone,\n  order: shape.stackOrderNone,\n  svgs: [],\n  strokeWidth: 2,\n  contentInset: {},\n  numberOfTicks: 10,\n  showGrid: true,\n  xScale: scale.scaleLinear,\n  xAccessor: function xAccessor(_ref) {\n    var index = _ref.index;\n    return index;\n  }\n};\nexport default AreaStack;","map":{"version":3,"names":["PropTypes","array","scale","shape","React","PureComponent","View","Svg","Path","AreaStack","_PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","height","width","_createClass","key","value","_onLayout","event","_event$nativeEvent$la","nativeEvent","layout","setState","render","_this2","_this$props","props","data","keys","colors","animate","animationDuration","style","curve","numberOfTicks","_this$props$contentIn","contentInset","_this$props$contentIn2","top","_this$props$contentIn3","bottom","_this$props$contentIn4","left","_this$props$contentIn5","right","gridMin","gridMax","children","offset","order","svgs","xAccessor","xScale","clampY","clampX","_this$state","state","createElement","series","stack","yValues","merge","xValues","map","item","index","yExtent","extent","_toConsumableArray","xExtent","_this$props2","_this$props2$yMin","yMin","_this$props2$yMax","yMax","_this$props2$xMin","xMin","_this$props2$xMax","xMax","y","scaleLinear","domain","range","clamp","x","ticks","areas","serie","path","area","d","y0","y1","_","color","extraProps","flex","onLayout","Children","child","belowChart","cloneElement","_extends","fill","extractDataPoints","undefined","stackOrderNone","stackOffsetNone","propTypes","arrayOf","object","isRequired","string","func","any","bool","number","showGrid","defaultProps","curveLinear","strokeWidth","_ref"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-svg-charts/lib/module/stacked-area-chart.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport * as array from 'd3-array'\nimport * as scale from 'd3-scale'\nimport * as shape from 'd3-shape'\nimport React, { PureComponent } from 'react'\nimport { View } from 'react-native'\nimport { Svg } from 'react-native-svg'\nimport Path from './animated-path'\n\nclass AreaStack extends PureComponent {\n    static extractDataPoints(data, keys, order = shape.stackOrderNone, offset = shape.stackOffsetNone) {\n        const series = shape\n            .stack()\n            .keys(keys)\n            .order(order)\n            .offset(offset)(data)\n\n        //double merge arrays to extract just the values\n        return array.merge(array.merge(series))\n    }\n\n    state = {\n        height: 0,\n        width: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    render() {\n        const {\n            data,\n            keys,\n            colors,\n            animate,\n            animationDuration,\n            style,\n            curve,\n            numberOfTicks,\n            contentInset: { top = 0, bottom = 0, left = 0, right = 0 },\n            gridMin,\n            gridMax,\n            children,\n            offset,\n            order,\n            svgs,\n            xAccessor,\n            xScale,\n            clampY,\n            clampX,\n        } = this.props\n\n        const { height, width } = this.state\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const series = shape\n            .stack()\n            .keys(keys)\n            .order(order)\n            .offset(offset)(data)\n\n        //double merge arrays to extract just the yValues\n        const yValues = array.merge(array.merge(series))\n        const xValues = data.map((item, index) => xAccessor({ item, index }))\n\n        const yExtent = array.extent([...yValues, gridMin, gridMax])\n        const xExtent = array.extent(xValues)\n\n        const { yMin = yExtent[0], yMax = yExtent[1], xMin = xExtent[0], xMax = xExtent[1] } = this.props\n\n        //invert range to support svg coordinate system\n        const y = scale\n            .scaleLinear()\n            .domain([yMin, yMax])\n            .range([height - bottom, top])\n            .clamp(clampY)\n\n        const x = xScale()\n            .domain([xMin, xMax])\n            .range([left, width - right])\n            .clamp(clampX)\n\n        const ticks = y.ticks(numberOfTicks)\n\n        const areas = series.map((serie, index) => {\n            const path = shape\n                .area()\n                .x((d, index) => x(xAccessor({ item: d.data, index })))\n                .y0((d) => y(d[0]))\n                .y1((d) => y(d[1]))\n                .curve(curve)(data.map((_, index) => serie[index]))\n\n            return {\n                path,\n                key: keys[index],\n                color: colors[index],\n            }\n        })\n\n        const extraProps = {\n            x,\n            y,\n            width,\n            height,\n            ticks,\n            areas,\n        }\n\n        return (\n            <View style={style}>\n                <View style={{ flex: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {height > 0 && width > 0 && (\n                        <Svg style={{ height, width }}>\n                            {React.Children.map(children, (child) => {\n                                if (child && child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                            {areas.map((area, index) => (\n                                <Path\n                                    key={area.key}\n                                    fill={area.color}\n                                    {...svgs[index]}\n                                    animate={animate}\n                                    animationDuration={animationDuration}\n                                    d={area.path}\n                                />\n                            ))}\n                            {React.Children.map(children, (child) => {\n                                if (child && !child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nAreaStack.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n    colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n    svgs: PropTypes.arrayOf(PropTypes.object),\n    offset: PropTypes.func,\n    order: PropTypes.func,\n    style: PropTypes.any,\n    animate: PropTypes.bool,\n    animationDuration: PropTypes.number,\n    contentInset: PropTypes.shape({\n        top: PropTypes.number,\n        left: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n    }),\n    numberOfTicks: PropTypes.number,\n    showGrid: PropTypes.bool,\n    xScale: PropTypes.func,\n    xAccessor: PropTypes.func,\n\n    yMin: PropTypes.any,\n    yMax: PropTypes.any,\n    xMin: PropTypes.any,\n    xMax: PropTypes.any,\n    clampX: PropTypes.bool,\n    clampY: PropTypes.bool,\n}\n\nAreaStack.defaultProps = {\n    curve: shape.curveLinear,\n    offset: shape.stackOffsetNone,\n    order: shape.stackOrderNone,\n    svgs: [],\n    strokeWidth: 2,\n    contentInset: {},\n    numberOfTicks: 10,\n    showGrid: true,\n    xScale: scale.scaleLinear,\n    xAccessor: ({ index }) => index,\n}\n\nexport default AreaStack\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAAA,OAAAC,IAAA;AAEA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAOC,IAAP;AAAA,IAEMC,SAAN,aAAAC,cAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,cAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAAsC,SAAAA,UAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,SAAA;IAAA,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,SAAAY,MAAA,CAAAL,IAAA;IAAAM,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,YAY1B;MACJa,MAAM,EAAE,CADJ;MAEJC,KAAK,EAAE;IAFH,CAZ0B;IAAA,OAAAd,KAAA;EAAA;EAAAe,YAAA,CAAApB,SAAA;IAAAqB,GAAA;IAAAC,KAAA,EAiBlC,SAAAC,UAAUC,KAAD,EAAQ;MACb,IAAAC,qBAAA,GAIID,KAJJ,CACIE,WAAW,CACPC,MAAM;QAAIT,MAAF,GAAAO,qBAAA,CAAEP,MAAF;QAAUC,KAAA,GAAAM,qBAAA,CAAAN,KAAA;MAG1B,KAAKS,QAAL,CAAc;QAAEV,MAAF,EAAEA,MAAF;QAAUC,KAAA,EAAAA;MAAV,CAAd;IACH;EAAA;IAAAE,GAAA;IAAAC,KAAA,EAED,SAAAO,OAAA,EAAS;MAAA,IAAAC,MAAA;MACL,IAAAC,WAAA,GAoBI,KAAKC,KApBT;QACIC,IADE,GAAAF,WAAA,CACFE,IADE;QAEFC,IAFE,GAAAH,WAAA,CAEFG,IAFE;QAGFC,MAHE,GAAAJ,WAAA,CAGFI,MAHE;QAIFC,OAJE,GAAAL,WAAA,CAIFK,OAJE;QAKFC,iBALE,GAAAN,WAAA,CAKFM,iBALE;QAMFC,KANE,GAAAP,WAAA,CAMFO,KANE;QAOFC,KAPE,GAAAR,WAAA,CAOFQ,KAPE;QAQFC,aARE,GAAAT,WAAA,CAQFS,aARE;QAAAC,qBAAA,GAAAV,WAAA,CASFW,YAAY;QAAAC,sBAAA,GAAAF,qBAAA,CAAIG,GAAG;QAAHA,GAAG,GAAAD,sBAAA,cAAG,CAAR,GAAAA,sBAAA;QAAAE,sBAAA,GAAAJ,qBAAA,CAAWK,MAAM;QAANA,MAAM,GAAAD,sBAAA,cAAG,CAApB,GAAAA,sBAAA;QAAAE,sBAAA,GAAAN,qBAAA,CAAuBO,IAAI;QAAJA,IAAI,GAAAD,sBAAA,cAAG,CAA9B,GAAAA,sBAAA;QAAAE,sBAAA,GAAAR,qBAAA,CAAiCS,KAAK;QAALA,KAAK,GAAAD,sBAAA,cAAG,IAAAA,sBAAA;QACvDE,OAVE,GAAApB,WAAA,CAUFoB,OAVE;QAWFC,OAXE,GAAArB,WAAA,CAWFqB,OAXE;QAYFC,QAZE,GAAAtB,WAAA,CAYFsB,QAZE;QAaFC,MAbE,GAAAvB,WAAA,CAaFuB,MAbE;QAcFC,KAdE,GAAAxB,WAAA,CAcFwB,KAdE;QAeFC,IAfE,GAAAzB,WAAA,CAeFyB,IAfE;QAgBFC,SAhBE,GAAA1B,WAAA,CAgBF0B,SAhBE;QAiBFC,MAjBE,GAAA3B,WAAA,CAiBF2B,MAjBE;QAkBFC,MAlBE,GAAA5B,WAAA,CAkBF4B,MAlBE;QAmBFC,MAAA,GAAA7B,WAAA,CAAA6B,MAAA;MAGJ,IAAAC,WAAA,GAA0B,KAAKC,KAA/B;QAAQ5C,MAAF,GAAA2C,WAAA,CAAE3C,MAAF;QAAUC,KAAA,GAAA0C,WAAA,CAAA1C,KAAA;MAEhB,IAAIc,IAAI,CAACxB,MAAL,KAAgB,CAApB,EAAuB;QACnB,OAAOd,KAAA,CAAAoE,aAAA,CAAClE,IAAD;UAAMyC,KAAK,EAAEA;QAAb,EAAP;MACH;MAED,IAAM0B,MAAM,GAAGtE,KAAK,CACfuE,KADU,GAEV/B,IAFU,CAELA,IAFK,EAGVqB,KAHU,CAGJA,KAHI,EAIVD,MAJU,CAIHA,MAJG,EAIKrB,IAJL,CAAf;MAOA,IAAMiC,OAAO,GAAG1E,KAAK,CAAC2E,KAAN,CAAY3E,KAAK,CAAC2E,KAAN,CAAYH,MAAZ,CAAZ,CAAhB;MACA,IAAMI,OAAO,GAAGnC,IAAI,CAACoC,GAAL,CAAS,UAACC,IAAD,EAAOC,KAAP;QAAA,OAAiBd,SAAS,CAAC;UAAEa,IAAF,EAAEA,IAAF;UAAQC,KAAA,EAAAA;QAAR,CAAD,CAAnC;MAAA,EAAhB;MAEA,IAAMC,OAAO,GAAGhF,KAAK,CAACiF,MAAN,IAAA1D,MAAA,CAAA2D,kBAAA,CAAiBR,OAAJ,IAAaf,OAAb,EAAsBC,OAAtB,GAA7B;MACA,IAAMuB,OAAO,GAAGnF,KAAK,CAACiF,MAAN,CAAaL,OAAb,CAAhB;MAEA,IAAAQ,YAAA,GAAuF,KAAK5C,KAA5F;QAAA6C,iBAAA,GAAAD,YAAA,CAAQE,IAAI;QAAJA,IAAI,GAAAD,iBAAA,cAAGL,OAAO,CAAC,CAAD,CAAhB,GAAAK,iBAAA;QAAAE,iBAAA,GAAAH,YAAA,CAAqBI,IAAI;QAAJA,IAAI,GAAAD,iBAAA,cAAGP,OAAO,CAAC,CAAD,CAAnC,GAAAO,iBAAA;QAAAE,iBAAA,GAAAL,YAAA,CAAwCM,IAAI;QAAJA,IAAI,GAAAD,iBAAA,cAAGN,OAAO,CAAC,CAAD,CAAtD,GAAAM,iBAAA;QAAAE,iBAAA,GAAAP,YAAA,CAA2DQ,IAAI;QAAJA,IAAI,GAAAD,iBAAA,cAAGR,OAAO,CAAC,CAAD,IAAAQ,iBAAA;MAG/E,IAAME,CAAC,GAAG5F,KAAK,CACV6F,WADK,GAELC,MAFK,CAEE,CAACT,IAAD,EAAOE,IAAP,CAFF,EAGLQ,KAHK,CAGC,CAACtE,MAAM,GAAG4B,MAAV,EAAkBF,GAAlB,CAHD,EAIL6C,KAJK,CAIC9B,MAJD,CAAV;MAMA,IAAM+B,CAAC,GAAGhC,MAAM,GACX6B,MADK,CACE,CAACL,IAAD,EAAOE,IAAP,CADF,EAELI,KAFK,CAEC,CAACxC,IAAD,EAAO7B,KAAK,GAAG+B,KAAf,CAFD,EAGLuC,KAHK,CAGC7B,MAHD,CAAV;MAKA,IAAM+B,KAAK,GAAGN,CAAC,CAACM,KAAF,CAAQnD,aAAR,CAAd;MAEA,IAAMoD,KAAK,GAAG5B,MAAM,CAACK,GAAP,CAAW,UAACwB,KAAD,EAAQtB,KAAR,EAAkB;QACvC,IAAMuB,IAAI,GAAGpG,KAAK,CACbqG,IADQ,GAERL,CAFQ,CAEN,UAACM,CAAD,EAAIzB,KAAJ;UAAA,OAAcmB,CAAC,CAACjC,SAAS,CAAC;YAAEa,IAAI,EAAE0B,CAAC,CAAC/D,IAAV;YAAgBsC,KAAA,EAAAA;UAAhB,CAAD,CAAV,CAFT;QAAA,GAGR0B,EAHQ,CAGJ,UAAAD,CAAD;UAAA,OAAOX,CAAC,CAACW,CAAC,CAAC,CAAD,CAAF,CAHH;QAAA,GAIRE,EAJQ,CAIJ,UAAAF,CAAD;UAAA,OAAOX,CAAC,CAACW,CAAC,CAAC,CAAD,CAAF,CAJH;QAAA,GAKRzD,KALQ,CAKFA,KALE,EAKKN,IAAI,CAACoC,GAAL,CAAS,UAAC8B,CAAD,EAAI5B,KAAJ;UAAA,OAAcsB,KAAK,CAACtB,KAAD,CAA5B;QAAA,EALL,CAAb;QAOA,OAAO;UACHuB,IADG,EACHA,IADG;UAEHzE,GAAG,EAAEa,IAAI,CAACqC,KAAD,CAFN;UAGH6B,KAAK,EAAEjE,MAAM,CAACoC,KAAD;QAHV,CAAP;MAKH,CAba,CAAd;MAeA,IAAM8B,UAAU,GAAG;QACfX,CADe,EACfA,CADe;QAEfL,CAFe,EAEfA,CAFe;QAGflE,KAHe,EAGfA,KAHe;QAIfD,MAJe,EAIfA,MAJe;QAKfyE,KALe,EAKfA,KALe;QAMfC,KAAA,EAAAA;MANe,CAAnB;MASA,OACIjG,KAAA,CAAAoE,aAAA,CAAClE,IAAD;QAAMyC,KAAK,EAAEA;MAAb,GACI3C,KAAA,CAAAoE,aAAA,CAAClE,IAAD;QAAMyC,KAAK,EAAE;UAAEgE,IAAI,EAAE;QAAR,CAAb;QAA0BC,QAAQ,EAAG,SAAAA,SAAA/E,KAAD;UAAA,OAAWM,MAAA,CAAKP,SAAL,CAAeC,KAAf;QAAA;MAA/C,GACKN,MAAM,GAAG,CAAT,IAAcC,KAAK,GAAG,CAAtB,IACGxB,KAAA,CAAAoE,aAAA,CAACjE,GAAD;QAAKwC,KAAK,EAAE;UAAEpB,MAAF,EAAEA,MAAF;UAAUC,KAAA,EAAAA;QAAV;MAAZ,GACKxB,KAAK,CAAC6G,QAAN,CAAenC,GAAf,CAAmBhB,QAAnB,EAA8B,UAAAoD,KAAD,EAAW;QACrC,IAAIA,KAAK,IAAIA,KAAK,CAACzE,KAAN,CAAY0E,UAAzB,EAAqC;UACjC,OAAO/G,KAAK,CAACgH,YAAN,CAAmBF,KAAnB,EAA0BJ,UAA1B,CAAP;QACH;QACD,OAAO,IAAP;MACH,CALA,CADL,EAOKT,KAAK,CAACvB,GAAN,CAAU,UAAC0B,IAAD,EAAOxB,KAAP;QAAA,OACP5E,KAAA,CAAAoE,aAAA,CAAChE,IAAD,EAAA6G,QAAA;UACIvF,GAAG,EAAE0E,IAAI,CAAC1E,GADd;UAEIwF,IAAI,EAAEd,IAAI,CAACK;QAFf,GAGQ5C,IAAI,CAACe,KAAD,CAHZ;UAIInC,OAAO,EAAEA,OAJb;UAKIC,iBAAiB,EAAEA,iBALvB;UAMI2D,CAAC,EAAED,IAAI,CAACD;QANZ,GADH;MAAA,EAPL,EAiBKnG,KAAK,CAAC6G,QAAN,CAAenC,GAAf,CAAmBhB,QAAnB,EAA8B,UAAAoD,KAAD,EAAW;QACrC,IAAIA,KAAK,IAAI,CAACA,KAAK,CAACzE,KAAN,CAAY0E,UAA1B,EAAsC;UAClC,OAAO/G,KAAK,CAACgH,YAAN,CAAmBF,KAAnB,EAA0BJ,UAA1B,CAAP;QACH;QACD,OAAO,IAAP;MACH,CALA,CAjBL,CAFR,CADJ,CADJ;IAgCH;EAAA;IAAAhF,GAAA;IAAAC,KAAA,EA3ID,SAAAwF,kBAAyB7E,IAAzB,EAA+BC,IAA/B,EAAmG;MAAA,IAA9DqB,KAAK,GAAA/C,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAuG,SAAA,GAAAvG,SAAA,MAAGd,KAAK,CAACsH,cAAnD;MAAA,IAAmE1D,MAAM,GAAA9C,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAuG,SAAA,GAAAvG,SAAA,MAAGd,KAAK,CAACuH,eAAlF;MACI,IAAMjD,MAAM,GAAGtE,KAAK,CACfuE,KADU,GAEV/B,IAFU,CAELA,IAFK,EAGVqB,KAHU,CAGJA,KAHI,EAIVD,MAJU,CAIHA,MAJG,EAIKrB,IAJL,CAAf;MAOA,OAAOzC,KAAK,CAAC2E,KAAN,CAAY3E,KAAK,CAAC2E,KAAN,CAAYH,MAAZ,CAAZ,CAAP;IACH;EAAA;EAAA,OAAAhE,SAAA;AAAA,EAVmBJ,aAAxB;AA+IAI,SAAS,CAACkH,SAAV,GAAsB;EAClBjF,IAAI,EAAE1C,SAAS,CAAC4H,OAAV,CAAkB5H,SAAS,CAAC6H,MAA5B,EAAoCC,UADxB;EAElBnF,IAAI,EAAE3C,SAAS,CAAC4H,OAAV,CAAkB5H,SAAS,CAAC+H,MAA5B,EAAoCD,UAFxB;EAGlBlF,MAAM,EAAE5C,SAAS,CAAC4H,OAAV,CAAkB5H,SAAS,CAAC+H,MAA5B,EAAoCD,UAH1B;EAIlB7D,IAAI,EAAEjE,SAAS,CAAC4H,OAAV,CAAkB5H,SAAS,CAAC6H,MAA5B,CAJY;EAKlB9D,MAAM,EAAE/D,SAAS,CAACgI,IALA;EAMlBhE,KAAK,EAAEhE,SAAS,CAACgI,IANC;EAOlBjF,KAAK,EAAE/C,SAAS,CAACiI,GAPC;EAQlBpF,OAAO,EAAE7C,SAAS,CAACkI,IARD;EASlBpF,iBAAiB,EAAE9C,SAAS,CAACmI,MATX;EAUlBhF,YAAY,EAAEnD,SAAS,CAACG,KAAV,CAAgB;IAC1BkD,GAAG,EAAErD,SAAS,CAACmI,MADW;IAE1B1E,IAAI,EAAEzD,SAAS,CAACmI,MAFU;IAG1BxE,KAAK,EAAE3D,SAAS,CAACmI,MAHS;IAI1B5E,MAAM,EAAEvD,SAAS,CAACmI;EAJQ,CAAhB,CAVI;EAgBlBlF,aAAa,EAAEjD,SAAS,CAACmI,MAhBP;EAiBlBC,QAAQ,EAAEpI,SAAS,CAACkI,IAjBF;EAkBlB/D,MAAM,EAAEnE,SAAS,CAACgI,IAlBA;EAmBlB9D,SAAS,EAAElE,SAAS,CAACgI,IAnBH;EAqBlBzC,IAAI,EAAEvF,SAAS,CAACiI,GArBE;EAsBlBxC,IAAI,EAAEzF,SAAS,CAACiI,GAtBE;EAuBlBtC,IAAI,EAAE3F,SAAS,CAACiI,GAvBE;EAwBlBpC,IAAI,EAAE7F,SAAS,CAACiI,GAxBE;EAyBlB5D,MAAM,EAAErE,SAAS,CAACkI,IAzBA;EA0BlB9D,MAAM,EAAEpE,SAAS,CAACkI;AA1BA,CAAtB;AA6BAzH,SAAS,CAAC4H,YAAV,GAAyB;EACrBrF,KAAK,EAAE7C,KAAK,CAACmI,WADQ;EAErBvE,MAAM,EAAE5D,KAAK,CAACuH,eAFO;EAGrB1D,KAAK,EAAE7D,KAAK,CAACsH,cAHQ;EAIrBxD,IAAI,EAAE,EAJe;EAKrBsE,WAAW,EAAE,CALQ;EAMrBpF,YAAY,EAAE,EANO;EAOrBF,aAAa,EAAE,EAPM;EAQrBmF,QAAQ,EAAE,IARW;EASrBjE,MAAM,EAAEjE,KAAK,CAAC6F,WATO;EAUrB7B,SAAS,EAAE,SAAAA,UAAAsE,IAAA;IAAA,IAAGxD,KAAA,GAAAwD,IAAA,CAAAxD,KAAA;IAAA,OAAYA,KAAA;EAAA;AAVL,CAAzB;AAaA,eAAevE,SAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
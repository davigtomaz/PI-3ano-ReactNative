{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Children } from \"react\";\nimport _ from \"lodash\";\nimport Color from \"color\";\nimport extractOpacity from \"./extractOpacity\";\nimport extractTransform from \"./extractTransform\";\nimport units from \"../units\";\nvar percentReg = /^([+\\-]?\\d+(?:\\.\\d+)?(?:[eE][+\\-]?\\d+)?)(%?)$/;\nfunction percentToFloat(percent) {\n  var matched = percent.match(percentReg);\n  if (!matched) {\n    console.warn(\"`\" + percent + \"` is not a valid number or percentage string.\");\n    return 0;\n  }\n  return matched[2] ? matched[1] / 100 : +matched[1];\n}\nexport default function (props) {\n  if (!props.id) {\n    return null;\n  }\n  var stops = {};\n  Children.forEach(props.children, function (child) {\n    if (child.props.stopColor && child.props.offset) {\n      var offset = percentToFloat(child.props.offset);\n      stops[offset] = Color(child.props.stopColor).alpha(extractOpacity(child.props.stopOpacity));\n    }\n  });\n  var sorted = _.sortBy(_.map(stops, function (stop, offset) {\n    return {\n      stop: stop,\n      offset: offset\n    };\n  }), \"offset\");\n  var gradient = [];\n  sorted.forEach(function (_ref) {\n    var stop = _ref.stop;\n    var _stop$rgb$array = stop.rgb().array(),\n      _stop$rgb$array2 = _slicedToArray(_stop$rgb$array, 4),\n      r = _stop$rgb$array2[0],\n      g = _stop$rgb$array2[1],\n      b = _stop$rgb$array2[2],\n      _stop$rgb$array2$ = _stop$rgb$array2[3],\n      a = _stop$rgb$array2$ === void 0 ? 1 : _stop$rgb$array2$;\n    gradient.push(r / 255);\n    gradient.push(g / 255);\n    gradient.push(b / 255);\n    gradient.push(a);\n  });\n  gradient.push.apply(gradient, _toConsumableArray(sorted.map(function (_ref2) {\n    var offset = _ref2.offset;\n    return +offset;\n  })));\n  var gradientTransform;\n  if (props.gradientTransform) {\n    gradientTransform = extractTransform(props.gradientTransform);\n  } else if (props.transform) {\n    gradientTransform = extractTransform(props.transform);\n  } else {\n    gradientTransform = extractTransform(props);\n  }\n  return {\n    gradient: gradient,\n    name: props.id,\n    gradientTransform: gradientTransform,\n    gradientUnits: units[props.gradientUnits] || 0\n  };\n}","map":{"version":3,"names":["Children","_","Color","extractOpacity","extractTransform","units","percentReg","percentToFloat","percent","matched","match","console","warn","props","id","stops","forEach","children","child","stopColor","offset","alpha","stopOpacity","sorted","sortBy","map","stop","gradient","_ref","_stop$rgb$array","rgb","array","_stop$rgb$array2","_slicedToArray","r","g","b","_stop$rgb$array2$","a","push","apply","_toConsumableArray","_ref2","gradientTransform","transform","name","gradientUnits"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-svg/lib/extract/extractGradient.js"],"sourcesContent":["import { Children } from \"react\";\nimport _ from \"lodash\";\nimport Color from \"color\";\n\nimport extractOpacity from \"./extractOpacity\";\nimport extractTransform from \"./extractTransform\";\nimport units from \"../units\";\n\nconst percentReg = /^([+\\-]?\\d+(?:\\.\\d+)?(?:[eE][+\\-]?\\d+)?)(%?)$/;\n\nfunction percentToFloat(percent) {\n    const matched = percent.match(percentReg);\n    if (!matched) {\n        console.warn(\n            `\\`${percent}\\` is not a valid number or percentage string.`,\n        );\n        return 0;\n    }\n\n    return matched[2] ? matched[1] / 100 : +matched[1];\n}\n\nexport default function(props) {\n    if (!props.id) {\n        return null;\n    }\n\n    const stops = {};\n    Children.forEach(props.children, child => {\n        if (child.props.stopColor && child.props.offset) {\n            // convert percent to float.\n            const offset = percentToFloat(child.props.offset);\n\n            // add stop\n            //noinspection JSUnresolvedFunction\n            stops[offset] = Color(child.props.stopColor).alpha(\n                extractOpacity(child.props.stopOpacity),\n            );\n        }\n    });\n\n    const sorted = _.sortBy(\n        _.map(stops, (stop, offset) => {\n            return { stop, offset };\n        }),\n        \"offset\",\n    );\n\n    const gradient = [];\n\n    sorted.forEach(({ stop }) => {\n        const [r, g, b, a = 1] = stop.rgb().array();\n        gradient.push(r / 255);\n        gradient.push(g / 255);\n        gradient.push(b / 255);\n        gradient.push(a);\n    });\n\n    gradient.push(...sorted.map(({ offset }) => +offset));\n\n    let gradientTransform;\n    if (props.gradientTransform) {\n        gradientTransform = extractTransform(props.gradientTransform);\n    } else if (props.transform) {\n        gradientTransform = extractTransform(props.transform);\n    } else {\n        gradientTransform = extractTransform(props);\n    }\n\n    return {\n        gradient,\n        name: props.id,\n        gradientTransform,\n        gradientUnits: units[props.gradientUnits] || 0,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
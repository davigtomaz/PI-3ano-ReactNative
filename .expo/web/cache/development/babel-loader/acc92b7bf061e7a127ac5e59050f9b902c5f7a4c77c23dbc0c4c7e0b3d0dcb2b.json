{"ast":null,"code":"import React, { createContext, useContext, useMemo } from 'react';\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nexport var defaultWindowSizes = {\n  base: 0,\n  sm: 600,\n  md: 905,\n  lg: 1240,\n  xl: 1440\n};\nexport var WindowSizeClassContext = createContext('base');\nexport var useWindowSizeClass = function useWindowSizeClass() {\n  return useContext(WindowSizeClassContext);\n};\nexport var WindowSizeClassProvider = function WindowSizeClassProvider(_ref) {\n  var _ref$windowSizes = _ref.windowSizes,\n    windowSizes = _ref$windowSizes === void 0 ? defaultWindowSizes : _ref$windowSizes,\n    children = _ref.children;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var windowSizeClass = useMemo(function () {\n    if (width >= windowSizes.base && width < windowSizes.sm) return 'base';\n    if (width >= windowSizes.sm && width < windowSizes.md) return 'sm';\n    if (width >= windowSizes.md && width < windowSizes.lg) return 'md';\n    if (width >= windowSizes.lg && width < windowSizes.xl) return 'lg';\n    return 'xl';\n  }, [width, windowSizes]);\n  return React.createElement(WindowSizeClassContext.Provider, {\n    value: windowSizeClass\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useContext","useMemo","useWindowDimensions","defaultWindowSizes","base","sm","md","lg","xl","WindowSizeClassContext","useWindowSizeClass","WindowSizeClassProvider","_ref","_ref$windowSizes","windowSizes","children","_useWindowDimensions","width","windowSizeClass","createElement","Provider","value"],"sources":["/home/aluno/PI-3ano-ReactNative/node_modules/@react-native-material/core/lib/module/base/WindowSizeClassContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\nexport type WindowSizeClass = 'base' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport type WindowSizes = Record<WindowSizeClass, number>;\n\nexport const defaultWindowSizes: WindowSizes = { base: 0, sm: 600, md: 905, lg: 1240, xl: 1440 };\n\nexport interface WindowSizeClassProviderProps {\n  windowSizes?: WindowSizes;\n}\n\nexport const WindowSizeClassContext = createContext<WindowSizeClass>('base');\n\nexport const useWindowSizeClass = () => useContext(WindowSizeClassContext);\n\nexport const WindowSizeClassProvider: React.FC<WindowSizeClassProviderProps> = ({\n  windowSizes = defaultWindowSizes,\n  children,\n}) => {\n  const { width } = useWindowDimensions();\n\n  const windowSizeClass: WindowSizeClass = useMemo(() => {\n    if (width >= windowSizes.base && width < windowSizes.sm) return 'base';\n    if (width >= windowSizes.sm && width < windowSizes.md) return 'sm';\n    if (width >= windowSizes.md && width < windowSizes.lg) return 'md';\n    if (width >= windowSizes.lg && width < windowSizes.xl) return 'lg';\n    return 'xl';\n  }, [width, windowSizes]);\n\n  return <WindowSizeClassContext.Provider value={windowSizeClass}>{children}</WindowSizeClassContext.Provider>;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,QAA0D,OAA1D;AAAA,OAAAC,mBAAA;AAOA,OAAO,IAAMC,kBAA+B,GAAG;EAAEC,IAAI,EAAE,CAAR;EAAWC,EAAE,EAAE,GAAf;EAAoBC,EAAE,EAAE,GAAxB;EAA6BC,EAAE,EAAE,IAAjC;EAAuCC,EAAE,EAAE;AAA3C,CAAxC;AAMP,OAAO,IAAMC,sBAAsB,GAAGV,aAAa,CAAkB,MAAlB,CAA5C;AAEP,OAAO,IAAMW,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA;EAAA,OAASV,UAAU,CAACS,sBAAD,CAA3C;AAAA;AAEP,OAAO,IAAME,uBAA+D,GAAG,SAAlEA,uBAA+DA,CAAGC,IAAA,EAGzE;EAAA,IAAAC,gBAAA,GAAAD,IAAA,CAFJE,WAAW;IAAXA,WAAW,GAAAD,gBAAA,cAAGV,kBADgE,GAAAU,gBAAA;IAE9EE,QAAA,GACIH,IAAA,CADJG,QAAA;EAEA,IAAAC,oBAAA,GAAkBd,mBAAmB,EAArC;IAAQe,KAAA,GAAAD,oBAAA,CAAAC,KAAA;EAER,IAAMC,eAAgC,GAAGjB,OAAO,CAAC,YAAM;IACrD,IAAIgB,KAAK,IAAIH,WAAW,CAACV,IAArB,IAA6Ba,KAAK,GAAGH,WAAW,CAACT,EAArD,EAAyD,OAAO,MAAP;IACzD,IAAIY,KAAK,IAAIH,WAAW,CAACT,EAArB,IAA2BY,KAAK,GAAGH,WAAW,CAACR,EAAnD,EAAuD,OAAO,IAAP;IACvD,IAAIW,KAAK,IAAIH,WAAW,CAACR,EAArB,IAA2BW,KAAK,GAAGH,WAAW,CAACP,EAAnD,EAAuD,OAAO,IAAP;IACvD,IAAIU,KAAK,IAAIH,WAAW,CAACP,EAArB,IAA2BU,KAAK,GAAGH,WAAW,CAACN,EAAnD,EAAuD,OAAO,IAAP;IACvD,OAAO,IAAP;EACD,CAN+C,EAM7C,CAACS,KAAD,EAAQH,WAAR,CAN6C,CAAhD;EAQA,OAAOhB,KAAA,CAAAqB,aAAA,CAACV,sBAAD,CAAwBW,QAAxB;IAAiCC,KAAK,EAAEH;EAAxC,GAA0DH,QAA1D,CAAP;AACD,CAfM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
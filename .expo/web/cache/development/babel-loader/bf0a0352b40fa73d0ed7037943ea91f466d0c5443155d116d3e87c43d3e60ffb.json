{"ast":null,"code":"import React, { useEffect, useMemo, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"./Text\";\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\nimport { useStyles } from \"./hooks/use-styles\";\nvar Badge = function Badge(_ref) {\n  var label = _ref.label,\n    _ref$showZero = _ref.showZero,\n    showZero = _ref$showZero === void 0 ? false : _ref$showZero,\n    _ref$max = _ref.max,\n    max = _ref$max === void 0 ? 99 : _ref$max,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'secondary' : _ref$color,\n    tintColor = _ref.tintColor,\n    style = _ref.style,\n    labelStyle = _ref.labelStyle,\n    children = _ref.children;\n  var palette = usePaletteColor(color, tintColor);\n  var styles = useStyles(function () {\n    return {\n      container: {\n        minWidth: 20,\n        height: 20,\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingHorizontal: 6,\n        backgroundColor: palette.main,\n        borderRadius: 10\n      }\n    };\n  }, [palette]);\n  var isVisible = useMemo(function () {\n    return label === 0 ? visible && showZero : visible;\n  }, [label, showZero, visible]);\n  var animated = useRef(new Animated.Value(isVisible ? 1 : 0)).current;\n  useEffect(function () {\n    Animated.timing(animated, {\n      toValue: isVisible ? 1 : 0,\n      duration: 200,\n      useNativeDriver: true\n    }).start();\n  }, [isVisible]);\n  var getLabel = function getLabel() {\n    switch (typeof label) {\n      case 'number':\n      case 'string':\n        return React.createElement(Text, {\n          variant: \"body2\",\n          style: [{\n            color: palette.on\n          }, labelStyle]\n        }, typeof label === 'number' && label > max ? max + \"+\" : label);\n      case 'function':\n        return label({\n          color: palette.on\n        });\n      default:\n        return label;\n    }\n  };\n  return React.createElement(Animated.View, {\n    style: [styles.container, {\n      transform: [{\n        scale: animated\n      }]\n    }, style]\n  }, getLabel(), children);\n};\nexport default Badge;","map":{"version":3,"names":["React","useEffect","useMemo","useRef","Animated","Text","usePaletteColor","useStyles","Badge","_ref","label","_ref$showZero","showZero","_ref$max","max","_ref$visible","visible","_ref$color","color","tintColor","style","labelStyle","children","palette","styles","container","minWidth","height","justifyContent","alignItems","paddingHorizontal","backgroundColor","main","borderRadius","isVisible","animated","Value","current","timing","toValue","duration","useNativeDriver","start","getLabel","createElement","variant","on","View","transform","scale"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/@react-native-material/core/lib/module/Badge.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\nimport { Animated, StyleProp, TextStyle, ViewProps } from 'react-native';\nimport Text from './Text';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BadgeProps {\n  label?: number | string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  showZero?: boolean;\n\n  max?: number;\n\n  visible?: boolean;\n\n  color?: Color;\n\n  tintColor?: Color;\n\n  style?: Animated.AnimatedProps<ViewProps>['style'];\n\n  labelStyle?: StyleProp<TextStyle>;\n}\n\nconst Badge: React.FC<BadgeProps> = ({\n  label,\n  showZero = false,\n  max = 99,\n  visible = true,\n  color = 'secondary',\n  tintColor,\n  style,\n  labelStyle,\n  children,\n}) => {\n  const palette = usePaletteColor(color, tintColor);\n\n  const styles = useStyles(\n    () => ({\n      container: {\n        minWidth: 20,\n        height: 20,\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingHorizontal: 6,\n        backgroundColor: palette.main,\n        borderRadius: 10,\n      },\n    }),\n    [palette]\n  );\n\n  const isVisible = useMemo(() => (label === 0 ? visible && showZero : visible), [label, showZero, visible]);\n\n  const animated = useRef(new Animated.Value(isVisible ? 1 : 0)).current;\n\n  useEffect(() => {\n    Animated.timing(animated, {\n      toValue: isVisible ? 1 : 0,\n      duration: 200,\n      useNativeDriver: true,\n    }).start();\n  }, [isVisible]);\n\n  const getLabel = () => {\n    switch (typeof label) {\n      case 'number':\n      case 'string':\n        return (\n          <Text variant=\"body2\" style={[{ color: palette.on }, labelStyle]}>\n            {typeof label === 'number' && label > max ? `${max}+` : label}\n          </Text>\n        );\n      case 'function':\n        return label({ color: palette.on });\n      default:\n        return label;\n    }\n  };\n\n  return (\n    <Animated.View style={[styles.container, { transform: [{ scale: animated }] }, style]}>\n      {getLabel()}\n      {children}\n    </Animated.View>\n  );\n};\n\nexport default Badge;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,MAApC,QAAkD,OAAlD;AAAA,OAAAC,QAAA;AAEA,OAAOC,IAAP;AACA,SAAgBC,eAAhB;AACA,SAASC,SAAT;AAoBA,IAAMC,KAA2B,GAAG,SAA9BA,KAA2BA,CAAGC,IAAA,EAU9B;EAAA,IATJC,KADmC,GAU/BD,IAAA,CATJC,KADmC;IAAAC,aAAA,GAU/BF,IAAA,CARJG,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,KAFwB,GAAAA,aAAA;IAAAE,QAAA,GAU/BJ,IAAA,CAPJK,GAAG;IAAHA,GAAG,GAAAD,QAAA,cAAG,EAH6B,GAAAA,QAAA;IAAAE,YAAA,GAU/BN,IAAA,CANJO,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,IAJyB,GAAAA,YAAA;IAAAE,UAAA,GAU/BR,IAAA,CALJS,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,WAL2B,GAAAA,UAAA;IAMnCE,SANmC,GAU/BV,IAAA,CAJJU,SANmC;IAOnCC,KAPmC,GAU/BX,IAAA,CAHJW,KAPmC;IAQnCC,UARmC,GAU/BZ,IAAA,CAFJY,UARmC;IASnCC,QAAA,GACIb,IAAA,CADJa,QAAA;EAEA,IAAMC,OAAO,GAAGjB,eAAe,CAACY,KAAD,EAAQC,SAAR,CAA/B;EAEA,IAAMK,MAAM,GAAGjB,SAAS,CACtB;IAAA,OAAO;MACLkB,SAAS,EAAE;QACTC,QAAQ,EAAE,EADD;QAETC,MAAM,EAAE,EAFC;QAGTC,cAAc,EAAE,QAHP;QAITC,UAAU,EAAE,QAJH;QAKTC,iBAAiB,EAAE,CALV;QAMTC,eAAe,EAAER,OAAO,CAACS,IANhB;QAOTC,YAAY,EAAE;MAPL;IADN,CAAP;EAAA,CADsB,EAYtB,CAACV,OAAD,CAZsB,CAAxB;EAeA,IAAMW,SAAS,GAAGhC,OAAO,CAAC;IAAA,OAAOQ,KAAK,KAAK,CAAV,GAAcM,OAAO,IAAIJ,QAAzB,GAAoCI,OAA5C;EAAA,GAAsD,CAACN,KAAD,EAAQE,QAAR,EAAkBI,OAAlB,CAAtD,CAAzB;EAEA,IAAMmB,QAAQ,GAAGhC,MAAM,CAAC,IAAIC,QAAQ,CAACgC,KAAb,CAAmBF,SAAS,GAAG,CAAH,GAAO,CAAnC,CAAD,CAAN,CAA8CG,OAA/D;EAEApC,SAAS,CAAC,YAAM;IACdG,QAAQ,CAACkC,MAAT,CAAgBH,QAAhB,EAA0B;MACxBI,OAAO,EAAEL,SAAS,GAAG,CAAH,GAAO,CADD;MAExBM,QAAQ,EAAE,GAFc;MAGxBC,eAAe,EAAE;IAHO,CAA1B,EAIGC,KAJH;EAKD,CANQ,EAMN,CAACR,SAAD,CANM,CAAT;EAQA,IAAMS,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrB,QAAQ,OAAOjC,KAAf;MACE,KAAK,QAAL;MACA,KAAK,QAAL;QACE,OACEV,KAAA,CAAA4C,aAAA,CAACvC,IAAD;UAAMwC,OAAO,EAAC,OAAd;UAAsBzB,KAAK,EAAE,CAAC;YAAEF,KAAK,EAAEK,OAAO,CAACuB;UAAjB,CAAD,EAAwBzB,UAAxB;QAA7B,GACG,OAAOX,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,GAAGI,GAArC,GAA8CA,GAAI,SAAKJ,KAD1D,CADF;MAKF,KAAK,UAAL;QACE,OAAOA,KAAK,CAAC;UAAEQ,KAAK,EAAEK,OAAO,CAACuB;QAAjB,CAAD,CAAZ;MACF;QACE,OAAOpC,KAAP;IAAA;EAEL,CAdD;EAgBA,OACEV,KAAA,CAAA4C,aAAA,CAACxC,QAAD,CAAU2C,IAAV;IAAe3B,KAAK,EAAE,CAACI,MAAM,CAACC,SAAR,EAAmB;MAAEuB,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAEd;MAAT,CAAD;IAAb,CAAnB,EAAyDf,KAAzD;EAAtB,GACGuB,QAAQ,EADX,EAEGrB,QAFH,CADF;AAMD,CA9DD;AAgEA,eAAed,KAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
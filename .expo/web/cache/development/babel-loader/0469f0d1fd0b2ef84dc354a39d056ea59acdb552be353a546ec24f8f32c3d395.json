{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"cursorColor\", \"underlineColor\", \"outlineColor\", \"activeOutlineColor\", \"outlineStyle\", \"textColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\", \"testID\", \"contentStyle\"],\n  _excluded2 = [\"fontSize\", \"fontWeight\", \"lineHeight\", \"height\", \"backgroundColor\", \"textAlign\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Outline } from \"./Addons/Outline\";\nimport { AdornmentType, AdornmentSide } from \"./Adornment/enums\";\nimport TextInputAdornment, { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from \"./Adornment/TextInputAdornment\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, OUTLINE_MINIMIZED_LABEL_Y_OFFSET, LABEL_PADDING_TOP, MIN_DENSE_HEIGHT_OUTLINED, LABEL_PADDING_TOP_DENSE } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingOut, calculateOutlinedIconAndAffixTopPosition, getOutlinedInputColors, getConstants } from \"./helpers\";\nimport InputLabel from \"./Label/InputLabel\";\nimport LabelBackground from \"./Label/LabelBackground\";\nvar TextInputOutlined = function TextInputOutlined(_ref) {\n  var _affixTopPosition, _onAffixChange, _topPosition;\n  var _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    label = _ref.label,\n    _ref$error = _ref.error,\n    error = _ref$error === void 0 ? false : _ref$error,\n    customSelectionColor = _ref.selectionColor,\n    cursorColor = _ref.cursorColor,\n    _underlineColor = _ref.underlineColor,\n    customOutlineColor = _ref.outlineColor,\n    activeOutlineColor = _ref.activeOutlineColor,\n    outlineStyle = _ref.outlineStyle,\n    textColor = _ref.textColor,\n    dense = _ref.dense,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(NativeTextInput, props);\n    } : _ref$render,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    parentState = _ref.parentState,\n    innerRef = _ref.innerRef,\n    onFocus = _ref.onFocus,\n    forceFocus = _ref.forceFocus,\n    onBlur = _ref.onBlur,\n    onChangeText = _ref.onChangeText,\n    onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n    onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n    onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n    left = _ref.left,\n    right = _ref.right,\n    placeholderTextColor = _ref.placeholderTextColor,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'text-input-outlined' : _ref$testID,\n    contentStyle = _ref.contentStyle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var adornmentConfig = getAdornmentConfig({\n    left: left,\n    right: right\n  });\n  var colors = theme.colors,\n    isV3 = theme.isV3,\n    roundness = theme.roundness;\n  var font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n  var _getConstants = getConstants(isV3),\n    INPUT_PADDING_HORIZONTAL = _getConstants.INPUT_PADDING_HORIZONTAL,\n    MIN_HEIGHT = _getConstants.MIN_HEIGHT,\n    ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET;\n  var _ref3 = StyleSheet.flatten(style) || {},\n    fontSizeStyle = _ref3.fontSize,\n    fontWeight = _ref3.fontWeight,\n    lineHeight = _ref3.lineHeight,\n    height = _ref3.height,\n    _ref3$backgroundColor = _ref3.backgroundColor,\n    backgroundColor = _ref3$backgroundColor === void 0 ? colors === null || colors === void 0 ? void 0 : colors.background : _ref3$backgroundColor,\n    textAlign = _ref3.textAlign,\n    viewStyle = _objectWithoutProperties(_ref3, _excluded2);\n  var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n  var _getOutlinedInputColo = getOutlinedInputColors({\n      activeOutlineColor: activeOutlineColor,\n      customOutlineColor: customOutlineColor,\n      customSelectionColor: customSelectionColor,\n      textColor: textColor,\n      disabled: disabled,\n      error: error,\n      theme: theme\n    }),\n    inputTextColor = _getOutlinedInputColo.inputTextColor,\n    activeColor = _getOutlinedInputColo.activeColor,\n    outlineColor = _getOutlinedInputColo.outlineColor,\n    placeholderColor = _getOutlinedInputColo.placeholderColor,\n    errorColor = _getOutlinedInputColo.errorColor,\n    selectionColor = _getOutlinedInputColo.selectionColor;\n  var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (I18nManager.getConstants().isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2 - (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n  var labelTranslationXOffset = 0;\n  var isAdornmentLeftIcon = adornmentConfig.some(function (_ref2) {\n    var side = _ref2.side,\n      type = _ref2.type;\n    return side === AdornmentSide.Left && type === AdornmentType.Icon;\n  });\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset = (I18nManager.getConstants().isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n  var minInputHeight = (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n  var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n  var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, LABEL_PADDING_TOP);\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    label: label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(dense ? styles.inputOutlinedDense : styles.inputOutlined)\n  };\n  var pad = calculatePadding(paddingSettings);\n  var paddingOut = adjustPaddingOut(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n  var placeholderOpacity = hasActiveOutline ? parentState.labeled : parentState.labelLayout.measured ? 1 : 0;\n  var placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL\n  };\n  var labelBackgroundColor = backgroundColor === 'transparent' ? theme.colors.background : backgroundColor;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    placeholderOpacity: placeholderOpacity,\n    labelError: error,\n    placeholderStyle: placeholderStyle,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor: errorColor,\n    labelTranslationXOffset: labelTranslationXOffset,\n    roundness: roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID: testID,\n    contentStyle: contentStyle,\n    opacity: parentState.value || parentState.focused ? parentState.labelLayout.measured ? 1 : 0 : 1\n  };\n  var minHeight = height || (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT);\n  var outlinedHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP : 0);\n  var leftLayout = parentState.leftLayout,\n    rightLayout = parentState.rightLayout;\n  var leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  var rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  var iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n  });\n  var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    mode: 'outlined',\n    isV3: isV3\n  });\n  var affixTopPosition = (_affixTopPosition = {}, _defineProperty(_affixTopPosition, AdornmentSide.Left, leftAffixTopPosition), _defineProperty(_affixTopPosition, AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n  var onAffixChange = (_onAffixChange = {}, _defineProperty(_onAffixChange, AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty(_onAffixChange, AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n  var adornmentProps = {\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (_topPosition = {}, _defineProperty(_topPosition, AdornmentType.Icon, iconTopPosition), _defineProperty(_topPosition, AdornmentType.Affix, affixTopPosition), _topPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled: disabled\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = _objectSpread(_objectSpread({}, adornmentProps), {}, {\n      left: left,\n      right: right,\n      textStyle: _objectSpread(_objectSpread({}, font), {}, {\n        fontSize: fontSize,\n        lineHeight: lineHeight,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n  return React.createElement(View, {\n    style: viewStyle\n  }, React.createElement(Outline, {\n    isV3: isV3,\n    style: outlineStyle,\n    roundness: roundness,\n    hasActiveOutline: hasActiveOutline,\n    focused: parentState.focused,\n    activeColor: activeColor,\n    outlineColor: outlineColor,\n    backgroundColor: backgroundColor\n  }), React.createElement(View, null, React.createElement(View, {\n    style: [styles.labelContainer, {\n      paddingTop: LABEL_PADDING_TOP,\n      minHeight: minHeight\n    }]\n  }, label ? React.createElement(InputLabel, _extends({\n    labeled: parentState.labeled,\n    error: parentState.error,\n    focused: parentState.focused,\n    wiggle: Boolean(parentState.value && labelProps.labelError),\n    labelLayoutMeasured: parentState.labelLayout.measured,\n    labelLayoutWidth: parentState.labelLayout.width\n  }, labelProps, {\n    labelBackground: LabelBackground,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  })) : null, render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({}, rest), {}, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    editable: !disabled && editable,\n    selectionColor: selectionColor,\n    cursorColor: typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n    placeholderTextColor: placeholderTextColor || placeholderColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, !multiline || multiline && height ? {\n      height: inputHeight\n    } : {}, paddingOut, _objectSpread(_objectSpread({}, font), {}, {\n      fontSize: fontSize,\n      lineHeight: lineHeight,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : I18nManager.getConstants().isRTL ? 'right' : 'left',\n      paddingHorizontal: INPUT_PADDING_HORIZONTAL\n    }), Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput, contentStyle],\n    testID: testID\n  }))), React.createElement(TextInputAdornment, adornmentProps)));\n};\nexport default TextInputOutlined;\nvar styles = StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0\n  },\n  input: {\n    margin: 0,\n    zIndex: 1\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  }\n});","map":{"version":3,"names":["React","View","NativeTextInput","StyleSheet","I18nManager","Platform","Outline","AdornmentType","AdornmentSide","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP_DENSE","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","calculateOutlinedIconAndAffixTopPosition","getOutlinedInputColors","getConstants","InputLabel","LabelBackground","TextInputOutlined","_ref","_affixTopPosition","_onAffixChange","_topPosition","_ref$disabled","disabled","_ref$editable","editable","label","_ref$error","error","customSelectionColor","selectionColor","cursorColor","_underlineColor","underlineColor","customOutlineColor","outlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","_ref$render","render","props","createElement","_ref$multiline","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","_ref$testID","testID","contentStyle","rest","_objectWithoutProperties","_excluded","adornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","_getConstants","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","_ref3","flatten","fontSizeStyle","fontSize","fontWeight","lineHeight","height","_ref3$backgroundColor","backgroundColor","background","textAlign","viewStyle","_excluded2","_getOutlinedInputColo","inputTextColor","activeColor","placeholderColor","errorColor","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","_ref2","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","_objectSpread","baseLabelTranslateY","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelBackgroundColor","labelProps","labelError","wiggleOffsetX","maxFontSizeMultiplier","opacity","value","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","_defineProperty","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","_extends","wiggle","Boolean","labelLayoutMeasured","labelLayoutWidth","labelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","outline","create","paddingBottom","margin","zIndex"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-paper/src/components/TextInput/TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n} from 'react-native';\n\nimport { Outline } from './Addons/Outline';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor: customSelectionColor,\n  cursorColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  contentStyle,\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n    selectionColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    customSelectionColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? parentState.labeled\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelBackgroundColor: ColorValue =\n    backgroundColor === 'transparent'\n      ? theme.colors.background\n      : backgroundColor;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    labelError: error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: labelBackgroundColor,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n    contentStyle,\n    opacity:\n      parentState.value || parentState.focused\n        ? parentState.labelLayout.measured\n          ? 1\n          : 0\n        : 1,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP) : 0);\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    disabled,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          {label ? (\n            <InputLabel\n              labeled={parentState.labeled}\n              error={parentState.error}\n              focused={parentState.focused}\n              wiggle={Boolean(parentState.value && labelProps.labelError)}\n              labelLayoutMeasured={parentState.labelLayout.measured}\n              labelLayoutWidth={parentState.labelLayout.width}\n              {...labelProps}\n              labelBackground={LabelBackground}\n              maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n            />\n          ) : null}\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            editable: !disabled && editable,\n            selectionColor,\n            cursorColor:\n              typeof cursorColor === 'undefined' ? activeColor : cursorColor,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                lineHeight,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.getConstants().isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n              contentStyle,\n            ],\n            testID,\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { IconButton, Text, useTheme, TouchableRipple } from 'react-native-paper';\nimport Day, { EmptyDay } from \"./Day\";\nimport { addMonths, areDatesOnSameDay, daySize, getDaysInMonth, getFirstDayOfMonth, getRealIndex, getGridCount, isDateBetween, gridCounts, showWeekDay, startAtIndex, beginOffset, estimatedMonthHeight, useRangeChecker } from \"./dateUtils\";\nimport { getCalendarHeaderHeight } from \"./CalendarHeader\";\nimport { dayNamesHeight } from \"./DayNames\";\nimport { useTextColorOnPrimary } from \"../utils\";\nfunction Month(props) {\n  var index = props.index,\n    mode = props.mode,\n    date = props.date,\n    dates = props.dates,\n    startDate = props.startDate,\n    endDate = props.endDate,\n    onPressYear = props.onPressYear,\n    selectingYear = props.selectingYear,\n    onPressDate = props.onPressDate,\n    scrollMode = props.scrollMode,\n    primaryColor = props.primaryColor,\n    selectColor = props.selectColor,\n    roundness = props.roundness,\n    disableWeekDays = props.disableWeekDays,\n    locale = props.locale,\n    validRange = props.validRange;\n  var theme = useTheme();\n  var textColorOnPrimary = useTextColorOnPrimary();\n  var realIndex = getRealIndex(index);\n  var isHorizontal = scrollMode === 'horizontal';\n  var _useRangeChecker = useRangeChecker(validRange),\n    isDisabled = _useRangeChecker.isDisabled,\n    isWithinValidRange = _useRangeChecker.isWithinValidRange;\n  var _React$useMemo = React.useMemo(function () {\n      var md = addMonths(new Date(), realIndex);\n      var y = md.getFullYear();\n      var m = md.getMonth();\n      var formatter = new Intl.DateTimeFormat(locale, {\n        month: 'long'\n      });\n      return {\n        monthName: formatter.format(md),\n        month: m,\n        year: y\n      };\n    }, [realIndex, locale]),\n    monthName = _React$useMemo.monthName,\n    month = _React$useMemo.month,\n    year = _React$useMemo.year;\n  var grid = React.useMemo(function () {\n    var today = new Date();\n    var daysInMonth = getDaysInMonth({\n      year: year,\n      month: month\n    });\n    var dayOfWeek = getFirstDayOfMonth({\n      year: year,\n      month: month\n    });\n    var emptyDays = dayOfWeek;\n    return monthGrid(index).map(function (_ref) {\n      var days = _ref.days,\n        weekGrid = _ref.weekGrid;\n      return {\n        weekIndex: weekGrid,\n        generatedDays: days.map(function (_, dayIndex) {\n          var isFirstWeek = weekGrid === 0;\n          var realDayIndex = emptyDays - dayIndex;\n          var beforeWeekDay = isFirstWeek && realDayIndex > 0;\n          var dayOfMonth = weekGrid * 7 + dayIndex - emptyDays + 1;\n          var afterWeekDay = dayOfMonth > daysInMonth;\n          var day = new Date(year, month, dayOfMonth);\n          var isToday = areDatesOnSameDay(day, today);\n          var inRange = false;\n          var disabled = isDisabled(day);\n          var selected = false;\n          var leftCrop = dayOfMonth === 1;\n          var rightCrop = dayOfMonth === daysInMonth;\n          var isFirstDayOfMonth = dayOfMonth === 1;\n          var isLastDayOfMonth = dayOfMonth === daysInMonth;\n          if (mode === 'range') {\n            var selectedStartDay = areDatesOnSameDay(day, startDate);\n            var selectedEndDay = areDatesOnSameDay(day, endDate);\n            selected = selectedStartDay || selectedEndDay;\n            inRange = isDateBetween(day, {\n              startDate: startDate,\n              endDate: endDate\n            });\n            if (selectedStartDay) {\n              leftCrop = true;\n            }\n            if (selectedEndDay) {\n              rightCrop = true;\n            }\n            if (dayIndex === 0 && !selectedStartDay) {\n              leftCrop = false;\n            }\n            if (dayIndex === 6 && !selectedEndDay) {\n              rightCrop = false;\n            }\n            if (isFirstDayOfMonth && selectedEndDay || isLastDayOfMonth && selectedStartDay) {\n              inRange = false;\n            }\n          } else if (mode === 'multiple') {\n            var safeDates = dates || [];\n            selected = safeDates.some(function (d) {\n              return areDatesOnSameDay(day, d);\n            });\n            var yesterday = new Date(year, month, dayOfMonth - 1);\n            var tomorrow = new Date(year, month, dayOfMonth + 1);\n            var yesterdaySelected = safeDates.some(function (d) {\n              return areDatesOnSameDay(d, yesterday);\n            });\n            var tomorrowSelected = safeDates.some(function (d) {\n              return areDatesOnSameDay(d, tomorrow);\n            });\n            if (selected) {\n              if (tomorrowSelected && yesterdaySelected) {\n                inRange = true;\n              }\n              if (tomorrowSelected && !yesterdaySelected) {\n                inRange = true;\n                leftCrop = true;\n              }\n              if (yesterdaySelected && !tomorrowSelected) {\n                inRange = true;\n                rightCrop = true;\n              }\n              if (isFirstDayOfMonth && !tomorrowSelected) {\n                inRange = false;\n              }\n              if (isLastDayOfMonth && !yesterdaySelected) {\n                inRange = false;\n              }\n              if (inRange && !leftCrop && !rightCrop) {\n                selected = false;\n              }\n            }\n          } else if (mode === 'single') {\n            selected = areDatesOnSameDay(day, date);\n          }\n          var isWithinOptionalValidRange = isWithinValidRange(day);\n          if (inRange && !disabled) {\n            disabled = false;\n          }\n          if (!isWithinOptionalValidRange) {\n            disabled = true;\n          }\n          return {\n            beforeWeekDay: beforeWeekDay,\n            afterWeekDay: afterWeekDay,\n            year: year,\n            month: month,\n            dayOfMonth: dayOfMonth,\n            dayIndex: dayIndex,\n            mode: mode,\n            selected: selected,\n            inRange: inRange,\n            leftCrop: leftCrop,\n            rightCrop: rightCrop,\n            isToday: isToday,\n            disabled: disabled\n          };\n        })\n      };\n    });\n  }, [year, month, index, isDisabled, mode, isWithinValidRange, startDate, endDate, dates, date]);\n  var textFont = theme !== null && theme !== void 0 && theme.isV3 ? theme.fonts.titleSmall : theme.fonts.medium;\n  return React.createElement(View, {\n    style: [styles.month, {\n      height: getMonthHeight(scrollMode, index)\n    }]\n  }, React.createElement(View, {\n    style: [styles.monthHeader, isHorizontal ? {\n      marginTop: monthHeaderSingleMarginTop,\n      marginBottom: monthHeaderSingleMarginBottom\n    } : null]\n  }, React.createElement(TouchableRipple, {\n    disabled: !isHorizontal,\n    onPress: isHorizontal ? function () {\n      return onPressYear(year);\n    } : undefined,\n    accessibilityRole: \"button\",\n    accessibilityLabel: monthName + \" \" + year,\n    style: [styles.yearButton, {\n      borderRadius: roundness\n    }]\n  }, React.createElement(View, {\n    style: [styles.yearButtonInner, {\n      borderRadius: roundness\n    }]\n  }, React.createElement(Text, {\n    maxFontSizeMultiplier: 1.5,\n    style: [styles.monthLabel, _objectSpread(_objectSpread({}, textFont), {}, {\n      color: theme.isV3 ? theme.colors.onSurfaceVariant : theme.colors.onSurface\n    })],\n    selectable: false\n  }, monthName, \" \", year), React.createElement(View, {\n    style: isHorizontal ? styles.opacity1 : styles.opacity0\n  }, React.createElement(IconButton, {\n    onPress: isHorizontal ? function () {\n      return onPressYear(year);\n    } : undefined,\n    icon: selectingYear ? theme.isV3 ? 'menu-up' : 'chevron-up' : theme.isV3 ? 'menu-down' : 'chevron-down'\n  }))))), grid.map(function (_ref2) {\n    var weekIndex = _ref2.weekIndex,\n      generatedDays = _ref2.generatedDays;\n    return React.createElement(View, {\n      style: styles.week,\n      key: weekIndex\n    }, generatedDays.filter(function (gd) {\n      return showWeekDay(gd.dayIndex, disableWeekDays);\n    }).map(function (gd) {\n      return gd.beforeWeekDay || gd.afterWeekDay ? React.createElement(EmptyDay, {\n        key: gd.dayIndex\n      }) : React.createElement(Day, {\n        key: gd.dayIndex,\n        theme: theme,\n        day: gd.dayOfMonth,\n        month: gd.month,\n        year: gd.year,\n        selected: gd.selected,\n        inRange: gd.inRange,\n        leftCrop: gd.leftCrop,\n        rightCrop: gd.rightCrop,\n        onPressDate: onPressDate,\n        isToday: gd.isToday,\n        selectColor: selectColor,\n        primaryColor: primaryColor,\n        disabled: gd.disabled,\n        textColorOnPrimary: textColorOnPrimary\n      });\n    }));\n  }));\n}\nexport var weekMargin = 6;\nexport var weekSize = daySize + weekMargin;\nexport var montHeaderHeight = 56;\nexport var monthHeaderSingleMarginTop = 4;\nexport var monthHeaderSingleMarginBottom = 8 + 44 + 12;\nexport var monthHeaderSingleHeight = monthHeaderSingleMarginTop + monthHeaderSingleMarginBottom;\nvar styles = StyleSheet.create({\n  week: {\n    flexDirection: 'row',\n    marginBottom: weekMargin,\n    height: daySize\n  },\n  month: {},\n  monthHeader: {\n    height: montHeaderHeight,\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  monthLabel: {\n    fontSize: 14,\n    opacity: 0.7\n  },\n  yearButton: {\n    alignSelf: 'flex-start',\n    marginLeft: 6\n  },\n  yearButtonInner: {\n    paddingLeft: 16,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  opacity0: {\n    opacity: 0\n  },\n  opacity1: {\n    opacity: 1\n  }\n});\nvar monthGrid = function monthGrid(index) {\n  return Array(getGridCount(index)).fill(null).map(function (_, weekGrid) {\n    var days = Array(7).fill(null);\n    return {\n      weekGrid: weekGrid,\n      days: days\n    };\n  });\n};\nfunction getIndexCount(index) {\n  if (index > startAtIndex) {\n    return index - startAtIndex;\n  }\n  return -(startAtIndex - index);\n}\nfunction weeksOffset(index) {\n  if (index === startAtIndex) {\n    return 0;\n  }\n  var off = 0;\n  if (index > startAtIndex) {\n    for (var i = 0; i < index - startAtIndex; i++) {\n      var cIndex = startAtIndex + i;\n      off += gridCounts[cIndex] || getGridCount(cIndex);\n    }\n  } else {\n    for (var _i = 0; _i < startAtIndex - index; _i++) {\n      var _cIndex = startAtIndex - _i - 1;\n      off -= gridCounts[_cIndex] || getGridCount(_cIndex);\n    }\n  }\n  return off;\n}\nexport function getIndexFromHorizontalOffset(offset, width) {\n  return startAtIndex + Math.floor(offset / width);\n}\nexport function getIndexFromVerticalOffset(offset) {\n  var estimatedIndex = startAtIndex + Math.ceil(offset / estimatedMonthHeight);\n  var realOffset = getVerticalMonthsOffset(estimatedIndex);\n  var difference = (realOffset - beginOffset - offset) / estimatedMonthHeight;\n  if (difference >= 1 || difference <= -1) {\n    estimatedIndex -= Math.floor(difference);\n  }\n  return estimatedIndex;\n}\nexport function getHorizontalMonthOffset(index, width) {\n  if (index < 0) {\n    return 0;\n  }\n  return width * index;\n}\nexport function getVerticalMonthsOffset(index) {\n  var count = getIndexCount(index);\n  var ob = weeksOffset(index);\n  var monthsHeight = weekSize * ob;\n  var c = monthsHeight + count * (dayNamesHeight + montHeaderHeight);\n  return (c || 0) + beginOffset;\n}\nexport function getMonthHeight(scrollMode, index) {\n  var calendarHeight = getCalendarHeaderHeight(scrollMode);\n  var gc = getGridCount(index);\n  var currentMonthHeight = weekSize * gc;\n  var extraHeight = scrollMode === 'horizontal' ? monthHeaderSingleHeight : montHeaderHeight;\n  var c = calendarHeight + currentMonthHeight + extraHeight;\n  return c || 0;\n}\nexport default React.memo(Month);","map":{"version":3,"names":["React","StyleSheet","View","IconButton","Text","useTheme","TouchableRipple","Day","EmptyDay","addMonths","areDatesOnSameDay","daySize","getDaysInMonth","getFirstDayOfMonth","getRealIndex","getGridCount","isDateBetween","gridCounts","showWeekDay","startAtIndex","beginOffset","estimatedMonthHeight","useRangeChecker","getCalendarHeaderHeight","dayNamesHeight","useTextColorOnPrimary","Month","props","index","mode","date","dates","startDate","endDate","onPressYear","selectingYear","onPressDate","scrollMode","primaryColor","selectColor","roundness","disableWeekDays","locale","validRange","theme","textColorOnPrimary","realIndex","isHorizontal","_useRangeChecker","isDisabled","isWithinValidRange","_React$useMemo","useMemo","md","Date","y","getFullYear","m","getMonth","formatter","Intl","DateTimeFormat","month","monthName","format","year","grid","today","daysInMonth","dayOfWeek","emptyDays","monthGrid","map","_ref","days","weekGrid","weekIndex","generatedDays","_","dayIndex","isFirstWeek","realDayIndex","beforeWeekDay","dayOfMonth","afterWeekDay","day","isToday","inRange","disabled","selected","leftCrop","rightCrop","isFirstDayOfMonth","isLastDayOfMonth","selectedStartDay","selectedEndDay","safeDates","some","d","yesterday","tomorrow","yesterdaySelected","tomorrowSelected","isWithinOptionalValidRange","textFont","isV3","fonts","titleSmall","medium","createElement","style","styles","height","getMonthHeight","monthHeader","marginTop","monthHeaderSingleMarginTop","marginBottom","monthHeaderSingleMarginBottom","onPress","undefined","accessibilityRole","accessibilityLabel","yearButton","borderRadius","yearButtonInner","maxFontSizeMultiplier","monthLabel","_objectSpread","color","colors","onSurfaceVariant","onSurface","selectable","opacity1","opacity0","icon","_ref2","week","key","filter","gd","weekMargin","weekSize","montHeaderHeight","monthHeaderSingleHeight","create","flexDirection","justifyContent","overflow","fontSize","opacity","alignSelf","marginLeft","paddingLeft","alignItems","Array","fill","getIndexCount","weeksOffset","off","i","cIndex","getIndexFromHorizontalOffset","offset","width","Math","floor","getIndexFromVerticalOffset","estimatedIndex","ceil","realOffset","getVerticalMonthsOffset","difference","getHorizontalMonthOffset","count","ob","monthsHeight","c","calendarHeight","gc","currentMonthHeight","extraHeight","memo"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-paper-dates/src/Date/Month.tsx"],"sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport {\n  IconButton,\n  Text,\n  useTheme,\n  TouchableRipple,\n  MD2Theme,\n} from 'react-native-paper'\nimport Day, { EmptyDay } from './Day'\n\nimport {\n  addMonths,\n  areDatesOnSameDay,\n  daySize,\n  DisableWeekDaysType,\n  getDaysInMonth,\n  getFirstDayOfMonth,\n  getRealIndex,\n  getGridCount,\n  isDateBetween,\n  gridCounts,\n  showWeekDay,\n  startAtIndex,\n  beginOffset,\n  estimatedMonthHeight,\n  useRangeChecker,\n} from './dateUtils'\nimport { getCalendarHeaderHeight } from './CalendarHeader'\nimport type {\n  CalendarDate,\n  CalendarDates,\n  ModeType,\n  ValidRangeType,\n} from './Calendar'\nimport { dayNamesHeight } from './DayNames'\nimport { useTextColorOnPrimary } from '../utils'\n\ninterface BaseMonthProps {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  disableWeekDays?: DisableWeekDaysType\n  mode: ModeType\n  index: number\n  onPressYear: (year: number) => any\n  selectingYear: boolean\n  onPressDate: (date: Date) => any\n  primaryColor: string\n  selectColor: string\n  roundness: number\n  validRange?: ValidRangeType\n\n  // some of these should be required in final implementation\n  startDate?: CalendarDate\n  endDate?: CalendarDate\n  date?: CalendarDate\n  dates?: CalendarDates\n}\n\ninterface MonthRangeProps extends BaseMonthProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n}\n\ninterface MonthSingleProps extends BaseMonthProps {\n  mode: 'single'\n  date: CalendarDate\n}\n\ninterface MonthMultiProps extends BaseMonthProps {\n  mode: 'multiple'\n  dates: CalendarDates\n}\n\nfunction Month(props: MonthSingleProps | MonthRangeProps | MonthMultiProps) {\n  const {\n    index,\n    mode,\n    date,\n    dates,\n    startDate,\n    endDate,\n    onPressYear,\n    selectingYear,\n    onPressDate,\n    scrollMode,\n    primaryColor,\n    selectColor,\n    roundness,\n    disableWeekDays,\n    locale,\n    validRange,\n  } = props\n  const theme = useTheme()\n  const textColorOnPrimary = useTextColorOnPrimary()\n  const realIndex = getRealIndex(index)\n  const isHorizontal = scrollMode === 'horizontal'\n  const { isDisabled, isWithinValidRange } = useRangeChecker(validRange)\n  const { monthName, month, year } = React.useMemo(() => {\n    const md = addMonths(new Date(), realIndex)\n    const y = md.getFullYear()\n    const m = md.getMonth()\n    const formatter = new Intl.DateTimeFormat(locale, {\n      month: 'long',\n    })\n    return { monthName: formatter.format(md), month: m, year: y }\n  }, [realIndex, locale])\n\n  const grid = React.useMemo(() => {\n    const today = new Date()\n\n    const daysInMonth = getDaysInMonth({ year, month })\n    const dayOfWeek = getFirstDayOfMonth({ year, month })\n    const emptyDays = dayOfWeek\n\n    return monthGrid(index).map(({ days, weekGrid }) => {\n      return {\n        weekIndex: weekGrid,\n        generatedDays: days.map((_, dayIndex) => {\n          const isFirstWeek = weekGrid === 0\n          const realDayIndex = emptyDays - dayIndex\n          const beforeWeekDay = isFirstWeek && realDayIndex > 0\n          const dayOfMonth = weekGrid * 7 + dayIndex - emptyDays + 1\n          const afterWeekDay = dayOfMonth > daysInMonth\n\n          const day = new Date(year, month, dayOfMonth)\n          const isToday = areDatesOnSameDay(day, today)\n\n          let inRange = false\n          let disabled = isDisabled(day)\n          let selected = false\n\n          let leftCrop = dayOfMonth === 1\n          let rightCrop = dayOfMonth === daysInMonth\n\n          const isFirstDayOfMonth = dayOfMonth === 1\n          const isLastDayOfMonth = dayOfMonth === daysInMonth\n\n          if (mode === 'range') {\n            const selectedStartDay = areDatesOnSameDay(day, startDate)\n            const selectedEndDay = areDatesOnSameDay(day, endDate)\n            selected = selectedStartDay || selectedEndDay\n            inRange = isDateBetween(day, {\n              startDate,\n              endDate,\n            })\n            if (selectedStartDay) {\n              leftCrop = true\n            }\n            if (selectedEndDay) {\n              rightCrop = true\n            }\n            if (dayIndex === 0 && !selectedStartDay) {\n              leftCrop = false\n            }\n\n            if (dayIndex === 6 && !selectedEndDay) {\n              rightCrop = false\n            }\n\n            if (\n              (isFirstDayOfMonth && selectedEndDay) ||\n              (isLastDayOfMonth && selectedStartDay)\n            ) {\n              inRange = false\n            }\n          } else if (mode === 'multiple') {\n            const safeDates = dates || []\n            selected = safeDates.some((d) => areDatesOnSameDay(day, d))\n\n            const yesterday = new Date(year, month, dayOfMonth - 1)\n            const tomorrow = new Date(year, month, dayOfMonth + 1)\n\n            const yesterdaySelected = safeDates.some((d) =>\n              areDatesOnSameDay(d, yesterday)\n            )\n            const tomorrowSelected = safeDates.some((d) =>\n              areDatesOnSameDay(d, tomorrow)\n            )\n\n            if (selected) {\n              if (tomorrowSelected && yesterdaySelected) {\n                inRange = true\n              }\n              if (tomorrowSelected && !yesterdaySelected) {\n                inRange = true\n                leftCrop = true\n              }\n\n              if (yesterdaySelected && !tomorrowSelected) {\n                inRange = true\n                rightCrop = true\n              }\n\n              if (isFirstDayOfMonth && !tomorrowSelected) {\n                inRange = false\n              }\n\n              if (isLastDayOfMonth && !yesterdaySelected) {\n                inRange = false\n              }\n\n              if (inRange && !leftCrop && !rightCrop) {\n                selected = false\n              }\n            }\n          } else if (mode === 'single') {\n            selected = areDatesOnSameDay(day, date)\n          }\n\n          const isWithinOptionalValidRange = isWithinValidRange(day)\n\n          if (inRange && !disabled) {\n            disabled = false\n          }\n\n          if (!isWithinOptionalValidRange) {\n            disabled = true\n          }\n\n          return {\n            beforeWeekDay,\n            afterWeekDay,\n            year,\n            month,\n            dayOfMonth,\n            dayIndex,\n            mode,\n            selected,\n            inRange,\n            leftCrop,\n            rightCrop,\n            isToday,\n            disabled,\n          }\n        }),\n      }\n    })\n  }, [\n    year,\n    month,\n    index,\n    isDisabled,\n    mode,\n    isWithinValidRange,\n    startDate,\n    endDate,\n    dates,\n    date,\n  ])\n\n  let textFont = theme?.isV3\n    ? theme.fonts.titleSmall\n    : (theme as any as MD2Theme).fonts.medium\n\n  return (\n    <View style={[styles.month, { height: getMonthHeight(scrollMode, index) }]}>\n      <View\n        style={[\n          styles.monthHeader,\n          isHorizontal\n            ? {\n                marginTop: monthHeaderSingleMarginTop,\n                marginBottom: monthHeaderSingleMarginBottom,\n              }\n            : null,\n        ]}\n      >\n        <TouchableRipple\n          disabled={!isHorizontal}\n          onPress={isHorizontal ? () => onPressYear(year) : undefined}\n          accessibilityRole=\"button\"\n          accessibilityLabel={`${monthName} ${year}`}\n          style={[\n            styles.yearButton,\n            {\n              borderRadius: roundness,\n            },\n          ]}\n        >\n          <View\n            style={[\n              styles.yearButtonInner,\n              {\n                borderRadius: roundness,\n              },\n            ]}\n          >\n            <Text\n              maxFontSizeMultiplier={1.5}\n              style={[\n                styles.monthLabel,\n                {\n                  ...textFont,\n                  color: theme.isV3\n                    ? theme.colors.onSurfaceVariant\n                    : theme.colors.onSurface,\n                },\n              ]}\n              selectable={false}\n            >\n              {monthName} {year}\n            </Text>\n            <View style={isHorizontal ? styles.opacity1 : styles.opacity0}>\n              <IconButton\n                onPress={isHorizontal ? () => onPressYear(year) : undefined}\n                icon={\n                  selectingYear\n                    ? theme.isV3\n                      ? 'menu-up'\n                      : 'chevron-up'\n                    : theme.isV3\n                    ? 'menu-down'\n                    : 'chevron-down'\n                }\n              />\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n      {grid.map(({ weekIndex, generatedDays }) => (\n        <View style={styles.week} key={weekIndex}>\n          {generatedDays\n            .filter((gd) => showWeekDay(gd.dayIndex, disableWeekDays))\n            .map((gd) =>\n              gd.beforeWeekDay || gd.afterWeekDay ? (\n                <EmptyDay key={gd.dayIndex} />\n              ) : (\n                <Day\n                  key={gd.dayIndex}\n                  theme={theme}\n                  day={gd.dayOfMonth}\n                  month={gd.month}\n                  year={gd.year}\n                  selected={gd.selected}\n                  inRange={gd.inRange}\n                  leftCrop={gd.leftCrop}\n                  rightCrop={gd.rightCrop}\n                  onPressDate={onPressDate}\n                  isToday={gd.isToday}\n                  selectColor={selectColor}\n                  primaryColor={primaryColor}\n                  disabled={gd.disabled}\n                  textColorOnPrimary={textColorOnPrimary}\n                />\n              )\n            )}\n        </View>\n      ))}\n    </View>\n  )\n}\n\nexport const weekMargin = 6\nexport const weekSize = daySize + weekMargin\nexport const montHeaderHeight = 56\nexport const monthHeaderSingleMarginTop = 4\nexport const monthHeaderSingleMarginBottom = 8 + 44 + 12\nexport const monthHeaderSingleHeight =\n  monthHeaderSingleMarginTop + monthHeaderSingleMarginBottom\n\nconst styles = StyleSheet.create({\n  week: {\n    flexDirection: 'row',\n    marginBottom: weekMargin,\n    height: daySize,\n  },\n  month: {},\n  monthHeader: {\n    height: montHeaderHeight,\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n  monthLabel: { fontSize: 14, opacity: 0.7 },\n  yearButton: { alignSelf: 'flex-start', marginLeft: 6 },\n  yearButtonInner: {\n    paddingLeft: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  opacity0: { opacity: 0 },\n  opacity1: { opacity: 1 },\n})\n\nconst monthGrid = (index: number) => {\n  return Array(getGridCount(index))\n    .fill(null)\n    .map((_, weekGrid) => {\n      const days = Array(7).fill(null)\n      return { weekGrid, days }\n    })\n}\n\nfunction getIndexCount(index: number): number {\n  if (index > startAtIndex) {\n    return index - startAtIndex\n  }\n\n  return -(startAtIndex - index)\n}\n\nfunction weeksOffset(index: number): number {\n  if (index === startAtIndex) {\n    return 0\n  }\n  let off = 0\n  if (index > startAtIndex) {\n    for (let i = 0; i < index - startAtIndex; i++) {\n      const cIndex = startAtIndex + i\n      off += gridCounts[cIndex] || getGridCount(cIndex)\n    }\n  } else {\n    for (let i = 0; i < startAtIndex - index; i++) {\n      const cIndex = startAtIndex - i - 1\n      off -= gridCounts[cIndex] || getGridCount(cIndex)\n    }\n  }\n  return off\n}\n\nexport function getIndexFromHorizontalOffset(\n  offset: number,\n  width: number\n): number {\n  return startAtIndex + Math.floor(offset / width)\n}\n\nexport function getIndexFromVerticalOffset(offset: number): number {\n  let estimatedIndex = startAtIndex + Math.ceil(offset / estimatedMonthHeight)\n\n  const realOffset = getVerticalMonthsOffset(estimatedIndex)\n  const difference = (realOffset - beginOffset - offset) / estimatedMonthHeight\n  if (difference >= 1 || difference <= -1) {\n    estimatedIndex -= Math.floor(difference)\n  }\n  return estimatedIndex\n}\n\nexport function getHorizontalMonthOffset(index: number, width: number) {\n  if (index < 0) {\n    return 0\n  }\n  return width * index\n}\n\nexport function getVerticalMonthsOffset(index: number) {\n  const count = getIndexCount(index)\n  const ob = weeksOffset(index)\n  const monthsHeight = weekSize * ob\n  const c = monthsHeight + count * (dayNamesHeight + montHeaderHeight)\n\n  return (c || 0) + beginOffset\n}\n\nexport function getMonthHeight(\n  scrollMode: 'horizontal' | 'vertical',\n  index: number\n): number {\n  const calendarHeight = getCalendarHeaderHeight(scrollMode)\n  const gc = getGridCount(index)\n\n  const currentMonthHeight = weekSize * gc\n  const extraHeight =\n    scrollMode === 'horizontal' ? monthHeaderSingleHeight : montHeaderHeight\n  const c = calendarHeight + currentMonthHeight + extraHeight\n  return c || 0\n}\n\nexport default React.memo(Month)\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE9B,SACEC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,eAAe,QAEV,oBAAoB;AAC3B,OAAOC,GAAG,IAAIC,QAAQ;AAEtB,SACEC,SAAS,EACTC,iBAAiB,EACjBC,OAAO,EAEPC,cAAc,EACdC,kBAAkB,EAClBC,YAAY,EACZC,YAAY,EACZC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,oBAAoB,EACpBC,eAAe;AAEjB,SAASC,uBAAuB;AAOhC,SAASC,cAAc;AACvB,SAASC,qBAAqB;AAuC9B,SAASC,KAAKA,CAACC,KAA2D,EAAE;EAC1E,IACEC,KAAK,GAgBHD,KAAK,CAhBPC,KAAK;IACLC,IAAI,GAeFF,KAAK,CAfPE,IAAI;IACJC,IAAI,GAcFH,KAAK,CAdPG,IAAI;IACJC,KAAK,GAaHJ,KAAK,CAbPI,KAAK;IACLC,SAAS,GAYPL,KAAK,CAZPK,SAAS;IACTC,OAAO,GAWLN,KAAK,CAXPM,OAAO;IACPC,WAAW,GAUTP,KAAK,CAVPO,WAAW;IACXC,aAAa,GASXR,KAAK,CATPQ,aAAa;IACbC,WAAW,GAQTT,KAAK,CARPS,WAAW;IACXC,UAAU,GAORV,KAAK,CAPPU,UAAU;IACVC,YAAY,GAMVX,KAAK,CANPW,YAAY;IACZC,WAAW,GAKTZ,KAAK,CALPY,WAAW;IACXC,SAAS,GAIPb,KAAK,CAJPa,SAAS;IACTC,eAAe,GAGbd,KAAK,CAHPc,eAAe;IACfC,MAAM,GAEJf,KAAK,CAFPe,MAAM;IACNC,UAAA,GACEhB,KAAK,CADPgB,UAAA;EAEF,IAAMC,KAAK,GAAGvC,QAAQ,EAAE;EACxB,IAAMwC,kBAAkB,GAAGpB,qBAAqB,EAAE;EAClD,IAAMqB,SAAS,GAAGhC,YAAY,CAACc,KAAK,CAAC;EACrC,IAAMmB,YAAY,GAAGV,UAAU,KAAK,YAAY;EAChD,IAAAW,gBAAA,GAA2C1B,eAAe,CAACqB,UAAU,CAAC;IAA9DM,UAAU,GAAAD,gBAAA,CAAVC,UAAU;IAAEC,kBAAA,GAAAF,gBAAA,CAAAE,kBAAA;EACpB,IAAAC,cAAA,GAAmCnD,KAAK,CAACoD,OAAO,CAAC,YAAM;MACrD,IAAMC,EAAE,GAAG5C,SAAS,CAAC,IAAI6C,IAAI,EAAE,EAAER,SAAS,CAAC;MAC3C,IAAMS,CAAC,GAAGF,EAAE,CAACG,WAAW,EAAE;MAC1B,IAAMC,CAAC,GAAGJ,EAAE,CAACK,QAAQ,EAAE;MACvB,IAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,cAAc,CAACnB,MAAM,EAAE;QAChDoB,KAAK,EAAE;MACT,CAAC,CAAC;MACF,OAAO;QAAEC,SAAS,EAAEJ,SAAS,CAACK,MAAM,CAACX,EAAE,CAAC;QAAES,KAAK,EAAEL,CAAC;QAAEQ,IAAI,EAAEV;MAAE,CAAC;IAC/D,CAAC,EAAE,CAACT,SAAS,EAAEJ,MAAM,CAAC,CAAC;IARfqB,SAAS,GAAAZ,cAAA,CAATY,SAAS;IAAED,KAAK,GAAAX,cAAA,CAALW,KAAK;IAAEG,IAAA,GAAAd,cAAA,CAAAc,IAAA;EAU1B,IAAMC,IAAI,GAAGlE,KAAK,CAACoD,OAAO,CAAC,YAAM;IAC/B,IAAMe,KAAK,GAAG,IAAIb,IAAI,EAAE;IAExB,IAAMc,WAAW,GAAGxD,cAAc,CAAC;MAAEqD,IAAI,EAAJA,IAAI;MAAEH,KAAA,EAAAA;IAAM,CAAC,CAAC;IACnD,IAAMO,SAAS,GAAGxD,kBAAkB,CAAC;MAAEoD,IAAI,EAAJA,IAAI;MAAEH,KAAA,EAAAA;IAAM,CAAC,CAAC;IACrD,IAAMQ,SAAS,GAAGD,SAAS;IAE3B,OAAOE,SAAS,CAAC3C,KAAK,CAAC,CAAC4C,GAAG,CAAC,UAAAC,IAAA,EAAwB;MAAA,IAArBC,IAAI,GAAYD,IAAA,CAAhBC,IAAI;QAAEC,QAAA,GAAUF,IAAA,CAAVE,QAAA;MACnC,OAAO;QACLC,SAAS,EAAED,QAAQ;QACnBE,aAAa,EAAEH,IAAI,CAACF,GAAG,CAAC,UAACM,CAAC,EAAEC,QAAQ,EAAK;UACvC,IAAMC,WAAW,GAAGL,QAAQ,KAAK,CAAC;UAClC,IAAMM,YAAY,GAAGX,SAAS,GAAGS,QAAQ;UACzC,IAAMG,aAAa,GAAGF,WAAW,IAAIC,YAAY,GAAG,CAAC;UACrD,IAAME,UAAU,GAAGR,QAAQ,GAAG,CAAC,GAAGI,QAAQ,GAAGT,SAAS,GAAG,CAAC;UAC1D,IAAMc,YAAY,GAAGD,UAAU,GAAGf,WAAW;UAE7C,IAAMiB,GAAG,GAAG,IAAI/B,IAAI,CAACW,IAAI,EAAEH,KAAK,EAAEqB,UAAU,CAAC;UAC7C,IAAMG,OAAO,GAAG5E,iBAAiB,CAAC2E,GAAG,EAAElB,KAAK,CAAC;UAE7C,IAAIoB,OAAO,GAAG,KAAK;UACnB,IAAIC,QAAQ,GAAGvC,UAAU,CAACoC,GAAG,CAAC;UAC9B,IAAII,QAAQ,GAAG,KAAK;UAEpB,IAAIC,QAAQ,GAAGP,UAAU,KAAK,CAAC;UAC/B,IAAIQ,SAAS,GAAGR,UAAU,KAAKf,WAAW;UAE1C,IAAMwB,iBAAiB,GAAGT,UAAU,KAAK,CAAC;UAC1C,IAAMU,gBAAgB,GAAGV,UAAU,KAAKf,WAAW;UAEnD,IAAIvC,IAAI,KAAK,OAAO,EAAE;YACpB,IAAMiE,gBAAgB,GAAGpF,iBAAiB,CAAC2E,GAAG,EAAErD,SAAS,CAAC;YAC1D,IAAM+D,cAAc,GAAGrF,iBAAiB,CAAC2E,GAAG,EAAEpD,OAAO,CAAC;YACtDwD,QAAQ,GAAGK,gBAAgB,IAAIC,cAAc;YAC7CR,OAAO,GAAGvE,aAAa,CAACqE,GAAG,EAAE;cAC3BrD,SAAS,EAATA,SAAS;cACTC,OAAA,EAAAA;YACF,CAAC,CAAC;YACF,IAAI6D,gBAAgB,EAAE;cACpBJ,QAAQ,GAAG,IAAI;YACjB;YACA,IAAIK,cAAc,EAAE;cAClBJ,SAAS,GAAG,IAAI;YAClB;YACA,IAAIZ,QAAQ,KAAK,CAAC,IAAI,CAACe,gBAAgB,EAAE;cACvCJ,QAAQ,GAAG,KAAK;YAClB;YAEA,IAAIX,QAAQ,KAAK,CAAC,IAAI,CAACgB,cAAc,EAAE;cACrCJ,SAAS,GAAG,KAAK;YACnB;YAEA,IACGC,iBAAiB,IAAIG,cAAc,IACnCF,gBAAgB,IAAIC,gBAAiB,EACtC;cACAP,OAAO,GAAG,KAAK;YACjB;UACF,CAAC,MAAM,IAAI1D,IAAI,KAAK,UAAU,EAAE;YAC9B,IAAMmE,SAAS,GAAGjE,KAAK,IAAI,EAAE;YAC7B0D,QAAQ,GAAGO,SAAS,CAACC,IAAI,CAAE,UAAAC,CAAC;cAAA,OAAKxF,iBAAiB,CAAC2E,GAAG,EAAEa,CAAC,CAAC;YAAA,EAAC;YAE3D,IAAMC,SAAS,GAAG,IAAI7C,IAAI,CAACW,IAAI,EAAEH,KAAK,EAAEqB,UAAU,GAAG,CAAC,CAAC;YACvD,IAAMiB,QAAQ,GAAG,IAAI9C,IAAI,CAACW,IAAI,EAAEH,KAAK,EAAEqB,UAAU,GAAG,CAAC,CAAC;YAEtD,IAAMkB,iBAAiB,GAAGL,SAAS,CAACC,IAAI,CAAE,UAAAC,CAAC;cAAA,OACzCxF,iBAAiB,CAACwF,CAAC,EAAEC,SAAS,CAChC;YAAA,EAAC;YACD,IAAMG,gBAAgB,GAAGN,SAAS,CAACC,IAAI,CAAE,UAAAC,CAAC;cAAA,OACxCxF,iBAAiB,CAACwF,CAAC,EAAEE,QAAQ,CAC/B;YAAA,EAAC;YAED,IAAIX,QAAQ,EAAE;cACZ,IAAIa,gBAAgB,IAAID,iBAAiB,EAAE;gBACzCd,OAAO,GAAG,IAAI;cAChB;cACA,IAAIe,gBAAgB,IAAI,CAACD,iBAAiB,EAAE;gBAC1Cd,OAAO,GAAG,IAAI;gBACdG,QAAQ,GAAG,IAAI;cACjB;cAEA,IAAIW,iBAAiB,IAAI,CAACC,gBAAgB,EAAE;gBAC1Cf,OAAO,GAAG,IAAI;gBACdI,SAAS,GAAG,IAAI;cAClB;cAEA,IAAIC,iBAAiB,IAAI,CAACU,gBAAgB,EAAE;gBAC1Cf,OAAO,GAAG,KAAK;cACjB;cAEA,IAAIM,gBAAgB,IAAI,CAACQ,iBAAiB,EAAE;gBAC1Cd,OAAO,GAAG,KAAK;cACjB;cAEA,IAAIA,OAAO,IAAI,CAACG,QAAQ,IAAI,CAACC,SAAS,EAAE;gBACtCF,QAAQ,GAAG,KAAK;cAClB;YACF;UACF,CAAC,MAAM,IAAI5D,IAAI,KAAK,QAAQ,EAAE;YAC5B4D,QAAQ,GAAG/E,iBAAiB,CAAC2E,GAAG,EAAEvD,IAAI,CAAC;UACzC;UAEA,IAAMyE,0BAA0B,GAAGrD,kBAAkB,CAACmC,GAAG,CAAC;UAE1D,IAAIE,OAAO,IAAI,CAACC,QAAQ,EAAE;YACxBA,QAAQ,GAAG,KAAK;UAClB;UAEA,IAAI,CAACe,0BAA0B,EAAE;YAC/Bf,QAAQ,GAAG,IAAI;UACjB;UAEA,OAAO;YACLN,aAAa,EAAbA,aAAa;YACbE,YAAY,EAAZA,YAAY;YACZnB,IAAI,EAAJA,IAAI;YACJH,KAAK,EAALA,KAAK;YACLqB,UAAU,EAAVA,UAAU;YACVJ,QAAQ,EAARA,QAAQ;YACRlD,IAAI,EAAJA,IAAI;YACJ4D,QAAQ,EAARA,QAAQ;YACRF,OAAO,EAAPA,OAAO;YACPG,QAAQ,EAARA,QAAQ;YACRC,SAAS,EAATA,SAAS;YACTL,OAAO,EAAPA,OAAO;YACPE,QAAA,EAAAA;UACF,CAAC;QACH,CAAC;MACH,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CACDvB,IAAI,EACJH,KAAK,EACLlC,KAAK,EACLqB,UAAU,EACVpB,IAAI,EACJqB,kBAAkB,EAClBlB,SAAS,EACTC,OAAO,EACPF,KAAK,EACLD,IAAI,CACL,CAAC;EAEF,IAAI0E,QAAQ,GAAG5D,KAAK,aAALA,KAAK,eAALA,KAAK,CAAE6D,IAAI,GACtB7D,KAAK,CAAC8D,KAAK,CAACC,UAAU,GACrB/D,KAAK,CAAqB8D,KAAK,CAACE,MAAM;EAE3C,OACE5G,KAAA,CAAA6G,aAAA,CAAC3G,IAAI;IAAC4G,KAAK,EAAE,CAACC,MAAM,CAACjD,KAAK,EAAE;MAAEkD,MAAM,EAAEC,cAAc,CAAC5E,UAAU,EAAET,KAAK;IAAE,CAAC;EAAE,GACzE5B,KAAA,CAAA6G,aAAA,CAAC3G,IAAI;IACH4G,KAAK,EAAE,CACLC,MAAM,CAACG,WAAW,EAClBnE,YAAY,GACR;MACEoE,SAAS,EAAEC,0BAA0B;MACrCC,YAAY,EAAEC;IAChB,CAAC,GACD,IAAI;EACR,GAEFtH,KAAA,CAAA6G,aAAA,CAACvG,eAAe;IACdkF,QAAQ,EAAE,CAACzC,YAAa;IACxBwE,OAAO,EAAExE,YAAY,GAAG;MAAA,OAAMb,WAAW,CAAC+B,IAAI,CAAC;IAAA,IAAGuD,SAAU;IAC5DC,iBAAiB,EAAC,QAAQ;IAC1BC,kBAAkB,EAAK3D,SAAU,SAAGE,IAAO;IAC3C6C,KAAK,EAAE,CACLC,MAAM,CAACY,UAAU,EACjB;MACEC,YAAY,EAAEpF;IAChB,CAAC;EACD,GAEFxC,KAAA,CAAA6G,aAAA,CAAC3G,IAAI;IACH4G,KAAK,EAAE,CACLC,MAAM,CAACc,eAAe,EACtB;MACED,YAAY,EAAEpF;IAChB,CAAC;EACD,GAEFxC,KAAA,CAAA6G,aAAA,CAACzG,IAAI;IACH0H,qBAAqB,EAAE,GAAI;IAC3BhB,KAAK,EAAE,CACLC,MAAM,CAACgB,UAAU,EAAAC,aAAA,CAAAA,aAAA,KAEZxB,QAAQ;MACXyB,KAAK,EAAErF,KAAK,CAAC6D,IAAI,GACb7D,KAAK,CAACsF,MAAM,CAACC,gBAAgB,GAC7BvF,KAAK,CAACsF,MAAM,CAACE;IAAA,GAEnB;IACFC,UAAU,EAAE;EAAM,GAEjBtE,SAAS,EAAC,GAAC,EAACE,IACT,CAAC,EACPjE,KAAA,CAAA6G,aAAA,CAAC3G,IAAI;IAAC4G,KAAK,EAAE/D,YAAY,GAAGgE,MAAM,CAACuB,QAAQ,GAAGvB,MAAM,CAACwB;EAAS,GAC5DvI,KAAA,CAAA6G,aAAA,CAAC1G,UAAU;IACToH,OAAO,EAAExE,YAAY,GAAG;MAAA,OAAMb,WAAW,CAAC+B,IAAI,CAAC;IAAA,IAAGuD,SAAU;IAC5DgB,IAAI,EACFrG,aAAa,GACTS,KAAK,CAAC6D,IAAI,GACR,SAAS,GACT,YAAY,GACd7D,KAAK,CAAC6D,IAAI,GACV,WAAW,GACX;EACL,CACF,CACG,CACF,CACS,CACb,CAAC,EACNvC,IAAI,CAACM,GAAG,CAAC,UAAAiE,KAAA;IAAA,IAAG7D,SAAS,GAAiB6D,KAAA,CAA1B7D,SAAS;MAAEC,aAAA,GAAe4D,KAAA,CAAf5D,aAAA;IAAe,OACrC7E,KAAA,CAAA6G,aAAA,CAAC3G,IAAI;MAAC4G,KAAK,EAAEC,MAAM,CAAC2B,IAAK;MAACC,GAAG,EAAE/D;IAAU,GACtCC,aAAa,CACX+D,MAAM,CAAE,UAAAC,EAAE;MAAA,OAAK3H,WAAW,CAAC2H,EAAE,CAAC9D,QAAQ,EAAEtC,eAAe,CAAC;IAAA,EAAC,CACzD+B,GAAG,CAAE,UAAAqE,EAAE;MAAA,OACNA,EAAE,CAAC3D,aAAa,IAAI2D,EAAE,CAACzD,YAAY,GACjCpF,KAAA,CAAA6G,aAAA,CAACrG,QAAQ;QAACmI,GAAG,EAAEE,EAAE,CAAC9D;MAAS,CAAE,CAAC,GAE9B/E,KAAA,CAAA6G,aAAA,CAACtG,GAAG;QACFoI,GAAG,EAAEE,EAAE,CAAC9D,QAAS;QACjBnC,KAAK,EAAEA,KAAM;QACbyC,GAAG,EAAEwD,EAAE,CAAC1D,UAAW;QACnBrB,KAAK,EAAE+E,EAAE,CAAC/E,KAAM;QAChBG,IAAI,EAAE4E,EAAE,CAAC5E,IAAK;QACdwB,QAAQ,EAAEoD,EAAE,CAACpD,QAAS;QACtBF,OAAO,EAAEsD,EAAE,CAACtD,OAAQ;QACpBG,QAAQ,EAAEmD,EAAE,CAACnD,QAAS;QACtBC,SAAS,EAAEkD,EAAE,CAAClD,SAAU;QACxBvD,WAAW,EAAEA,WAAY;QACzBkD,OAAO,EAAEuD,EAAE,CAACvD,OAAQ;QACpB/C,WAAW,EAAEA,WAAY;QACzBD,YAAY,EAAEA,YAAa;QAC3BkD,QAAQ,EAAEqD,EAAE,CAACrD,QAAS;QACtB3C,kBAAkB,EAAEA;MAAmB,CACxC,CAEL;IAAA,EACE,CAAC;EAAA,CACR,CACG,CAAC;AAEX;AAEA,OAAO,IAAMiG,UAAU,GAAG,CAAC;AAC3B,OAAO,IAAMC,QAAQ,GAAGpI,OAAO,GAAGmI,UAAU;AAC5C,OAAO,IAAME,gBAAgB,GAAG,EAAE;AAClC,OAAO,IAAM5B,0BAA0B,GAAG,CAAC;AAC3C,OAAO,IAAME,6BAA6B,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE;AACxD,OAAO,IAAM2B,uBAAuB,GAClC7B,0BAA0B,GAAGE,6BAA6B;AAE5D,IAAMP,MAAM,GAAG9G,UAAU,CAACiJ,MAAM,CAAC;EAC/BR,IAAI,EAAE;IACJS,aAAa,EAAE,KAAK;IACpB9B,YAAY,EAAEyB,UAAU;IACxB9B,MAAM,EAAErG;EACV,CAAC;EACDmD,KAAK,EAAE,CAAC,CAAC;EACToD,WAAW,EAAE;IACXF,MAAM,EAAEgC,gBAAgB;IACxBI,cAAc,EAAE,QAAQ;IACxBC,QAAQ,EAAE;EACZ,CAAC;EACDtB,UAAU,EAAE;IAAEuB,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAI,CAAC;EAC1C5B,UAAU,EAAE;IAAE6B,SAAS,EAAE,YAAY;IAAEC,UAAU,EAAE;EAAE,CAAC;EACtD5B,eAAe,EAAE;IACf6B,WAAW,EAAE,EAAE;IACfP,aAAa,EAAE,KAAK;IACpBQ,UAAU,EAAE;EACd,CAAC;EACDpB,QAAQ,EAAE;IAAEgB,OAAO,EAAE;EAAE,CAAC;EACxBjB,QAAQ,EAAE;IAAEiB,OAAO,EAAE;EAAE;AACzB,CAAC,CAAC;AAEF,IAAMhF,SAAS,GAAI,SAAbA,SAASA,CAAI3C,KAAa,EAAK;EACnC,OAAOgI,KAAK,CAAC7I,YAAY,CAACa,KAAK,CAAC,CAAC,CAC9BiI,IAAI,CAAC,IAAI,CAAC,CACVrF,GAAG,CAAC,UAACM,CAAC,EAAEH,QAAQ,EAAK;IACpB,IAAMD,IAAI,GAAGkF,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAChC,OAAO;MAAElF,QAAQ,EAARA,QAAQ;MAAED,IAAA,EAAAA;IAAK,CAAC;EAC3B,CAAC,CAAC;AACN,CAAC;AAED,SAASoF,aAAaA,CAAClI,KAAa,EAAU;EAC5C,IAAIA,KAAK,GAAGT,YAAY,EAAE;IACxB,OAAOS,KAAK,GAAGT,YAAY;EAC7B;EAEA,OAAO,EAAEA,YAAY,GAAGS,KAAK,CAAC;AAChC;AAEA,SAASmI,WAAWA,CAACnI,KAAa,EAAU;EAC1C,IAAIA,KAAK,KAAKT,YAAY,EAAE;IAC1B,OAAO,CAAC;EACV;EACA,IAAI6I,GAAG,GAAG,CAAC;EACX,IAAIpI,KAAK,GAAGT,YAAY,EAAE;IACxB,KAAK,IAAI8I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrI,KAAK,GAAGT,YAAY,EAAE8I,CAAC,EAAE,EAAE;MAC7C,IAAMC,MAAM,GAAG/I,YAAY,GAAG8I,CAAC;MAC/BD,GAAG,IAAI/I,UAAU,CAACiJ,MAAM,CAAC,IAAInJ,YAAY,CAACmJ,MAAM,CAAC;IACnD;EACF,CAAC,MAAM;IACL,KAAK,IAAID,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG9I,YAAY,GAAGS,KAAK,EAAEqI,EAAC,EAAE,EAAE;MAC7C,IAAMC,OAAM,GAAG/I,YAAY,GAAG8I,EAAC,GAAG,CAAC;MACnCD,GAAG,IAAI/I,UAAU,CAACiJ,OAAM,CAAC,IAAInJ,YAAY,CAACmJ,OAAM,CAAC;IACnD;EACF;EACA,OAAOF,GAAG;AACZ;AAEA,OAAO,SAASG,4BAA4BA,CAC1CC,MAAc,EACdC,KAAa,EACL;EACR,OAAOlJ,YAAY,GAAGmJ,IAAI,CAACC,KAAK,CAACH,MAAM,GAAGC,KAAK,CAAC;AAClD;AAEA,OAAO,SAASG,0BAA0BA,CAACJ,MAAc,EAAU;EACjE,IAAIK,cAAc,GAAGtJ,YAAY,GAAGmJ,IAAI,CAACI,IAAI,CAACN,MAAM,GAAG/I,oBAAoB,CAAC;EAE5E,IAAMsJ,UAAU,GAAGC,uBAAuB,CAACH,cAAc,CAAC;EAC1D,IAAMI,UAAU,GAAG,CAACF,UAAU,GAAGvJ,WAAW,GAAGgJ,MAAM,IAAI/I,oBAAoB;EAC7E,IAAIwJ,UAAU,IAAI,CAAC,IAAIA,UAAU,IAAI,CAAC,CAAC,EAAE;IACvCJ,cAAc,IAAIH,IAAI,CAACC,KAAK,CAACM,UAAU,CAAC;EAC1C;EACA,OAAOJ,cAAc;AACvB;AAEA,OAAO,SAASK,wBAAwBA,CAAClJ,KAAa,EAAEyI,KAAa,EAAE;EACrE,IAAIzI,KAAK,GAAG,CAAC,EAAE;IACb,OAAO,CAAC;EACV;EACA,OAAOyI,KAAK,GAAGzI,KAAK;AACtB;AAEA,OAAO,SAASgJ,uBAAuBA,CAAChJ,KAAa,EAAE;EACrD,IAAMmJ,KAAK,GAAGjB,aAAa,CAAClI,KAAK,CAAC;EAClC,IAAMoJ,EAAE,GAAGjB,WAAW,CAACnI,KAAK,CAAC;EAC7B,IAAMqJ,YAAY,GAAGlC,QAAQ,GAAGiC,EAAE;EAClC,IAAME,CAAC,GAAGD,YAAY,GAAGF,KAAK,IAAIvJ,cAAc,GAAGwH,gBAAgB,CAAC;EAEpE,OAAO,CAACkC,CAAC,IAAI,CAAC,IAAI9J,WAAW;AAC/B;AAEA,OAAO,SAAS6F,cAAcA,CAC5B5E,UAAqC,EACrCT,KAAa,EACL;EACR,IAAMuJ,cAAc,GAAG5J,uBAAuB,CAACc,UAAU,CAAC;EAC1D,IAAM+I,EAAE,GAAGrK,YAAY,CAACa,KAAK,CAAC;EAE9B,IAAMyJ,kBAAkB,GAAGtC,QAAQ,GAAGqC,EAAE;EACxC,IAAME,WAAW,GACfjJ,UAAU,KAAK,YAAY,GAAG4G,uBAAuB,GAAGD,gBAAgB;EAC1E,IAAMkC,CAAC,GAAGC,cAAc,GAAGE,kBAAkB,GAAGC,WAAW;EAC3D,OAAOJ,CAAC,IAAI,CAAC;AACf;AAEA,eAAelL,KAAK,CAACuL,IAAI,CAAC7J,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"value\", \"onChange\", \"style\", \"locale\", \"validRange\", \"inputMode\", \"withDateFormatInLabel\", \"hasError\", \"hideValidationErrors\", \"onValidationError\", \"modal\", \"inputButton\", \"saveLabel\", \"saveLabelDisabled\", \"uppercase\", \"startYear\", \"endYear\", \"onChangeText\", \"inputEnabled\", \"disableStatusBarPadding\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport TextInputWithMask from \"../TextInputMask\";\nimport { HelperText, useTheme } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useDateInput from \"./inputUtils\";\nfunction DatePickerInputWithoutModal(_ref, ref) {\n  var _rest$keyboardType, _rest$keyboardAppeara;\n  var label = _ref.label,\n    value = _ref.value,\n    onChange = _ref.onChange,\n    style = _ref.style,\n    locale = _ref.locale,\n    validRange = _ref.validRange,\n    inputMode = _ref.inputMode,\n    _ref$withDateFormatIn = _ref.withDateFormatInLabel,\n    withDateFormatInLabel = _ref$withDateFormatIn === void 0 ? true : _ref$withDateFormatIn,\n    hasError = _ref.hasError,\n    hideValidationErrors = _ref.hideValidationErrors,\n    onValidationError = _ref.onValidationError,\n    modal = _ref.modal,\n    inputButton = _ref.inputButton,\n    saveLabel = _ref.saveLabel,\n    saveLabelDisabled = _ref.saveLabelDisabled,\n    uppercase = _ref.uppercase,\n    startYear = _ref.startYear,\n    endYear = _ref.endYear,\n    onChangeText = _ref.onChangeText,\n    inputEnabled = _ref.inputEnabled,\n    disableStatusBarPadding = _ref.disableStatusBarPadding,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useTheme();\n  var _useDateInput = useDateInput({\n      locale: locale,\n      value: value,\n      validRange: validRange,\n      inputMode: inputMode,\n      onChange: onChange,\n      onValidationError: onValidationError\n    }),\n    formattedValue = _useDateInput.formattedValue,\n    inputFormat = _useDateInput.inputFormat,\n    onDateInputChangeText = _useDateInput.onChangeText,\n    error = _useDateInput.error;\n  var disabled;\n  if (inputEnabled !== undefined) {\n    disabled = !inputEnabled;\n  }\n  if (rest.disabled) {\n    disabled = rest.disabled;\n  }\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.root\n  }, React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInputWithMask, _extends({}, rest, {\n    ref: ref,\n    label: getLabel({\n      label: label,\n      inputFormat: inputFormat,\n      withDateFormatInLabel: withDateFormatInLabel\n    }),\n    value: formattedValue,\n    keyboardType: (_rest$keyboardType = rest.keyboardType) != null ? _rest$keyboardType : 'number-pad',\n    mask: inputFormat,\n    disabled: disabled,\n    onChangeText: onDateInputChangeText,\n    onChange: function onChange(e) {\n      return onChangeText && onChangeText(e.nativeEvent.text);\n    },\n    keyboardAppearance: (_rest$keyboardAppeara = rest.keyboardAppearance) != null ? _rest$keyboardAppeara : theme.dark ? 'dark' : 'default',\n    error: !!error && !hideValidationErrors || !!hasError,\n    style: [styles.input, style],\n    inputButton: inputButton\n  }))), error && !hideValidationErrors ? React.createElement(HelperText, {\n    type: \"error\",\n    visible: !!error\n  }, error) : null), modal === null || modal === void 0 ? void 0 : modal({\n    value: value,\n    locale: locale,\n    inputMode: inputMode,\n    validRange: validRange,\n    saveLabel: saveLabel,\n    saveLabelDisabled: saveLabelDisabled,\n    uppercase: uppercase,\n    startYear: startYear,\n    endYear: endYear,\n    inputEnabled: inputEnabled,\n    disableStatusBarPadding: disableStatusBarPadding\n  }));\n}\nfunction getLabel(_ref2) {\n  var withDateFormatInLabel = _ref2.withDateFormatInLabel,\n    inputFormat = _ref2.inputFormat,\n    label = _ref2.label;\n  if (withDateFormatInLabel) {\n    return label ? label + \" (\" + inputFormat + \")\" : inputFormat;\n  }\n  return label || '';\n}\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    width: '100%'\n  },\n  inputContainer: {\n    flexGrow: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%'\n  },\n  input: {\n    flexGrow: 1,\n    width: '100%'\n  }\n});\nexport default React.forwardRef(DatePickerInputWithoutModal);","map":{"version":3,"names":["React","TextInputWithMask","HelperText","useTheme","View","StyleSheet","useDateInput","DatePickerInputWithoutModal","_ref","ref","_rest$keyboardType","_rest$keyboardAppeara","label","value","onChange","style","locale","validRange","inputMode","_ref$withDateFormatIn","withDateFormatInLabel","hasError","hideValidationErrors","onValidationError","modal","inputButton","saveLabel","saveLabelDisabled","uppercase","startYear","endYear","onChangeText","inputEnabled","disableStatusBarPadding","rest","_objectWithoutProperties","_excluded","theme","_useDateInput","formattedValue","inputFormat","onDateInputChangeText","error","disabled","undefined","createElement","Fragment","styles","root","inputContainer","_extends","getLabel","keyboardType","mask","e","nativeEvent","text","keyboardAppearance","dark","input","type","visible","_ref2","create","flex","flexGrow","justifyContent","alignItems","width","flexDirection","forwardRef"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-paper-dates/src/Date/DatePickerInputWithoutModal.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport TextInputWithMask from '../TextInputMask'\nimport { HelperText, useTheme } from 'react-native-paper'\nimport { View, StyleSheet } from 'react-native'\nimport useDateInput from './inputUtils'\nimport type { DatePickerInputProps } from './DatePickerInput.shared'\n\nfunction DatePickerInputWithoutModal(\n  {\n    label,\n    value,\n    onChange,\n    style,\n    locale,\n    validRange,\n    inputMode,\n    withDateFormatInLabel = true,\n    hasError,\n    hideValidationErrors,\n    onValidationError,\n    modal,\n    inputButton,\n    saveLabel,\n    saveLabelDisabled,\n    uppercase,\n    startYear,\n    endYear,\n    onChangeText,\n    inputEnabled,\n    disableStatusBarPadding,\n    ...rest\n  }: DatePickerInputProps & {\n    modal?: (params: {\n      value: DatePickerInputProps['value']\n      locale: DatePickerInputProps['locale']\n      inputMode: DatePickerInputProps['inputMode']\n      validRange: DatePickerInputProps['validRange']\n      saveLabel: DatePickerInputProps['saveLabel']\n      saveLabelDisabled: DatePickerInputProps['saveLabelDisabled']\n      uppercase: DatePickerInputProps['uppercase']\n      startYear: DatePickerInputProps['startYear']\n      endYear: DatePickerInputProps['endYear']\n      inputEnabled: DatePickerInputProps['inputEnabled']\n      disableStatusBarPadding: DatePickerInputProps['disableStatusBarPadding']\n    }) => any\n    inputButton?: React.ReactNode\n  },\n  ref: any\n) {\n  const theme = useTheme()\n  const {\n    formattedValue,\n    inputFormat,\n    onChangeText: onDateInputChangeText,\n    error,\n  } = useDateInput({\n    locale,\n    value,\n    validRange,\n    inputMode,\n    onChange,\n    onValidationError,\n  })\n\n  let disabled\n\n  if (inputEnabled !== undefined) {\n    disabled = !inputEnabled\n  }\n\n  if (rest.disabled) {\n    disabled = rest.disabled\n  }\n\n  return (\n    <>\n      <View style={styles.root}>\n        <View style={styles.inputContainer}>\n          <TextInputWithMask\n            {...rest}\n            ref={ref}\n            label={getLabel({\n              // TODO: support label components?\n              label: label as any,\n              inputFormat,\n              withDateFormatInLabel,\n            })}\n            value={formattedValue}\n            keyboardType={rest.keyboardType ?? 'number-pad'}\n            mask={inputFormat}\n            disabled={disabled}\n            onChangeText={onDateInputChangeText}\n            onChange={(e) => onChangeText && onChangeText(e.nativeEvent.text)}\n            keyboardAppearance={\n              rest.keyboardAppearance ?? (theme.dark ? 'dark' : 'default')\n            }\n            error={(!!error && !hideValidationErrors) || !!hasError}\n            style={[styles.input, style]}\n            inputButton={inputButton}\n          />\n        </View>\n        {error && !hideValidationErrors ? (\n          <HelperText type=\"error\" visible={!!error}>\n            {error}\n          </HelperText>\n        ) : null}\n      </View>\n      {modal?.({\n        value,\n        locale,\n        inputMode,\n        validRange,\n        saveLabel,\n        saveLabelDisabled,\n        uppercase,\n        startYear,\n        endYear,\n        inputEnabled,\n        disableStatusBarPadding,\n      })}\n    </>\n  )\n}\n\nfunction getLabel({\n  withDateFormatInLabel,\n  inputFormat,\n  label,\n}: {\n  withDateFormatInLabel: boolean\n  inputFormat: string\n  label: string | undefined\n}) {\n  if (withDateFormatInLabel) {\n    return label ? `${label} (${inputFormat})` : inputFormat\n  }\n  return label || ''\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    width: '100%',\n  },\n  inputContainer: {\n    flexGrow: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n  },\n  input: {\n    flexGrow: 1,\n    width: '100%',\n  },\n})\nexport default React.forwardRef(DatePickerInputWithoutModal)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
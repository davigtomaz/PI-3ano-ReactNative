{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"./Text\";\nimport Divider from \"./Divider\";\nimport { useStyles } from \"./hooks/use-styles\";\nvar Banner = function Banner(_ref) {\n  var text = _ref.text,\n    illustration = _ref.illustration,\n    buttons = _ref.buttons,\n    style = _ref.style,\n    contentContainerStyle = _ref.contentContainerStyle,\n    illustrationContainerStyle = _ref.illustrationContainerStyle,\n    textContainerStyle = _ref.textContainerStyle,\n    textStyle = _ref.textStyle,\n    actionsContainerStyle = _ref.actionsContainerStyle;\n  var styles = useStyles(function (_ref2) {\n    var palette = _ref2.palette;\n    return {\n      container: {\n        backgroundColor: palette.surface.main\n      },\n      contentContainer: {\n        flexDirection: 'row',\n        marginTop: 24,\n        marginBottom: 4,\n        marginHorizontal: 16\n      },\n      illustrationContainer: {\n        marginEnd: 16\n      },\n      textContainer: {\n        flex: 1\n      },\n      text: {\n        color: palette.surface.on\n      },\n      actionsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: 8\n      }\n    };\n  }, []);\n  return React.createElement(View, {\n    style: [styles.container, style]\n  }, React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle]\n  }, illustration && React.createElement(View, {\n    style: [styles.illustrationContainer, illustrationContainerStyle]\n  }, typeof illustration === 'function' ? illustration({\n    size: 40\n  }) : illustration), React.createElement(View, {\n    style: [styles.textContainer, textContainerStyle]\n  }, typeof text === 'string' ? React.createElement(Text, {\n    variant: \"body2\",\n    style: [styles.text, textStyle]\n  }, text) : text)), React.createElement(View, {\n    style: [styles.actionsContainer, actionsContainerStyle]\n  }, Array.isArray(buttons) ? buttons.map(function (button, index) {\n    return React.createElement(React.Fragment, {\n      key: index\n    }, button, index !== buttons.length - 1 && React.createElement(View, {\n      style: {\n        width: 8\n      }\n    }));\n  }) : buttons), React.createElement(Divider, null));\n};\nexport default Banner;","map":{"version":3,"names":["React","View","Text","Divider","useStyles","Banner","_ref","text","illustration","buttons","style","contentContainerStyle","illustrationContainerStyle","textContainerStyle","textStyle","actionsContainerStyle","styles","_ref2","palette","container","backgroundColor","surface","main","contentContainer","flexDirection","marginTop","marginBottom","marginHorizontal","illustrationContainer","marginEnd","textContainer","flex","color","on","actionsContainer","justifyContent","alignItems","margin","createElement","size","variant","Array","isArray","map","button","index","Fragment","key","length","width"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/@react-native-material/core/lib/module/Banner.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, TextStyle, View, ViewStyle } from 'react-native';\nimport Text from './Text';\nimport Divider from './Divider';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BannerProps {\n  text: string | React.ReactElement | null;\n\n  illustration?: React.ReactElement | ((props: { size: number }) => React.ReactElement | null) | null;\n\n  buttons: React.ReactElement | React.ReactElement[] | null;\n\n  style?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  illustrationContainerStyle?: StyleProp<ViewStyle>;\n\n  textContainerStyle?: StyleProp<ViewStyle>;\n\n  textStyle?: StyleProp<TextStyle>;\n\n  actionsContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Banner: React.FC<BannerProps> = ({\n  text,\n  illustration,\n  buttons,\n  style,\n  contentContainerStyle,\n  illustrationContainerStyle,\n  textContainerStyle,\n  textStyle,\n  actionsContainerStyle,\n}) => {\n  const styles = useStyles(\n    ({ palette }) => ({\n      container: {\n        backgroundColor: palette.surface.main,\n      },\n      contentContainer: {\n        flexDirection: 'row',\n        marginTop: 24,\n        marginBottom: 4,\n        marginHorizontal: 16,\n      },\n      illustrationContainer: {\n        marginEnd: 16,\n      },\n      textContainer: {\n        flex: 1,\n      },\n      text: {\n        color: palette.surface.on,\n      },\n      actionsContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: 8,\n      },\n    }),\n    []\n  );\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {illustration && (\n          <View style={[styles.illustrationContainer, illustrationContainerStyle]}>\n            {typeof illustration === 'function' ? illustration({ size: 40 }) : illustration}\n          </View>\n        )}\n        <View style={[styles.textContainer, textContainerStyle]}>\n          {typeof text === 'string' ? (\n            <Text variant=\"body2\" style={[styles.text, textStyle]}>\n              {text}\n            </Text>\n          ) : (\n            text\n          )}\n        </View>\n      </View>\n      <View style={[styles.actionsContainer, actionsContainerStyle]}>\n        {Array.isArray(buttons)\n          ? buttons.map((button, index) => (\n              <React.Fragment key={index}>\n                {button}\n                {index !== buttons.length - 1 && <View style={{ width: 8 }} />}\n              </React.Fragment>\n            ))\n          : buttons}\n      </View>\n      <Divider />\n    </View>\n  );\n};\n\nexport default Banner;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
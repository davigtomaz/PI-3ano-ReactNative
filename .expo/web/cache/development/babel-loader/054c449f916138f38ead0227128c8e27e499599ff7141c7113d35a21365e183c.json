{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Stack, Avatar } from \"@react-native-material/core\";\nimport { LineChart, Grid } from 'react-native-svg-charts';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar LineChartExample = function (_React$PureComponent) {\n  _inherits(LineChartExample, _React$PureComponent);\n  var _super = _createSuper(LineChartExample);\n  function LineChartExample() {\n    _classCallCheck(this, LineChartExample);\n    return _super.apply(this, arguments);\n  }\n  _createClass(LineChartExample, [{\n    key: \"render\",\n    value: function render() {\n      var data = [50, 10, 40, 95, -4, -24, 85, 91, 35, 53, -53, 24, 50, -20, -80];\n      return _jsx(LineChart, {\n        style: {\n          height: 200\n        },\n        data: data,\n        svg: {\n          stroke: 'rgb(134, 65, 244)'\n        },\n        contentInset: {\n          top: 20,\n          bottom: 20\n        },\n        children: _jsx(Grid, {})\n      });\n    }\n  }]);\n  return LineChartExample;\n}(React.PureComponent);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#95d5b2\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  avatar: {}\n});\nexport default PerfilScreen;","map":{"version":3,"names":["React","StyleSheet","View","Text","Stack","Avatar","LineChart","Grid","jsx","_jsx","LineChartExample","_React$PureComponent","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","data","style","height","svg","stroke","contentInset","top","bottom","children","PureComponent","styles","create","container","flex","backgroundColor","alignItems","justifyContent","avatar","PerfilScreen"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/Screen/PerfilScreen.js"],"sourcesContent":["// PerfilScreen.js\nimport React from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport { Stack, Avatar } from \"@react-native-material/core\";\nimport { LineChart, Grid } from 'react-native-svg-charts'\n\n\nclass LineChartExample extends React.PureComponent {\n  render() {\n      const data = [50, 10, 40, 95, -4, -24, 85, 91, 35, 53, -53, 24, 50, -20, -80]\n\n      return (\n          <LineChart\n              style={{ height: 200 }}\n              data={data}\n              svg={{ stroke: 'rgb(134, 65, 244)' }}\n              contentInset={{ top: 20, bottom: 20 }}\n          >\n              <Grid />\n          </LineChart>\n      )\n  }\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#95d5b2\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  // Quero que a imagem do avatar fique maior\n\n\n  avatar:{\n    \n  }\n});\n\nexport default PerfilScreen;\n"],"mappings":";;;;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,KAAK,EAAEC,MAAM,QAAQ,6BAA6B;AAC3D,SAASC,SAAS,EAAEC,IAAI,QAAQ,yBAAyB;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,IAGnDC,gBAAgB,aAAAC,oBAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,oBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAAA,SAAAA,iBAAA;IAAAK,eAAA,OAAAL,gBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,gBAAA;IAAAS,GAAA;IAAAC,KAAA,EACpB,SAAAC,OAAA,EAAS;MACL,IAAMC,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;MAE7E,OACIb,IAAA,CAACH,SAAS;QACNiB,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAI,CAAE;QACvBF,IAAI,EAAEA,IAAK;QACXG,GAAG,EAAE;UAAEC,MAAM,EAAE;QAAoB,CAAE;QACrCC,YAAY,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAAC,QAAA,EAEtCrB,IAAA,CAACF,IAAI;MAAG,EACA;IAEpB;EAAC;EAAA,OAAAG,gBAAA;AAAA,EAd4BV,KAAK,CAAC+B,aAAa;AAmBlD,IAAMC,MAAM,GAAG/B,UAAU,CAACgC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EAKDC,MAAM,EAAC,CAEP;AACF,CAAC,CAAC;AAEF,eAAeC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}
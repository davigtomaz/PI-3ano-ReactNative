{"ast":null,"code":"import * as React from 'react';\nimport { overlay, useTheme } from 'react-native-paper';\nimport Color from 'color';\nexport function useLatest(value) {\n  var ref = React.useRef(value);\n  ref.current = value;\n  return ref;\n}\nexport function useHeaderBackgroundColor() {\n  var theme = useTheme();\n  if (theme.isV3) {\n    return theme.colors.surface;\n  }\n  return theme.dark && theme.mode === 'adaptive' ? overlay(4, theme.colors.surface) : theme.colors.primary;\n}\nexport function useHeaderColorIsLight() {\n  var theme = useTheme();\n  var background = theme.dark && theme.mode === 'adaptive' ? theme.colors.surface : theme.colors.primary;\n  return Color(background).isLight();\n}\nexport function useHeaderTextColor() {\n  var theme = useTheme();\n  var isLight = useHeaderColorIsLight();\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n  return !isLight ? '#fff' : '#000';\n}\nexport function useTextColorOnPrimary() {\n  var theme = useTheme();\n  var isDark = !Color(theme.colors.primary).isLight();\n  if (theme.isV3) {\n    if (isDark && theme.dark) {\n      return theme.colors.onSurface;\n    } else {\n      return theme.colors.onPrimary;\n    }\n  }\n  return isDark ? '#fff' : '#000';\n}\nexport function range(start, end) {\n  return Array(end - start + 1).fill(null).map(function (_, i) {\n    return start + i;\n  });\n}\nexport function lightenBy(color, ratio) {\n  var lightness = color.lightness();\n  return color.lightness(lightness + (100 - lightness) * ratio);\n}\nexport function darkenBy(color, ratio) {\n  var lightness = color.lightness();\n  return color.lightness(lightness - lightness * ratio);\n}","map":{"version":3,"names":["React","overlay","useTheme","Color","useLatest","value","ref","useRef","current","useHeaderBackgroundColor","theme","isV3","colors","surface","dark","mode","primary","useHeaderColorIsLight","background","isLight","useHeaderTextColor","onSurfaceVariant","useTextColorOnPrimary","isDark","onSurface","onPrimary","range","start","end","Array","fill","map","_","i","lightenBy","color","ratio","lightness","darkenBy"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-paper-dates/src/utils.ts"],"sourcesContent":["import * as React from 'react'\nimport {\n  DefaultTheme,\n  MD3DarkTheme,\n  overlay,\n  useTheme,\n} from 'react-native-paper'\nimport Color from 'color'\n\nexport type PaperTheme = typeof MD3DarkTheme | typeof DefaultTheme\n\nexport function useLatest<T>(value: T) {\n  const ref = React.useRef(value)\n  ref.current = value\n  return ref\n}\n\nexport function useHeaderBackgroundColor() {\n  const theme = useTheme()\n  if (theme.isV3) {\n    return theme.colors.surface\n  }\n  return theme.dark && theme.mode === 'adaptive'\n    ? overlay(4, theme.colors.surface)\n    : theme.colors.primary\n}\n\nexport function useHeaderColorIsLight() {\n  const theme = useTheme()\n  const background =\n    theme.dark && theme.mode === 'adaptive'\n      ? theme.colors.surface\n      : theme.colors.primary\n  return Color(background).isLight()\n}\n\nexport function useHeaderTextColor() {\n  const theme = useTheme()\n  const isLight = useHeaderColorIsLight()\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant\n  }\n  return !isLight ? '#fff' : '#000'\n}\n\nexport function useTextColorOnPrimary() {\n  const theme = useTheme()\n  const isDark = !Color(theme.colors.primary).isLight()\n\n  if (theme.isV3) {\n    if (isDark && theme.dark) {\n      return theme.colors.onSurface\n    } else {\n      return theme.colors.onPrimary\n    }\n  }\n\n  return isDark ? '#fff' : '#000'\n}\n\nexport function range(start: number, end: number) {\n  return Array(end - start + 1)\n    .fill(null)\n    .map((_, i) => start + i)\n}\n\nexport function lightenBy(color: Color, ratio: number) {\n  const lightness = color.lightness()\n  return color.lightness(lightness + (100 - lightness) * ratio)\n}\n\nexport function darkenBy(color: Color, ratio: number) {\n  const lightness = color.lightness()\n  return color.lightness(lightness - lightness * ratio)\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAGEC,OAAO,EACPC,QAAQ,QACH,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAIzB,OAAO,SAASC,SAASA,CAAIC,KAAQ,EAAE;EACrC,IAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAACF,KAAK,CAAC;EAC/BC,GAAG,CAACE,OAAO,GAAGH,KAAK;EACnB,OAAOC,GAAG;AACZ;AAEA,OAAO,SAASG,wBAAwBA,CAAA,EAAG;EACzC,IAAMC,KAAK,GAAGR,QAAQ,EAAE;EACxB,IAAIQ,KAAK,CAACC,IAAI,EAAE;IACd,OAAOD,KAAK,CAACE,MAAM,CAACC,OAAO;EAC7B;EACA,OAAOH,KAAK,CAACI,IAAI,IAAIJ,KAAK,CAACK,IAAI,KAAK,UAAU,GAC1Cd,OAAO,CAAC,CAAC,EAAES,KAAK,CAACE,MAAM,CAACC,OAAO,CAAC,GAChCH,KAAK,CAACE,MAAM,CAACI,OAAO;AAC1B;AAEA,OAAO,SAASC,qBAAqBA,CAAA,EAAG;EACtC,IAAMP,KAAK,GAAGR,QAAQ,EAAE;EACxB,IAAMgB,UAAU,GACdR,KAAK,CAACI,IAAI,IAAIJ,KAAK,CAACK,IAAI,KAAK,UAAU,GACnCL,KAAK,CAACE,MAAM,CAACC,OAAO,GACpBH,KAAK,CAACE,MAAM,CAACI,OAAO;EAC1B,OAAOb,KAAK,CAACe,UAAU,CAAC,CAACC,OAAO,EAAE;AACpC;AAEA,OAAO,SAASC,kBAAkBA,CAAA,EAAG;EACnC,IAAMV,KAAK,GAAGR,QAAQ,EAAE;EACxB,IAAMiB,OAAO,GAAGF,qBAAqB,EAAE;EACvC,IAAIP,KAAK,CAACC,IAAI,EAAE;IACd,OAAOD,KAAK,CAACE,MAAM,CAACS,gBAAgB;EACtC;EACA,OAAO,CAACF,OAAO,GAAG,MAAM,GAAG,MAAM;AACnC;AAEA,OAAO,SAASG,qBAAqBA,CAAA,EAAG;EACtC,IAAMZ,KAAK,GAAGR,QAAQ,EAAE;EACxB,IAAMqB,MAAM,GAAG,CAACpB,KAAK,CAACO,KAAK,CAACE,MAAM,CAACI,OAAO,CAAC,CAACG,OAAO,EAAE;EAErD,IAAIT,KAAK,CAACC,IAAI,EAAE;IACd,IAAIY,MAAM,IAAIb,KAAK,CAACI,IAAI,EAAE;MACxB,OAAOJ,KAAK,CAACE,MAAM,CAACY,SAAS;IAC/B,CAAC,MAAM;MACL,OAAOd,KAAK,CAACE,MAAM,CAACa,SAAS;IAC/B;EACF;EAEA,OAAOF,MAAM,GAAG,MAAM,GAAG,MAAM;AACjC;AAEA,OAAO,SAASG,KAAKA,CAACC,KAAa,EAAEC,GAAW,EAAE;EAChD,OAAOC,KAAK,CAACD,GAAG,GAAGD,KAAK,GAAG,CAAC,CAAC,CAC1BG,IAAI,CAAC,IAAI,CAAC,CACVC,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKN,KAAK,GAAGM,CAAC;EAAA,EAAC;AAC7B;AAEA,OAAO,SAASC,SAASA,CAACC,KAAY,EAAEC,KAAa,EAAE;EACrD,IAAMC,SAAS,GAAGF,KAAK,CAACE,SAAS,EAAE;EACnC,OAAOF,KAAK,CAACE,SAAS,CAACA,SAAS,GAAG,CAAC,GAAG,GAAGA,SAAS,IAAID,KAAK,CAAC;AAC/D;AAEA,OAAO,SAASE,QAAQA,CAACH,KAAY,EAAEC,KAAa,EAAE;EACpD,IAAMC,SAAS,GAAGF,KAAK,CAACE,SAAS,EAAE;EACnC,OAAOF,KAAK,CAACE,SAAS,CAACA,SAAS,GAAGA,SAAS,GAAGD,KAAK,CAAC;AACvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
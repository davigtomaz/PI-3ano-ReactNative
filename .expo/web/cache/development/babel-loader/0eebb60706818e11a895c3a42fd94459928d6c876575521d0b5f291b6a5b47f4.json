{"ast":null,"code":"import { useLatest } from \"../utils\";\nimport * as React from 'react';\nimport { addMonths, differenceInMonths, getRealIndex, startAtIndex } from \"./dateUtils\";\nexport function useYearChange(onChange, _ref) {\n  var selectedYear = _ref.selectedYear,\n    currentIndexRef = _ref.currentIndexRef;\n  var onChangeRef = useLatest(onChange);\n  React.useEffect(function () {\n    if (selectedYear) {\n      var currentIndex = currentIndexRef.current || 0;\n      var currentDate = addMonths(new Date(), getRealIndex(currentIndex));\n      currentDate.setFullYear(selectedYear);\n      var today = new Date();\n      var months = differenceInMonths(today, currentDate);\n      var newIndex = startAtIndex + months;\n      if (currentIndex !== newIndex) {\n        onChangeRef.current(newIndex);\n      }\n    }\n  }, [currentIndexRef, onChangeRef, selectedYear]);\n}","map":{"version":3,"names":["useLatest","React","addMonths","differenceInMonths","getRealIndex","startAtIndex","useYearChange","onChange","_ref","selectedYear","currentIndexRef","onChangeRef","useEffect","currentIndex","current","currentDate","Date","setFullYear","today","months","newIndex"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-paper-dates/src/Date/SwiperUtils.ts"],"sourcesContent":["import type { MutableRefObject } from 'react'\nimport { useLatest } from '../utils'\nimport * as React from 'react'\nimport {\n  addMonths,\n  differenceInMonths,\n  getRealIndex,\n  startAtIndex,\n} from './dateUtils'\n\nexport type RenderProps = {\n  index: number\n  onNext: () => any\n  onPrev: () => any\n}\n\nexport type SwiperProps = {\n  initialIndex: number\n  scrollMode: 'horizontal' | 'vertical'\n  renderItem: (renderProps: RenderProps) => any\n  renderHeader?: (renderProps: RenderProps) => any\n  renderFooter?: (renderProps: RenderProps) => any\n  selectedYear: number | undefined\n}\n\nexport function useYearChange(\n  onChange: (index: number | undefined) => void,\n  {\n    selectedYear,\n    currentIndexRef,\n  }: {\n    currentIndexRef: MutableRefObject<number>\n    selectedYear: number | undefined\n  }\n) {\n  const onChangeRef = useLatest(onChange)\n  React.useEffect(() => {\n    if (selectedYear) {\n      const currentIndex = currentIndexRef.current || 0\n      const currentDate = addMonths(new Date(), getRealIndex(currentIndex))\n      currentDate.setFullYear(selectedYear)\n\n      const today = new Date()\n      const months = differenceInMonths(today, currentDate)\n\n      const newIndex = startAtIndex + months\n      if (currentIndex !== newIndex) {\n        onChangeRef.current(newIndex)\n      }\n    }\n  }, [currentIndexRef, onChangeRef, selectedYear])\n}\n"],"mappings":"AACA,SAASA,SAAS;AAClB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SACEC,SAAS,EACTC,kBAAkB,EAClBC,YAAY,EACZC,YAAY;AAkBd,OAAO,SAASC,aAAaA,CAC3BC,QAA6C,EAAAC,IAAA,EAQ7C;EAAA,IANEC,YAAY,GAKbD,IAAA,CALCC,YAAY;IACZC,eAAA,GAIDF,IAAA,CAJCE,eAAA;EAMF,IAAMC,WAAW,GAAGX,SAAS,CAACO,QAAQ,CAAC;EACvCN,KAAK,CAACW,SAAS,CAAC,YAAM;IACpB,IAAIH,YAAY,EAAE;MAChB,IAAMI,YAAY,GAAGH,eAAe,CAACI,OAAO,IAAI,CAAC;MACjD,IAAMC,WAAW,GAAGb,SAAS,CAAC,IAAIc,IAAI,EAAE,EAAEZ,YAAY,CAACS,YAAY,CAAC,CAAC;MACrEE,WAAW,CAACE,WAAW,CAACR,YAAY,CAAC;MAErC,IAAMS,KAAK,GAAG,IAAIF,IAAI,EAAE;MACxB,IAAMG,MAAM,GAAGhB,kBAAkB,CAACe,KAAK,EAAEH,WAAW,CAAC;MAErD,IAAMK,QAAQ,GAAGf,YAAY,GAAGc,MAAM;MACtC,IAAIN,YAAY,KAAKO,QAAQ,EAAE;QAC7BT,WAAW,CAACG,OAAO,CAACM,QAAQ,CAAC;MAC/B;IACF;EACF,CAAC,EAAE,CAACV,eAAe,EAAEC,WAAW,EAAEF,YAAY,CAAC,CAAC;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
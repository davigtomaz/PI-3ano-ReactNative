{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as array from 'd3-array';\nimport * as scale from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Svg from 'react-native-svg';\nimport Path from \"../animated-path\";\nvar BarChart = function (_PureComponent) {\n  _inherits(BarChart, _PureComponent);\n  var _super = _createSuper(BarChart);\n  function BarChart() {\n    var _this;\n    _classCallCheck(this, BarChart);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      width: 0,\n      height: 0\n    });\n    return _this;\n  }\n  _createClass(BarChart, [{\n    key: \"_onLayout\",\n    value: function _onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n        height = _event$nativeEvent$la.height,\n        width = _event$nativeEvent$la.width;\n      this.setState({\n        height: height,\n        width: width\n      });\n    }\n  }, {\n    key: \"calcXScale\",\n    value: function calcXScale(domain) {\n      var data = this.props.data;\n      var _this$props = this.props,\n        horizontal = _this$props.horizontal,\n        _this$props$contentIn = _this$props.contentInset,\n        _this$props$contentIn2 = _this$props$contentIn.left,\n        left = _this$props$contentIn2 === void 0 ? 0 : _this$props$contentIn2,\n        _this$props$contentIn3 = _this$props$contentIn.right,\n        right = _this$props$contentIn3 === void 0 ? 0 : _this$props$contentIn3,\n        spacingInner = _this$props.spacingInner,\n        spacingOuter = _this$props.spacingOuter;\n      var width = this.state.width;\n      if (horizontal) {\n        return scale.scaleLinear().domain(domain).range([left, width - right]);\n      }\n      return scale.scaleBand().domain(data.map(function (_, index) {\n        return index;\n      })).range([left, width - right]).paddingInner([spacingInner]).paddingOuter([spacingOuter]);\n    }\n  }, {\n    key: \"calcYScale\",\n    value: function calcYScale(domain) {\n      var data = this.props.data;\n      var _this$props2 = this.props,\n        horizontal = _this$props2.horizontal,\n        _this$props2$contentI = _this$props2.contentInset,\n        _this$props2$contentI2 = _this$props2$contentI.top,\n        top = _this$props2$contentI2 === void 0 ? 0 : _this$props2$contentI2,\n        _this$props2$contentI3 = _this$props2$contentI.bottom,\n        bottom = _this$props2$contentI3 === void 0 ? 0 : _this$props2$contentI3,\n        spacingInner = _this$props2.spacingInner,\n        spacingOuter = _this$props2.spacingOuter;\n      var height = this.state.height;\n      if (horizontal) {\n        return scale.scaleBand().domain(data.map(function (_, index) {\n          return index;\n        })).range([top, height - bottom]).paddingInner([spacingInner]).paddingOuter([spacingOuter]);\n      }\n      return scale.scaleLinear().domain(domain).range([height - bottom, top]);\n    }\n  }, {\n    key: \"calcAreas\",\n    value: function calcAreas(x, y, series) {\n      var _this$props3 = this.props,\n        horizontal = _this$props3.horizontal,\n        colors = _this$props3.colors,\n        keys = _this$props3.keys;\n      if (horizontal) {\n        return array.merge(series.map(function (serie, keyIndex) {\n          return serie.map(function (entry, entryIndex) {\n            var path = shape.area().x0(function (d) {\n              return x(d[0]);\n            }).x1(function (d) {\n              return x(d[1]);\n            }).y(function (d, _index) {\n              return _index === 0 ? y(entryIndex) : y(entryIndex) + y.bandwidth();\n            }).defined(function (d) {\n              return !isNaN(d[0]) && !isNaN(d[1]);\n            })([entry, entry]);\n            return {\n              path: path,\n              color: colors[keyIndex],\n              key: keys[keyIndex]\n            };\n          });\n        }));\n      }\n      return array.merge(series.map(function (serie, keyIndex) {\n        return serie.map(function (entry, entryIndex) {\n          var path = shape.area().y0(function (d) {\n            return y(d[0]);\n          }).y1(function (d) {\n            return y(d[1]);\n          }).x(function (d, _index) {\n            return _index === 0 ? x(entryIndex) : x(entryIndex) + x.bandwidth();\n          }).defined(function (d) {\n            return !isNaN(d[0]) && !isNaN(d[1]);\n          })([entry, entry]);\n          return {\n            path: path,\n            color: colors[keyIndex],\n            key: keys[keyIndex]\n          };\n        });\n      }));\n    }\n  }, {\n    key: \"calcExtent\",\n    value: function calcExtent(values) {\n      var _this$props4 = this.props,\n        gridMax = _this$props4.gridMax,\n        gridMin = _this$props4.gridMin;\n      return array.extent([].concat(_toConsumableArray(values), [gridMin, gridMax]));\n    }\n  }, {\n    key: \"calcIndexes\",\n    value: function calcIndexes(values) {\n      return values.map(function (_, index) {\n        return index;\n      });\n    }\n  }, {\n    key: \"getSeries\",\n    value: function getSeries() {\n      var _this$props5 = this.props,\n        data = _this$props5.data,\n        keys = _this$props5.keys,\n        offset = _this$props5.offset,\n        order = _this$props5.order,\n        valueAccessor = _this$props5.valueAccessor;\n      return shape.stack().keys(keys).value(function (item, key) {\n        return valueAccessor({\n          item: item,\n          key: key\n        });\n      }).order(order).offset(offset)(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props6 = this.props,\n        data = _this$props6.data,\n        animate = _this$props6.animate,\n        animationDuration = _this$props6.animationDuration,\n        style = _this$props6.style,\n        numberOfTicks = _this$props6.numberOfTicks,\n        children = _this$props6.children,\n        horizontal = _this$props6.horizontal;\n      var _this$state = this.state,\n        height = _this$state.height,\n        width = _this$state.width;\n      if (data.length === 0) {\n        return React.createElement(View, {\n          style: style\n        });\n      }\n      var series = this.getSeries();\n      var values = array.merge(array.merge(series));\n      var indexes = this.calcIndexes(values);\n      var extent = this.calcExtent(values);\n      var ticks = array.ticks(extent[0], extent[1], numberOfTicks);\n      var xDomain = horizontal ? extent : indexes;\n      var yDomain = horizontal ? indexes : extent;\n      var x = this.calcXScale(xDomain);\n      var y = this.calcYScale(yDomain);\n      var bandwidth = horizontal ? y.bandwidth() : x.bandwidth();\n      var areas = this.calcAreas(x, y, series);\n      var extraProps = {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        ticks: ticks,\n        data: data,\n        bandwidth: bandwidth\n      };\n      return React.createElement(View, {\n        style: style\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        onLayout: function onLayout(event) {\n          return _this2._onLayout(event);\n        }\n      }, height > 0 && width > 0 && React.createElement(Svg, {\n        style: {\n          height: height,\n          width: width\n        }\n      }, React.Children.map(children, function (child) {\n        if (child && child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n        return null;\n      }), areas.map(function (bar, index) {\n        var keyIndex = index % data.length;\n        var key = \"\".concat(keyIndex, \"-\").concat(bar.key);\n        var svg = data[keyIndex][bar.key].svg;\n        return React.createElement(Path, _extends({\n          key: key,\n          fill: bar.color\n        }, svg, {\n          d: bar.path,\n          animate: animate,\n          animationDuration: animationDuration\n        }));\n      }), React.Children.map(children, function (child) {\n        if (child && !child.props.belowChart) {\n          return React.cloneElement(child, extraProps);\n        }\n        return null;\n      }))));\n    }\n  }], [{\n    key: \"extractDataPoints\",\n    value: function extractDataPoints(data, keys) {\n      var order = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : shape.stackOrderNone;\n      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : shape.stackOffsetNone;\n      var series = shape.stack().keys(keys).order(order).offset(offset)(data);\n      return array.merge(array.merge(series));\n    }\n  }]);\n  return BarChart;\n}(PureComponent);\nBarChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object),\n  keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n  offset: PropTypes.func,\n  order: PropTypes.func,\n  style: PropTypes.any,\n  spacingInner: PropTypes.number,\n  spacingOuter: PropTypes.number,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number\n  }),\n  gridMin: PropTypes.number,\n  gridMax: PropTypes.number,\n  valueAccessor: PropTypes.func\n};\nBarChart.defaultProps = {\n  spacingInner: 0.05,\n  spacingOuter: 0.05,\n  offset: shape.stackOffsetNone,\n  order: shape.stackOrderNone,\n  width: 100,\n  height: 100,\n  showZeroAxis: true,\n  contentInset: {},\n  numberOfTicks: 10,\n  showGrid: true,\n  valueAccessor: function valueAccessor(_ref) {\n    var item = _ref.item,\n      key = _ref.key;\n    return item[key];\n  }\n};\nexport default BarChart;","map":{"version":3,"names":["array","scale","shape","PropTypes","React","PureComponent","View","Svg","Path","BarChart","_PureComponent","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","width","height","_createClass","key","value","_onLayout","event","_event$nativeEvent$la","nativeEvent","layout","setState","calcXScale","domain","data","props","_this$props","horizontal","_this$props$contentIn","contentInset","_this$props$contentIn2","left","_this$props$contentIn3","right","spacingInner","spacingOuter","state","scaleLinear","range","scaleBand","map","_","index","paddingInner","paddingOuter","calcYScale","_this$props2","_this$props2$contentI","_this$props2$contentI2","top","_this$props2$contentI3","bottom","calcAreas","x","y","series","_this$props3","colors","keys","merge","serie","keyIndex","entry","entryIndex","path","area","x0","d","x1","_index","bandwidth","defined","isNaN","color","y0","y1","calcExtent","values","_this$props4","gridMax","gridMin","extent","_toConsumableArray","calcIndexes","getSeries","_this$props5","offset","order","valueAccessor","stack","item","render","_this2","_this$props6","animate","animationDuration","style","numberOfTicks","children","_this$state","createElement","indexes","ticks","xDomain","yDomain","areas","extraProps","flex","onLayout","Children","child","belowChart","cloneElement","bar","svg","_extends","fill","extractDataPoints","undefined","stackOrderNone","stackOffsetNone","propTypes","arrayOf","object","string","isRequired","func","any","number","bool","defaultProps","showZeroAxis","showGrid","_ref"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-svg-charts/lib/module/stacked-bar-chart/stacked-bar-chart.js"],"sourcesContent":["import * as array from 'd3-array'\nimport * as scale from 'd3-scale'\nimport * as shape from 'd3-shape'\nimport PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\nimport { View } from 'react-native'\nimport Svg from 'react-native-svg'\nimport Path from '../animated-path'\n\nclass BarChart extends PureComponent {\n    static extractDataPoints(data, keys, order = shape.stackOrderNone, offset = shape.stackOffsetNone) {\n        const series = shape\n            .stack()\n            .keys(keys)\n            .order(order)\n            .offset(offset)(data)\n\n        //double merge arrays to extract just the values\n        return array.merge(array.merge(series))\n    }\n\n    state = {\n        width: 0,\n        height: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    calcXScale(domain) {\n        const { data } = this.props\n\n        const {\n            horizontal,\n            contentInset: { left = 0, right = 0 },\n            spacingInner,\n            spacingOuter,\n        } = this.props\n\n        const { width } = this.state\n\n        if (horizontal) {\n            return scale\n                .scaleLinear()\n                .domain(domain)\n                .range([left, width - right])\n        }\n\n        // use index as domain identifier instead of value since\n        // domain must be same length as number of bars\n        // same value can occur at several places in data\n        return scale\n            .scaleBand()\n            .domain(data.map((_, index) => index))\n            .range([left, width - right])\n            .paddingInner([spacingInner])\n            .paddingOuter([spacingOuter])\n    }\n\n    calcYScale(domain) {\n        const { data } = this.props\n\n        const {\n            horizontal,\n            contentInset: { top = 0, bottom = 0 },\n            spacingInner,\n            spacingOuter,\n        } = this.props\n\n        const { height } = this.state\n\n        if (horizontal) {\n            return scale\n                .scaleBand()\n                .domain(data.map((_, index) => index))\n                .range([top, height - bottom])\n                .paddingInner([spacingInner])\n                .paddingOuter([spacingOuter])\n        }\n\n        return scale\n            .scaleLinear()\n            .domain(domain)\n            .range([height - bottom, top])\n    }\n\n    calcAreas(x, y, series) {\n        const { horizontal, colors, keys } = this.props\n\n        if (horizontal) {\n            return array.merge(\n                series.map((serie, keyIndex) => {\n                    return serie.map((entry, entryIndex) => {\n                        const path = shape\n                            .area()\n                            .x0((d) => x(d[0]))\n                            .x1((d) => x(d[1]))\n                            .y((d, _index) => (_index === 0 ? y(entryIndex) : y(entryIndex) + y.bandwidth()))\n                            .defined((d) => !isNaN(d[0]) && !isNaN(d[1]))([entry, entry])\n\n                        return {\n                            path,\n                            color: colors[keyIndex],\n                            key: keys[keyIndex],\n                        }\n                    })\n                })\n            )\n        }\n\n        return array.merge(\n            series.map((serie, keyIndex) => {\n                return serie.map((entry, entryIndex) => {\n                    const path = shape\n                        .area()\n                        .y0((d) => y(d[0]))\n                        .y1((d) => y(d[1]))\n                        .x((d, _index) => (_index === 0 ? x(entryIndex) : x(entryIndex) + x.bandwidth()))\n                        .defined((d) => !isNaN(d[0]) && !isNaN(d[1]))([entry, entry])\n\n                    return {\n                        path,\n                        color: colors[keyIndex],\n                        key: keys[keyIndex],\n                    }\n                })\n            })\n        )\n    }\n\n    calcExtent(values) {\n        const { gridMax, gridMin } = this.props\n\n        return array.extent([...values, gridMin, gridMax])\n    }\n\n    calcIndexes(values) {\n        return values.map((_, index) => index)\n    }\n\n    getSeries() {\n        const { data, keys, offset, order, valueAccessor } = this.props\n\n        return shape\n            .stack()\n            .keys(keys)\n            .value((item, key) => valueAccessor({ item, key }))\n            .order(order)\n            .offset(offset)(data)\n    }\n\n    render() {\n        const { data, animate, animationDuration, style, numberOfTicks, children, horizontal } = this.props\n\n        const { height, width } = this.state\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const series = this.getSeries()\n\n        //double merge arrays to extract just the values\n        const values = array.merge(array.merge(series))\n        const indexes = this.calcIndexes(values)\n\n        const extent = this.calcExtent(values)\n        const ticks = array.ticks(extent[0], extent[1], numberOfTicks)\n\n        const xDomain = horizontal ? extent : indexes\n        const yDomain = horizontal ? indexes : extent\n\n        const x = this.calcXScale(xDomain)\n        const y = this.calcYScale(yDomain)\n\n        const bandwidth = horizontal ? y.bandwidth() : x.bandwidth()\n\n        const areas = this.calcAreas(x, y, series)\n\n        const extraProps = {\n            x,\n            y,\n            width,\n            height,\n            ticks,\n            data,\n            bandwidth,\n        }\n\n        return (\n            <View style={style}>\n                <View style={{ flex: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {height > 0 && width > 0 && (\n                        <Svg style={{ height, width }}>\n                            {React.Children.map(children, (child) => {\n                                if (child && child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                            {areas.map((bar, index) => {\n                                const keyIndex = index % data.length\n                                const key = `${keyIndex}-${bar.key}`\n                                const { svg } = data[keyIndex][bar.key]\n\n                                return (\n                                    <Path\n                                        key={key}\n                                        fill={bar.color}\n                                        {...svg}\n                                        d={bar.path}\n                                        animate={animate}\n                                        animationDuration={animationDuration}\n                                    />\n                                )\n                            })}\n                            {React.Children.map(children, (child) => {\n                                if (child && !child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nBarChart.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n    colors: PropTypes.arrayOf(PropTypes.string).isRequired,\n    offset: PropTypes.func,\n    order: PropTypes.func,\n    style: PropTypes.any,\n    spacingInner: PropTypes.number,\n    spacingOuter: PropTypes.number,\n    animate: PropTypes.bool,\n    animationDuration: PropTypes.number,\n    contentInset: PropTypes.shape({\n        top: PropTypes.number,\n        left: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n    }),\n    gridMin: PropTypes.number,\n    gridMax: PropTypes.number,\n    valueAccessor: PropTypes.func,\n}\n\nBarChart.defaultProps = {\n    spacingInner: 0.05,\n    spacingOuter: 0.05,\n    offset: shape.stackOffsetNone,\n    order: shape.stackOrderNone,\n    width: 100,\n    height: 100,\n    showZeroAxis: true,\n    contentInset: {},\n    numberOfTicks: 10,\n    showGrid: true,\n    valueAccessor: ({ item, key }) => item[key],\n}\n\nexport default BarChart\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useMemo } from 'react';\nimport chroma from 'chroma-js';\nimport { useTheme } from \"../base/ThemeContext\";\nimport { useSurfaceScale } from \"./use-surface-scale\";\nvar domain = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24].map(function (n) {\n  return n / 24 * 100;\n});\nexport var useSurfaceColor = function useSurfaceColor() {\n  var _useTheme = useTheme(),\n    colorScheme = _useTheme.colorScheme;\n  var surfaceScale = useSurfaceScale();\n  return useMemo(function () {\n    if (colorScheme === 'light') return chroma.scale([surfaceScale(0)]);\n    return chroma.scale([0, 0.05, 0.07, 0.08, 0.09, 0.11, 0.12, 0.14, 0.15, 0.1].map(function (c) {\n      return surfaceScale(c);\n    })).domain(domain);\n  }, [colorScheme, surfaceScale]);\n};\nexport var useSurfaceColorValue = function useSurfaceColorValue(elevation) {\n  var surfaceScale = useSurfaceColor();\n  return useMemo(function () {\n    return surfaceScale(elevation).hex();\n  }, [surfaceScale, elevation]);\n};","map":{"version":3,"names":["useMemo","chroma","useTheme","useSurfaceScale","domain","map","n","useSurfaceColor","_useTheme","colorScheme","surfaceScale","scale","c","useSurfaceColorValue","elevation","hex"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/@react-native-material/core/lib/module/hooks/use-surface-color.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport chroma from 'chroma-js';\nimport { Elevation, useTheme } from '../base/ThemeContext';\nimport { useSurfaceScale } from './use-surface-scale';\n\nconst domain = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24].map((n) => (n / 24) * 100);\n\nexport const useSurfaceColor = () => {\n  const { colorScheme } = useTheme();\n  const surfaceScale = useSurfaceScale();\n\n  return useMemo(() => {\n    if (colorScheme === 'light') return chroma.scale([surfaceScale(0)]);\n    return chroma\n      .scale([0, 0.05, 0.07, 0.08, 0.09, 0.11, 0.12, 0.14, 0.15, 0.1].map((c) => surfaceScale(c)))\n      .domain(domain);\n  }, [colorScheme, surfaceScale]);\n};\n\nexport const useSurfaceColorValue = (elevation: Elevation) => {\n  const surfaceScale = useSurfaceColor();\n\n  return useMemo(() => surfaceScale(elevation).hex(), [surfaceScale, elevation]);\n};\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAoBC,QAApB;AACA,SAASC,eAAT;AAEA,IAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkCC,GAAlC,CAAuC,UAAAC,CAAD;EAAA,OAAQA,CAAC,GAAG,EAAL,GAAW,GAAxD;AAAA,EAAf;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EACnC,IAAAC,SAAA,GAAwBN,QAAQ,EAAhC;IAAQO,WAAA,GAAAD,SAAA,CAAAC,WAAA;EACR,IAAMC,YAAY,GAAGP,eAAe,EAApC;EAEA,OAAOH,OAAO,CAAC,YAAM;IACnB,IAAIS,WAAW,KAAK,OAApB,EAA6B,OAAOR,MAAM,CAACU,KAAP,CAAa,CAACD,YAAY,CAAC,CAAD,CAAb,CAAb,CAAP;IAC7B,OAAOT,MAAM,CACVU,KADI,CACE,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,GAApD,EAAyDN,GAAzD,CAA8D,UAAAO,CAAD;MAAA,OAAOF,YAAY,CAACE,CAAD,CAAhF;IAAA,EADF,EAEJR,MAFI,CAEGA,MAFH,CAAP;EAGD,CALa,EAKX,CAACK,WAAD,EAAcC,YAAd,CALW,CAAd;AAMD,CAVM;AAYP,OAAO,IAAMG,oBAAoB,GAAI,SAAxBA,oBAAoBA,CAAIC,SAAD,EAA0B;EAC5D,IAAMJ,YAAY,GAAGH,eAAe,EAApC;EAEA,OAAOP,OAAO,CAAC;IAAA,OAAMU,YAAY,CAACI,SAAD,CAAZ,CAAwBC,GAAxB,EAAP;EAAA,GAAsC,CAACL,YAAD,EAAeI,SAAf,CAAtC,CAAd;AACD,CAJM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
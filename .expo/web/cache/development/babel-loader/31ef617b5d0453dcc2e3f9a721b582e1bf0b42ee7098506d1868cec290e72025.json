{"ast":null,"code":"import React, { createContext, useContext, useMemo } from 'react';\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { darkTheme, defaultTheme } from \"./defaultTheme\";\nexport var ThemeContext = createContext(defaultTheme);\nexport var useTheme = function useTheme() {\n  return useContext(ThemeContext);\n};\nexport var ThemeProvider = function ThemeProvider(_ref) {\n  var theme = _ref.theme,\n    children = _ref.children;\n  var colorScheme = useColorScheme();\n  var value = useMemo(function () {\n    return theme ? theme : colorScheme === 'dark' ? darkTheme : defaultTheme;\n  }, [colorScheme, theme]);\n  return React.createElement(ThemeContext.Provider, {\n    value: value\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useContext","useMemo","useColorScheme","darkTheme","defaultTheme","ThemeContext","useTheme","ThemeProvider","_ref","theme","children","colorScheme","value","createElement","Provider"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/@react-native-material/core/lib/module/base/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { ImageStyle, TextStyle, useColorScheme, ViewStyle } from 'react-native';\nimport { darkTheme, defaultTheme } from './defaultTheme';\n\nexport type ColorScheme = 'light' | 'dark';\n\nexport type Elevation =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport type Elevations = Record<Elevation, ViewStyle | TextStyle | ImageStyle>;\n\nexport type PaletteColorName = 'primary' | 'secondary' | 'background' | 'surface' | 'error' | string;\n\nexport type PaletteColor = { main: string; on: string };\n\nexport type Palette = Record<PaletteColorName, PaletteColor>;\n\nexport type ShapeCategory = 'small' | 'medium' | 'large';\n\nexport interface ShapeBorderRadius {\n  borderTopStartRadius: number;\n  borderTopEndRadius: number;\n  borderBottomStartRadius: number;\n  borderBottomEndRadius: number;\n}\n\nexport type Shapes = Record<ShapeCategory, ShapeBorderRadius>;\n\nexport type TypographyVariant =\n  | 'h1'\n  | 'h2'\n  | 'h3'\n  | 'h4'\n  | 'h5'\n  | 'h6'\n  | 'subtitle1'\n  | 'subtitle2'\n  | 'body1'\n  | 'body2'\n  | 'button'\n  | 'caption'\n  | 'overline';\n\nexport type Typography = Record<TypographyVariant, TextStyle>;\n\nexport interface Theme {\n  colorScheme: ColorScheme;\n  elevations: Elevations;\n  palette: Palette;\n  shapes: Shapes;\n  typography: Typography;\n}\n\nexport interface ThemeProviderProps {\n  theme?: Theme;\n}\n\nexport const ThemeContext = createContext<Theme>(defaultTheme);\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ theme, children }) => {\n  const colorScheme = useColorScheme();\n\n  const value = useMemo(\n    () => (theme ? theme : colorScheme === 'dark' ? darkTheme : defaultTheme),\n    [colorScheme, theme]\n  );\n\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,QAA0D,OAA1D;AAAA,OAAAC,cAAA;AAEA,SAASC,SAAT,EAAoBC,YAApB;AA+EA,OAAO,IAAMC,YAAY,GAAGN,aAAa,CAAQK,YAAR,CAAlC;AAEP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAASN,UAAU,CAACK,YAAD,CAAjC;AAAA;AAEP,OAAO,IAAME,aAA2C,GAAG,SAA9CA,aAA2CA,CAAGC,IAAA,EAAyB;EAAA,IAAtBC,KAAF,GAAwBD,IAAA,CAAtBC,KAAF;IAASC,QAAA,GAAeF,IAAA,CAAfE,QAAA;EACnE,IAAMC,WAAW,GAAGT,cAAc,EAAlC;EAEA,IAAMU,KAAK,GAAGX,OAAO,CACnB;IAAA,OAAOQ,KAAK,GAAGA,KAAH,GAAWE,WAAW,KAAK,MAAhB,GAAyBR,SAAzB,GAAqCC,YADzC;EAAA,GAEnB,CAACO,WAAD,EAAcF,KAAd,CAFmB,CAArB;EAKA,OAAOX,KAAA,CAAAe,aAAA,CAACR,YAAD,CAAcS,QAAd;IAAuBF,KAAK,EAAEA;EAA9B,GAAsCF,QAAtC,CAAP;AACD,CATM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var meetOrSliceTypes = {\n  meet: 0,\n  slice: 1,\n  none: 2\n};\nvar alignEnum = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\", \"xMinYMid\", \"xMidYMid\", \"xMaxYMid\", \"xMinYMax\", \"xMidYMax\", \"xMaxYMax\", \"none\"].reduce(function (prev, name) {\n  prev[name] = name;\n  return prev;\n}, {});\nvar spacesRegExp = /\\s+/;\nexport default function (props) {\n  var viewBox = props.viewBox,\n    preserveAspectRatio = props.preserveAspectRatio;\n  if (!viewBox) {\n    return null;\n  }\n  var params = viewBox.trim().split(spacesRegExp);\n  if (params.length === 4 && params.some(function (param) {\n    return isNaN(+param);\n  })) {\n    console.warn(\"Invalid `viewBox` prop:\" + viewBox);\n    return null;\n  }\n  var modes = preserveAspectRatio ? preserveAspectRatio.trim().split(spacesRegExp) : [];\n  var meetOrSlice = meetOrSliceTypes[modes[1]] || 0;\n  var align = alignEnum[modes[0]] || \"xMidYMid\";\n  return {\n    minX: +params[0],\n    minY: +params[1],\n    vbWidth: +params[2],\n    vbHeight: +params[3],\n    align: align,\n    meetOrSlice: meetOrSlice\n  };\n}\nexport { meetOrSliceTypes, alignEnum };","map":{"version":3,"names":["meetOrSliceTypes","meet","slice","none","alignEnum","reduce","prev","name","spacesRegExp","props","viewBox","preserveAspectRatio","params","trim","split","length","some","param","isNaN","console","warn","modes","meetOrSlice","align","minX","minY","vbWidth","vbHeight"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-svg/lib/extract/extractViewBox.js"],"sourcesContent":["const meetOrSliceTypes = {\n    meet: 0,\n    slice: 1,\n    none: 2,\n};\n\nconst alignEnum = [\n    \"xMinYMin\",\n    \"xMidYMin\",\n    \"xMaxYMin\",\n    \"xMinYMid\",\n    \"xMidYMid\",\n    \"xMaxYMid\",\n    \"xMinYMax\",\n    \"xMidYMax\",\n    \"xMaxYMax\",\n    \"none\",\n].reduce((prev, name) => {\n    prev[name] = name;\n    return prev;\n}, {});\n\nconst spacesRegExp = /\\s+/;\n\nexport default function(props) {\n    const { viewBox, preserveAspectRatio } = props;\n\n    if (!viewBox) {\n        return null;\n    }\n\n    const params = viewBox.trim().split(spacesRegExp);\n\n    if (params.length === 4 && params.some(param => isNaN(+param))) {\n        console.warn(\"Invalid `viewBox` prop:\" + viewBox);\n        return null;\n    }\n\n    const modes = preserveAspectRatio\n        ? preserveAspectRatio.trim().split(spacesRegExp)\n        : [];\n\n    const meetOrSlice = meetOrSliceTypes[modes[1]] || 0;\n    const align = alignEnum[modes[0]] || \"xMidYMid\";\n\n    return {\n        minX: +params[0],\n        minY: +params[1],\n        vbWidth: +params[2],\n        vbHeight: +params[3],\n        align,\n        meetOrSlice,\n    };\n}\n\nexport { meetOrSliceTypes, alignEnum };\n"],"mappings":"AAAA,IAAMA,gBAAgB,GAAG;EACrBC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE;AACV,CAAC;AAED,IAAMC,SAAS,GAAG,CACd,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,MAAM,CACT,CAACC,MAAM,CAAC,UAACC,IAAI,EAAEC,IAAI,EAAK;EACrBD,IAAI,CAACC,IAAI,CAAC,GAAGA,IAAI;EACjB,OAAOD,IAAI;AACf,CAAC,EAAE,CAAC,CAAC,CAAC;AAEN,IAAME,YAAY,GAAG,KAAK;AAE1B,eAAe,UAASC,KAAK,EAAE;EAC3B,IAAQC,OAAO,GAA0BD,KAAK,CAAtCC,OAAO;IAAEC,mBAAmB,GAAKF,KAAK,CAA7BE,mBAAmB;EAEpC,IAAI,CAACD,OAAO,EAAE;IACV,OAAO,IAAI;EACf;EAEA,IAAME,MAAM,GAAGF,OAAO,CAACG,IAAI,EAAE,CAACC,KAAK,CAACN,YAAY,CAAC;EAEjD,IAAII,MAAM,CAACG,MAAM,KAAK,CAAC,IAAIH,MAAM,CAACI,IAAI,CAAC,UAAAC,KAAK;IAAA,OAAIC,KAAK,CAAC,CAACD,KAAK,CAAC;EAAA,EAAC,EAAE;IAC5DE,OAAO,CAACC,IAAI,CAAC,yBAAyB,GAAGV,OAAO,CAAC;IACjD,OAAO,IAAI;EACf;EAEA,IAAMW,KAAK,GAAGV,mBAAmB,GAC3BA,mBAAmB,CAACE,IAAI,EAAE,CAACC,KAAK,CAACN,YAAY,CAAC,GAC9C,EAAE;EAER,IAAMc,WAAW,GAAGtB,gBAAgB,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;EACnD,IAAME,KAAK,GAAGnB,SAAS,CAACiB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU;EAE/C,OAAO;IACHG,IAAI,EAAE,CAACZ,MAAM,CAAC,CAAC,CAAC;IAChBa,IAAI,EAAE,CAACb,MAAM,CAAC,CAAC,CAAC;IAChBc,OAAO,EAAE,CAACd,MAAM,CAAC,CAAC,CAAC;IACnBe,QAAQ,EAAE,CAACf,MAAM,CAAC,CAAC,CAAC;IACpBW,KAAK,EAALA,KAAK;IACLD,WAAW,EAAXA;EACJ,CAAC;AACL;AAEA,SAAStB,gBAAgB,EAAEI,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
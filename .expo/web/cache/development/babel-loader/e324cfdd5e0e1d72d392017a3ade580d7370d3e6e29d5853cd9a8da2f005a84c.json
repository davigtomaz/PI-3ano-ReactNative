{"ast":null,"code":"var translationsPerLocale = {};\nexport function getTranslation(locale, key, fallback) {\n  var l = locale || 'en';\n  var translationForLocale = translationsPerLocale[l];\n  if (!translationForLocale) {\n    console.warn(\"[react-native-paper-dates] The locale \" + locale + \" is not registered, see README!, key: \" + key);\n    return fallback || key;\n  }\n  var translation = translationsPerLocale[l][key];\n  if (!translation) {\n    console.warn(\"[react-native-paper-dates] The locale \" + locale + \" is registered, but \" + key + \" is missing\");\n  }\n  return translation || fallback || key;\n}\nexport function registerTranslation(locale, translations) {\n  translationsPerLocale[locale] = translations;\n}","map":{"version":3,"names":["translationsPerLocale","getTranslation","locale","key","fallback","l","translationForLocale","console","warn","translation","registerTranslation","translations"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-paper-dates/src/translations/utils.ts"],"sourcesContent":["export type TranslationsType = {\n  selectSingle: string\n  selectMultiple: string\n  selectRange: string\n  save: string\n  notAccordingToDateFormat: (inputFormat: string) => string\n  mustBeHigherThan: (date: string) => string\n  mustBeLowerThan: (date: string) => string\n  mustBeBetween: (startDate: string, endDate: string) => string\n  dateIsDisabled: string\n  previous: string\n  next: string\n  typeInDate: string\n  pickDateFromCalendar: string\n  close: string\n}\n\nlet translationsPerLocale: Record<string, TranslationsType> = {}\n\nexport function getTranslation<K extends keyof TranslationsType>(\n  locale: string | undefined,\n  key: K,\n  fallback?: any\n) {\n  const l = locale || 'en'\n  const translationForLocale = translationsPerLocale[l]\n  if (!translationForLocale) {\n    console.warn(\n      `[react-native-paper-dates] The locale ${locale} is not registered, see README!, key: ${key}`\n    )\n    return fallback || key\n  }\n  const translation = translationsPerLocale[l][key]\n  if (!translation) {\n    console.warn(\n      `[react-native-paper-dates] The locale ${locale} is registered, but ${key} is missing`\n    )\n  }\n  return translation || fallback || key\n}\n\nexport function registerTranslation(\n  locale: string,\n  translations: TranslationsType\n) {\n  translationsPerLocale[locale] = translations\n}\n"],"mappings":"AAiBA,IAAIA,qBAAuD,GAAG,CAAC,CAAC;AAEhE,OAAO,SAASC,cAAcA,CAC5BC,MAA0B,EAC1BC,GAAM,EACNC,QAAc,EACd;EACA,IAAMC,CAAC,GAAGH,MAAM,IAAI,IAAI;EACxB,IAAMI,oBAAoB,GAAGN,qBAAqB,CAACK,CAAC,CAAC;EACrD,IAAI,CAACC,oBAAoB,EAAE;IACzBC,OAAO,CAACC,IAAI,4CAC+BN,MAAO,8CAAwCC,GAAI,CAC7F;IACD,OAAOC,QAAQ,IAAID,GAAG;EACxB;EACA,IAAMM,WAAW,GAAGT,qBAAqB,CAACK,CAAC,CAAC,CAACF,GAAG,CAAC;EACjD,IAAI,CAACM,WAAW,EAAE;IAChBF,OAAO,CAACC,IAAI,4CAC+BN,MAAO,4BAAsBC,GAAI,iBAC3E;EACH;EACA,OAAOM,WAAW,IAAIL,QAAQ,IAAID,GAAG;AACvC;AAEA,OAAO,SAASO,mBAAmBA,CACjCR,MAAc,EACdS,YAA8B,EAC9B;EACAX,qBAAqB,CAACE,MAAM,CAAC,GAAGS,YAAY;AAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}
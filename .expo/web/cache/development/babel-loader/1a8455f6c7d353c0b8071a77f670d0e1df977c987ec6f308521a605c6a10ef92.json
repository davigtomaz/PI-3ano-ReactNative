{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { IconButton, useTheme } from 'react-native-paper';\nimport DayNames, { dayNamesHeight } from \"./DayNames\";\nimport { getTranslation } from \"../translations/utils\";\nvar buttonContainerHeight = 56;\nvar buttonContainerMarginTop = 4;\nvar buttonContainerMarginBottom = 8;\nexport function getCalendarHeaderHeight(scrollMode) {\n  if (scrollMode === 'horizontal') {\n    return buttonContainerHeight + buttonContainerMarginTop + buttonContainerMarginBottom + dayNamesHeight;\n  }\n  return dayNamesHeight;\n}\nfunction CalendarHeader(_ref) {\n  var scrollMode = _ref.scrollMode,\n    onPrev = _ref.onPrev,\n    onNext = _ref.onNext,\n    disableWeekDays = _ref.disableWeekDays,\n    locale = _ref.locale;\n  var theme = useTheme();\n  var isHorizontal = scrollMode === 'horizontal';\n  return React.createElement(View, {\n    style: styles.datePickerHeader,\n    pointerEvents: 'box-none'\n  }, isHorizontal ? React.createElement(View, {\n    style: styles.buttonContainer,\n    pointerEvents: 'box-none'\n  }, React.createElement(View, {\n    style: styles.spacer,\n    pointerEvents: 'box-none'\n  }), React.createElement(View, {\n    style: [styles.buttonWrapper, {\n      backgroundColor: theme.colors.surface\n    }]\n  }, React.createElement(IconButton, {\n    icon: \"chevron-left\",\n    accessibilityLabel: getTranslation(locale, 'previous'),\n    onPress: onPrev\n  })), React.createElement(View, {\n    style: [styles.buttonWrapper, {\n      backgroundColor: theme.colors.surface\n    }]\n  }, React.createElement(IconButton, {\n    icon: \"chevron-right\",\n    accessibilityLabel: getTranslation(locale, 'next'),\n    onPress: onNext\n  }))) : null, React.createElement(DayNames, {\n    disableWeekDays: disableWeekDays,\n    locale: locale\n  }));\n}\nvar styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonWrapper: {},\n  spacer: {\n    flex: 1\n  }\n});\nexport default React.memo(CalendarHeader);","map":{"version":3,"names":["React","StyleSheet","View","IconButton","useTheme","DayNames","dayNamesHeight","getTranslation","buttonContainerHeight","buttonContainerMarginTop","buttonContainerMarginBottom","getCalendarHeaderHeight","scrollMode","CalendarHeader","_ref","onPrev","onNext","disableWeekDays","locale","theme","isHorizontal","createElement","style","styles","datePickerHeader","pointerEvents","buttonContainer","spacer","buttonWrapper","backgroundColor","colors","surface","icon","accessibilityLabel","onPress","create","position","top","right","left","zIndex","height","marginTop","marginBottom","flexDirection","alignItems","flex","memo"],"sources":["/home/davigtomaz/PI-3ano-ReactNative/node_modules/react-native-paper-dates/src/Date/CalendarHeader.tsx"],"sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport DayNames, { dayNamesHeight } from './DayNames'\nimport type { DisableWeekDaysType } from './dateUtils'\nimport { getTranslation } from '../translations/utils'\n\nconst buttonContainerHeight = 56\nconst buttonContainerMarginTop = 4\nconst buttonContainerMarginBottom = 8\n\nexport function getCalendarHeaderHeight(scrollMode: 'horizontal' | 'vertical') {\n  if (scrollMode === 'horizontal') {\n    return (\n      buttonContainerHeight +\n      buttonContainerMarginTop +\n      buttonContainerMarginBottom +\n      dayNamesHeight\n    )\n  }\n  return dayNamesHeight\n}\n\nfunction CalendarHeader({\n  scrollMode,\n  onPrev,\n  onNext,\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  onPrev: () => any\n  onNext: () => any\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const isHorizontal = scrollMode === 'horizontal'\n  return (\n    <View style={styles.datePickerHeader} pointerEvents={'box-none'}>\n      {isHorizontal ? (\n        <View style={styles.buttonContainer} pointerEvents={'box-none'}>\n          <View style={styles.spacer} pointerEvents={'box-none'} />\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-left\"\n              accessibilityLabel={getTranslation(locale, 'previous')}\n              onPress={onPrev}\n            />\n          </View>\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-right\"\n              accessibilityLabel={getTranslation(locale, 'next')}\n              onPress={onNext}\n            />\n          </View>\n        </View>\n      ) : null}\n      <DayNames disableWeekDays={disableWeekDays} locale={locale} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10,\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  buttonWrapper: {},\n  spacer: { flex: 1 },\n})\n\nexport default React.memo(CalendarHeader)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}